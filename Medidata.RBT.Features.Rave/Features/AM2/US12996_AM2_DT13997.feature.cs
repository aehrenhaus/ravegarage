// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.AM2
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class SubmittedDefaultValuesWillRemainPresentOnTheECRFWhenTheCodedValuesOfTheDataDictionaryHaveBeenChangeOrReordered_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US12996_AM2_DT13997.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Submitted default values will remain present on the eCRF when the coded values of" +
                    " the data dictionary have been change or reordered.", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Submitted default values will remain present on the eCRF when the coded values of" +
                            " the data dictionary have been change or reordered.")))
            {
                Medidata.RBT.Features.Rave.Features.AM2.SubmittedDefaultValuesWillRemainPresentOnTheECRFWhenTheCodedValuesOfTheDataDictionaryHaveBeenChangeOrReordered_Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 10
testRunner.Given("I login to Rave with user \"defuser\"");
#line 11
testRunner.Given("xml draft \"DT13997 Upload First AM SJ_1.6.3.xml\" is Uploaded");
#line 12
testRunner.Given("xml draft \"DT13997 Upload Second AM SJ_1.6.5.xml\" is Uploaded");
#line 13
testRunner.Given("xml draft \"DT13997 Upload Third AM SJ_1.6.7.xml\" is Uploaded");
#line 14
testRunner.Given("xml draft \"DT13997 Upload Fourth AM SJ_1.6.9.xml\" is Uploaded");
#line 15
testRunner.Given("Site \"Site_001\" exists");
#line 16
testRunner.Given("study \"AM SJ\" is assigned to Site \"Site_001\"");
#line 17
testRunner.Given("role \"SUPER ROLE 2\" exists");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Draft",
                        "Form",
                        "Field"});
            table1.AddRow(new string[] {
                        "AM SJ",
                        "1.6.3",
                        "Form A",
                        "Field A"});
            table1.AddRow(new string[] {
                        "AM SJ",
                        "1.6.7",
                        "Form A",
                        "Field A"});
#line 18
testRunner.Given("Entry Restricted is set for role \"SUPER ROLE 2\" in", ((string)(null)), table1);
#line 22
testRunner.Given("I publish and push eCRF \"DT13997 Upload First AM SJ_1.6.3.xml\" to \"Version 1\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Project",
                        "Environment",
                        "Role",
                        "Site",
                        "SecurityRole"});
            table2.AddRow(new string[] {
                        "SUPER USER 1",
                        "AM SJ",
                        "Live: Prod",
                        "SUPER ROLE 1",
                        "Site_001",
                        "Project Admin Default"});
            table2.AddRow(new string[] {
                        "SUPER USER 2",
                        "AM SJ",
                        "Live: Prod",
                        "SUPER ROLE 2",
                        "Site_001",
                        "Project Admin Default"});
#line 23
testRunner.Given("following Project assignments exist", ((string)(null)), table2);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"When a user navigates to Architect, changes the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates the subject, then user navigate to EDC and sees that the defaulted values for the subject are present.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Submitted default values will remain present on the eCRF when the coded values of" +
            " the data dictionary have been change or reordered.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_2012.1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DT13997_10")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WIP")]
        public virtual void WhenAUserNavigatesToArchitectChangesTheCodedValuesOfADataDictionaryCreatesANewCRFVersionCreatesAMigrationPlanWithTheNewCRFVersionAsTheTargetCRFVersionInObjectMappingMapsTheDataDictionaryAndMigratesTheSubjectThenUserNavigateToEDCAndSeesThatTheDefaultedValuesForTheSubjectArePresent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When a user navigates to Architect, changes the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates the subject, then user navigate to EDC and sees that the defaulted values for the subject are present.", new string[] {
                        "release_2012.1.0",
                        "DT13997_10",
                        "WIP"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 41
testRunner.Given("I login to Rave with user \"SUPER USER 1\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Subject Number (3 digits)",
                        "{RndNum<num1>(3)}"});
            table3.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table3.AddRow(new string[] {
                        "Derivation Migration Testing",
                        "{RndNum<num1>(3)}"});
#line 42
testRunner.Given("I create a Subject", ((string)(null)), table3);
#line 47
testRunner.And("I submit the form \"Form A\"");
#line 48
testRunner.And("I take a screenshot");
#line 49
testRunner.Given("I publish and push eCRF \"DT13997 Upload Second AM SJ_1.6.5.xml\" to \"Version 2\"");
#line 50
testRunner.And("I go to Amendment Manager for study \"AM SJ\"");
#line 51
testRunner.And("I select Source CRF version \"Version 1\"");
#line 52
testRunner.And("I select Target CRF version \"Version 2\"");
#line 53
testRunner.And("I create migration plan");
#line 54
testRunner.And("I take a screenshot");
#line 55
testRunner.And("I execute plan for subject \"{Var(num1)}\"");
#line 56
testRunner.And("I select link \"Migration Results\"");
#line 57
testRunner.And("I take a screenshot");
#line 58
testRunner.And("I verify Job Status is set to Complete");
#line 59
testRunner.And("I navigate to \"Home\"");
#line 60
testRunner.And("I select a Subject \"{Var(num1)}\"");
#line 61
testRunner.When("I select form \"Form A\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Values"});
            table4.AddRow(new string[] {
                        "Special Senses"});
            table4.AddRow(new string[] {
                        "Cardiovascular"});
            table4.AddRow(new string[] {
                        "Respiratory"});
            table4.AddRow(new string[] {
                        "Gastrointestinal"});
            table4.AddRow(new string[] {
                        "Hepatic/Bilary"});
            table4.AddRow(new string[] {
                        "Abdomen and Viscera"});
            table4.AddRow(new string[] {
                        "Genitouriary/Reproductive"});
            table4.AddRow(new string[] {
                        "Renal"});
            table4.AddRow(new string[] {
                        "Endocrine/Metabolic"});
#line 62
testRunner.Then("\"Field A\" has \"<Values>\" in order", ((string)(null)), table4);
#line 73
testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"When a user navigates to Architect, reorders the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates the subject, then user navigate to EDC and sees that the defaulted values for the subject are present.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Submitted default values will remain present on the eCRF when the coded values of" +
            " the data dictionary have been change or reordered.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_2012.1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DT13997_20")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WIP")]
        public virtual void WhenAUserNavigatesToArchitectReordersTheCodedValuesOfADataDictionaryCreatesANewCRFVersionCreatesAMigrationPlanWithTheNewCRFVersionAsTheTargetCRFVersionInObjectMappingMapsTheDataDictionaryAndMigratesTheSubjectThenUserNavigateToEDCAndSeesThatTheDefaultedValuesForTheSubjectArePresent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When a user navigates to Architect, reorders the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates the subject, then user navigate to EDC and sees that the defaulted values for the subject are present.", new string[] {
                        "release_2012.1.0",
                        "DT13997_20",
                        "WIP"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 80
testRunner.Given("I login to Rave with user \"SUPER USER 1\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Subject Number (3 digits)",
                        "{RndNum<num1>(3)}"});
            table5.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table5.AddRow(new string[] {
                        "Derivation Migration Testing",
                        "{RndNum<num1>(3)}"});
#line 81
testRunner.Given("I create a Subject", ((string)(null)), table5);
#line 86
testRunner.And("I submit the form \"Form A\"");
#line 87
testRunner.And("I take a screenshot");
#line 88
testRunner.And("I publish and push eCRF \"DT13997 Upload Third AM SJ_1.6.7.xml\" to \"Version 3\"");
#line 89
testRunner.And("I take a screenshot");
#line 90
testRunner.And("I go to Amendment Manager for study \"AM SJ\"");
#line 91
testRunner.And("I select Source CRF version \"Version 1\"");
#line 92
testRunner.And("I select Target CRF version \"Version 3\"");
#line 93
testRunner.And("I create migration plan");
#line 94
testRunner.And("I take a screenshot");
#line 95
testRunner.And("I execute plan for subject \"{Var(num1)}\"");
#line 96
testRunner.And("I select link \"Migration Results\"");
#line 97
testRunner.And("I verify Job Status is set to Complete");
#line 98
testRunner.And("I take a screenshot");
#line 99
testRunner.And("I navigate to \"Home\"");
#line 100
testRunner.And("I select a Subject \"{Var(num1)}\"");
#line 101
testRunner.When("I select form \"Form A\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Values"});
            table6.AddRow(new string[] {
                        "Special Senses"});
            table6.AddRow(new string[] {
                        "Cardiovascular"});
            table6.AddRow(new string[] {
                        "Respiratory"});
            table6.AddRow(new string[] {
                        "Gastrointestinal"});
            table6.AddRow(new string[] {
                        "Hepatic/Bilary"});
            table6.AddRow(new string[] {
                        "Abdomen and Viscera"});
            table6.AddRow(new string[] {
                        "Genitouriary/Reproductive"});
            table6.AddRow(new string[] {
                        "Renal"});
            table6.AddRow(new string[] {
                        "Endocrine/Metabolic"});
#line 103
testRunner.Then("\"Field A\" has \"<Values>\" in order", ((string)(null)), table6);
#line 114
testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"When a user navigates to Architect, changes the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates a subject that has been submitted by a user with role permissions to edit a field with defaulted values, then user navigate to EDC and sees that the defaulted values for the subject are present.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Submitted default values will remain present on the eCRF when the coded values of" +
            " the data dictionary have been change or reordered.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_2012.1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DT13997_30")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WIP")]
        public virtual void WhenAUserNavigatesToArchitectChangesTheCodedValuesOfADataDictionaryCreatesANewCRFVersionCreatesAMigrationPlanWithTheNewCRFVersionAsTheTargetCRFVersionInObjectMappingMapsTheDataDictionaryAndMigratesASubjectThatHasBeenSubmittedByAUserWithRolePermissionsToEditAFieldWithDefaultedValuesThenUserNavigateToEDCAndSeesThatTheDefaultedValuesForTheSubjectArePresent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When a user navigates to Architect, changes the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates a subject that has been submitted by a user with role permissions to edit a field with defaulted values, then user navigate to EDC and sees that the defaulted values for the subject are present.", new string[] {
                        "release_2012.1.0",
                        "DT13997_30",
                        "WIP"});
#line 119
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 121
testRunner.Given("I log in to Rave with user \"SUPER USER 2\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Subject Number (3 digits)",
                        "{RndNum<num1>(3)}"});
            table7.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table7.AddRow(new string[] {
                        "Derivation Migration Testing",
                        "{RndNum<num1>(3)}"});
#line 122
testRunner.Given("I create a Subject", ((string)(null)), table7);
#line 127
testRunner.And("I take a screenshot");
#line 128
testRunner.And("I submit the form \"Form A\"");
#line 129
testRunner.And("I take a screenshot");
#line 130
testRunner.And("I publish and push eCRF \"DT13997 Upload Second AM SJ_1.6.5.xml\" to \"Version 2\"");
#line 131
testRunner.And("I take a screenshot");
#line 132
testRunner.And("I go to Amendment Manager for study \"AM SJ\"");
#line 133
testRunner.And("I select Source CRF version \"Version 1\"");
#line 134
testRunner.And("I select Target CRF version \"Version 2\"");
#line 135
testRunner.And("I create migration plan");
#line 136
testRunner.And("I take a screenshot");
#line 137
testRunner.And("I execute plan for subject \"{Var(num1)}\"");
#line 138
testRunner.And("I select link \"Migration Results\"");
#line 139
testRunner.And("I verify Job Status is set to Complete");
#line 140
testRunner.And("I take a screenshot");
#line 141
testRunner.And("I navigate to \"Home\"");
#line 142
testRunner.And("I select a Subject \"{Var(num1)}\"");
#line 143
testRunner.When("I select form \"Form A\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Values"});
            table8.AddRow(new string[] {
                        "Special Senses"});
            table8.AddRow(new string[] {
                        "Cardiovascular"});
            table8.AddRow(new string[] {
                        "Respiratory"});
            table8.AddRow(new string[] {
                        "Gastrointestinal"});
            table8.AddRow(new string[] {
                        "Hepatic/Bilary"});
            table8.AddRow(new string[] {
                        "Abdomen and Viscera"});
            table8.AddRow(new string[] {
                        "Genitouriary/Reproductive"});
            table8.AddRow(new string[] {
                        "Renal"});
            table8.AddRow(new string[] {
                        "Endocrine/Metabolic"});
#line 144
testRunner.Then("\"Field A\" has \"<Values>\" in order", ((string)(null)), table8);
#line 155
testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"When a user navigates to Architect, reorders the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates a subject that has been submitted by a user with role permissions to edit a field with defaulted values, then user navigate to EDC and sees that the defaulted values for the subject are present.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Submitted default values will remain present on the eCRF when the coded values of" +
            " the data dictionary have been change or reordered.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_2012.1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DT13997_40")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WIP")]
        public virtual void WhenAUserNavigatesToArchitectReordersTheCodedValuesOfADataDictionaryCreatesANewCRFVersionCreatesAMigrationPlanWithTheNewCRFVersionAsTheTargetCRFVersionInObjectMappingMapsTheDataDictionaryAndMigratesASubjectThatHasBeenSubmittedByAUserWithRolePermissionsToEditAFieldWithDefaultedValuesThenUserNavigateToEDCAndSeesThatTheDefaultedValuesForTheSubjectArePresent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When a user navigates to Architect, reorders the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates a subject that has been submitted by a user with role permissions to edit a field with defaulted values, then user navigate to EDC and sees that the defaulted values for the subject are present.", new string[] {
                        "release_2012.1.0",
                        "DT13997_40",
                        "WIP"});
#line 160
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 162
testRunner.Given("I log in to Rave with user \"SUPER USER 2\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Subject Number (3 digits)",
                        "{RndNum<num1>(3)}"});
            table9.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table9.AddRow(new string[] {
                        "Derivation Migration Testing",
                        "{RndNum<num1>(3)}"});
#line 163
testRunner.Given("I create a Subject", ((string)(null)), table9);
#line 168
testRunner.And("I take a screenshot");
#line 169
testRunner.And("I submit the form \"Form A\"");
#line 170
testRunner.And("I take a screenshot");
#line 171
testRunner.And("I publish and push eCRF \"DT13997 Upload Third AM SJ_1.6.7.xml\" to \"Version 3\"");
#line 172
testRunner.And("I take a screenshot");
#line 173
testRunner.And("I go to Amendment Manager for study \"AM SJ\"");
#line 174
testRunner.And("I select Source CRF version \"Version 1\"");
#line 175
testRunner.And("I select Target CRF version \"Version 3\"");
#line 176
testRunner.And("I create migration plan");
#line 177
testRunner.And("I take a screenshot");
#line 178
testRunner.And("I execute plan for subject \"{Var(num1)}\"");
#line 179
testRunner.And("I select link \"Migration Results\"");
#line 180
testRunner.And("I verify Job Status is set to Complete");
#line 181
testRunner.And("I take a screenshot");
#line 182
testRunner.And("I navigate to \"Home\"");
#line 183
testRunner.And("I select a Subject \"{Var(num1)}\"");
#line 184
testRunner.When("I select form \"Form A\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Values"});
            table10.AddRow(new string[] {
                        "Special Senses"});
            table10.AddRow(new string[] {
                        "Cardiovascular"});
            table10.AddRow(new string[] {
                        "Respiratory"});
            table10.AddRow(new string[] {
                        "Gastrointestinal"});
            table10.AddRow(new string[] {
                        "Hepatic/Bilary"});
            table10.AddRow(new string[] {
                        "Abdomen and Viscera"});
            table10.AddRow(new string[] {
                        "Genitouriary/Reproductive"});
            table10.AddRow(new string[] {
                        "Renal"});
            table10.AddRow(new string[] {
                        "Endocrine/Metabolic"});
#line 186
testRunner.Then("\"Field A\" has \"<Values>\" in order", ((string)(null)), table10);
#line 197
testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"When a user navigates to Architect, changes the order of the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates the subject, then user navigate to EDC and sees that the defaulted values for the subject are present.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Submitted default values will remain present on the eCRF when the coded values of" +
            " the data dictionary have been change or reordered.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_2012.1.0")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("DT13997_50")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("WIP")]
        public virtual void WhenAUserNavigatesToArchitectChangesTheOrderOfTheCodedValuesOfADataDictionaryCreatesANewCRFVersionCreatesAMigrationPlanWithTheNewCRFVersionAsTheTargetCRFVersionInObjectMappingMapsTheDataDictionaryAndMigratesTheSubjectThenUserNavigateToEDCAndSeesThatTheDefaultedValuesForTheSubjectArePresent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"When a user navigates to Architect, changes the order of the coded values of a data dictionary, creates a new CRF version, creates a migration plan with the new CRF version as the Target CRF version, in object mapping maps the data dictionary, and migrates the subject, then user navigate to EDC and sees that the defaulted values for the subject are present.", new string[] {
                        "release_2012.1.0",
                        "DT13997_50",
                        "WIP"});
#line 202
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 204
testRunner.Given("I login to Rave with user \"SUPER USER 1\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Subject Number (3 digits)",
                        "{RndNum<num1>(3)}"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table11.AddRow(new string[] {
                        "Derivation Migration Testing",
                        "{RndNum<num1>(3)}"});
#line 205
testRunner.Given("I create a Subject", ((string)(null)), table11);
#line 210
testRunner.And("I submit the form \"Form A\"");
#line 211
testRunner.And("I take a screenshot");
#line 212
testRunner.And("I publish and push eCRF \"DT13997 Upload Fourth AM SJ_1.6.9.xml\" to \"Version 4\"");
#line 213
testRunner.And("I go to Amendment Manager for study \"AM SJ\"");
#line 214
testRunner.And("I select Source CRF version \"Version 1\"");
#line 215
testRunner.And("I select Target CRF version \"Version 4\"");
#line 216
testRunner.And("I create migration plan");
#line 217
testRunner.And("I take a screenshot");
#line 218
testRunner.And("I execute plan for subject \"{Var(num1)}\"");
#line 219
testRunner.And("I select link \"Migration Results\"");
#line 220
testRunner.And("I take a screenshot");
#line 221
testRunner.And("I verify Job Status is set to Complete");
#line 222
testRunner.And("I navigate to \"Home\"");
#line 223
testRunner.And("I select a Subject \"{Var(num1)}\"");
#line 224
testRunner.When("I select form \"Form A\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Values"});
            table12.AddRow(new string[] {
                        "Special Senses"});
            table12.AddRow(new string[] {
                        "Cardiovascular"});
            table12.AddRow(new string[] {
                        "Respiratory"});
            table12.AddRow(new string[] {
                        "Gastrointestinal"});
            table12.AddRow(new string[] {
                        "Hepatic/Bilary"});
            table12.AddRow(new string[] {
                        "Abdomen and Viscera"});
            table12.AddRow(new string[] {
                        "Genitouriary/Reproductive"});
            table12.AddRow(new string[] {
                        "Renal"});
            table12.AddRow(new string[] {
                        "Endocrine/Metabolic"});
#line 225
testRunner.Then("\"Field A\" has \"<Values>\" in order", ((string)(null)), table12);
#line 236
testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
