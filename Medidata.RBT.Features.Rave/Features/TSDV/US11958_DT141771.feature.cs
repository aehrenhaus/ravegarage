// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.TSDV
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class US11958_DT14177Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US11958_DT14177.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US11958_DT14177", "Change randomization algorithm to randomize initial set of subjects to the tiers " +
                    "in a block rather than sequentially assigning them.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "US11958_DT14177")))
            {
                Medidata.RBT.Features.Rave.Features.TSDV.US11958_DT14177Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
            "non sequential order when the subjects are included in TSDV using the Targeted S" +
            "DV Subject Include report.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US11958_DT14177")]
        public virtual void Enroll10SubjectsInAStudyToVerifyThatTSDVHasRandomizedTheSubjectsInNonSequentialOrderWhenTheSubjectsAreIncludedInTSDVUsingTheTargetedSDVSubjectIncludeReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
                    "non sequential order when the subjects are included in TSDV using the Targeted S" +
                    "DV Subject Include report.", new string[] {
                        "PB-US11958-01"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 95
 testRunner.And("I navigate to \"Reporter\"");
#line 96
 testRunner.And("I select Report \"Targeted SDV Subject Management\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table1.AddRow(new string[] {
                        "Mediflex",
                        "Prod"});
#line 97
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table1);
#line 100
 testRunner.And("I click button \"Submit Report\"");
#line 101
 testRunner.And("I switch to \"Targeted SDV Subject Include\" window");
#line 102
 testRunner.And("I choose \"Site 1: 3001\" from \"Select Site\"");
#line 103
 testRunner.And("I click button \"Search\"");
#line 104
 testRunner.And("I include all subjects in TSDV");
#line 105
 testRunner.And("I navigate to \"Reporter\"");
#line 106
 testRunner.And("I select Report \"Targeted SDV Subject Management\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table2.AddRow(new string[] {
                        "Mediflex",
                        "Prod"});
#line 107
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table2);
#line 110
 testRunner.And("I click button \"Submit Report\"");
#line 111
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line 112
 testRunner.And("I choose \"Site 1: 3001\" from \"Select Site\"");
#line 113
 testRunner.And("I click button \"Search\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tier Name",
                        "Row"});
            table3.AddRow(new string[] {
                        "All Forms",
                        "1"});
            table3.AddRow(new string[] {
                        "No Forms",
                        "2"});
            table3.AddRow(new string[] {
                        "Architect Defined",
                        "3"});
            table3.AddRow(new string[] {
                        "Custom Tier 1",
                        "4"});
            table3.AddRow(new string[] {
                        "Custom Tier 2",
                        "5"});
            table3.AddRow(new string[] {
                        "Custom Tier 3",
                        "6"});
            table3.AddRow(new string[] {
                        "Custom Tier 4",
                        "7"});
            table3.AddRow(new string[] {
                        "Custom Tier 5",
                        "8"});
            table3.AddRow(new string[] {
                        "Custom Tier 6",
                        "9"});
            table3.AddRow(new string[] {
                        "Custom Tier 7",
                        "10"});
#line 114
 testRunner.Then("I verify that Tiers in subject override table are not in the following order", ((string)(null)), table3);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
            "non sequential order for the Study Plan.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US11958_DT14177")]
        public virtual void Enroll10SubjectsInAStudyToVerifyThatTSDVHasRandomizedTheSubjectsInNonSequentialOrderForTheStudyPlan_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
                    "non sequential order for the Study Plan.", new string[] {
                        "PB-US11958-02"});
#line 130
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 133
 testRunner.And("I navigate to \"Reporter\"");
#line 134
 testRunner.And("I select Report \"Targeted SDV Subject Management\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table4.AddRow(new string[] {
                        "Mediflex",
                        "Prod"});
#line 135
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table4);
#line 138
 testRunner.And("I click button \"Submit Report\"");
#line 139
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line 140
 testRunner.And("I choose \"Site 2: 3002\" from \"Select Site\"");
#line 141
 testRunner.And("I click button \"Search\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tier Name",
                        "Row"});
            table5.AddRow(new string[] {
                        "All Forms",
                        "1"});
            table5.AddRow(new string[] {
                        "No Forms",
                        "2"});
            table5.AddRow(new string[] {
                        "Architect Defined",
                        "3"});
            table5.AddRow(new string[] {
                        "Custom Tier 1",
                        "4"});
            table5.AddRow(new string[] {
                        "Custom Tier 2",
                        "5"});
            table5.AddRow(new string[] {
                        "Custom Tier 3",
                        "6"});
            table5.AddRow(new string[] {
                        "Custom Tier 4",
                        "7"});
            table5.AddRow(new string[] {
                        "Custom Tier 5",
                        "8"});
            table5.AddRow(new string[] {
                        "Custom Tier 6",
                        "9"});
            table5.AddRow(new string[] {
                        "Custom Tier 7",
                        "10"});
#line 142
 testRunner.Then("I verify that Tiers in subject override table are not in the following order", ((string)(null)), table5);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
            "non sequential order for the Site Group Plan.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US11958_DT14177")]
        public virtual void Enroll10SubjectsInAStudyToVerifyThatTSDVHasRandomizedTheSubjectsInNonSequentialOrderForTheSiteGroupPlan_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
                    "non sequential order for the Site Group Plan.", new string[] {
                        "PB-US11958-03"});
#line 158
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 161
 testRunner.And("I navigate to \"Reporter\"");
#line 162
 testRunner.And("I select Report \"Targeted SDV Subject Management\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table6.AddRow(new string[] {
                        "Mediflex",
                        "Prod"});
#line 163
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table6);
#line 166
 testRunner.And("I click button \"Submit Report\"");
#line 167
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line 168
 testRunner.And("I choose \"Site 3: 3003\" from \"Select Site\"");
#line 169
 testRunner.And("I click button \"Search\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tier Name",
                        "Row"});
            table7.AddRow(new string[] {
                        "All Forms",
                        "1"});
            table7.AddRow(new string[] {
                        "No Forms",
                        "2"});
            table7.AddRow(new string[] {
                        "Architect Defined",
                        "3"});
            table7.AddRow(new string[] {
                        "Custom Tier 1",
                        "4"});
            table7.AddRow(new string[] {
                        "Custom Tier 2",
                        "5"});
            table7.AddRow(new string[] {
                        "Custom Tier 3",
                        "6"});
            table7.AddRow(new string[] {
                        "Custom Tier 4",
                        "7"});
            table7.AddRow(new string[] {
                        "Custom Tier 5",
                        "8"});
            table7.AddRow(new string[] {
                        "Custom Tier 6",
                        "9"});
            table7.AddRow(new string[] {
                        "Custom Tier 7",
                        "10"});
#line 170
 testRunner.Then("I verify that Tiers in subject override table are not in the following order", ((string)(null)), table7);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
            "non sequential order for the Site Plan.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US11958_DT14177")]
        public virtual void Enroll10SubjectsInAStudyToVerifyThatTSDVHasRandomizedTheSubjectsInNonSequentialOrderForTheSitePlan_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enroll 10 subjects in a study to verify that TSDV has randomized the subjects in " +
                    "non sequential order for the Site Plan.", new string[] {
                        "PB-US11958-04"});
#line 186
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 189
 testRunner.And("I navigate to \"Reporter\"");
#line 190
 testRunner.And("I select Report \"Targeted SDV Subject Management\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table8.AddRow(new string[] {
                        "Mediflex",
                        "Prod"});
#line 191
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table8);
#line 194
 testRunner.And("I click button \"Submit Report\"");
#line 195
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line 196
 testRunner.And("I choose \"Site 4: 3004\" from \"Select Site\"");
#line 197
 testRunner.And("I click button \"Search\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tier Name",
                        "Row"});
            table9.AddRow(new string[] {
                        "All Forms",
                        "1"});
            table9.AddRow(new string[] {
                        "No Forms",
                        "2"});
            table9.AddRow(new string[] {
                        "Architect Defined",
                        "3"});
            table9.AddRow(new string[] {
                        "Custom Tier 1",
                        "4"});
            table9.AddRow(new string[] {
                        "Custom Tier 2",
                        "5"});
            table9.AddRow(new string[] {
                        "Custom Tier 3",
                        "6"});
            table9.AddRow(new string[] {
                        "Custom Tier 4",
                        "7"});
            table9.AddRow(new string[] {
                        "Custom Tier 5",
                        "8"});
            table9.AddRow(new string[] {
                        "Custom Tier 6",
                        "9"});
            table9.AddRow(new string[] {
                        "Custom Tier 7",
                        "10"});
#line 198
 testRunner.Then("I verify that Tiers in subject override table are not in the following order", ((string)(null)), table9);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
