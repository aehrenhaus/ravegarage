// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.431
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.TSDV
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class US11958_DT14177Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US11958_DT14177.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US11958_DT14177", "Change randomization algorithm to randomize initial set of subjects to the tiers " +
                    "in a block rather than sequentially assigning them.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "US11958_DT14177")))
            {
                Medidata.RBT.Features.Rave.Features.TSDV.US11958_DT14177Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 3
#line 4
 testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Enroll two subjects in each of three sites to verify at least one site has random" +
            "ized the subjects in non sequential order.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US11958_DT14177")]
        public virtual void EnrollTwoSubjectsInEachOfThreeSitesToVerifyAtLeastOneSiteHasRandomizedTheSubjectsInNonSequentialOrder_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Enroll two subjects in each of three sites to verify at least one site has random" +
                    "ized the subjects in non sequential order.", new string[] {
                        "PB-US11958-01"});
#line 33
this.ScenarioSetup(scenarioInfo);
#line 3
this.FeatureBackground();
#line 34
 testRunner.When("I create 1 random Subjects with name \"TSDV\" in Study \"Edit Check Study 3\" in Site" +
                    " \"Edit Check Site 3\"");
#line 35
 testRunner.And("I navigate to \"Reporter\"");
#line 36
 testRunner.And("I run Report \"Targeted SDV Subject Management\" on Study \"Mediflex\"");
#line 37
 testRunner.And("I choose \"Site 1\" from \"Select Site\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Tier Name"});
            table1.AddRow(new string[] {
                        "All Forms"});
            table1.AddRow(new string[] {
                        "No Forms"});
            table1.AddRow(new string[] {
                        "Architect Defined"});
            table1.AddRow(new string[] {
                        "Custom Tier 1"});
            table1.AddRow(new string[] {
                        "Custom Tier 2"});
            table1.AddRow(new string[] {
                        "Custom Tier 3"});
            table1.AddRow(new string[] {
                        "Custom Tier 4"});
            table1.AddRow(new string[] {
                        "Custom Tier 5"});
            table1.AddRow(new string[] {
                        "Custom Tier 6"});
            table1.AddRow(new string[] {
                        "Custom Tier 7"});
#line 38
 testRunner.Then("verify that Tiers in subject override table are not in the following order", ((string)(null)), table1);
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
