// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "1", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "1")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line 19
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.1",
                        "Draft"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 29
 testRunner.Given("I create a Subject", ((string)(null)), table1);
#line 33
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 34
 testRunner.And("I enter data in CRF and save", ((string)(null)), table2);
#line 40
 testRunner.And("I take a screenshot");
#line 41
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 42
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line 48
 testRunner.And("I open log line 1");
#line 49
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 50
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 51
 testRunner.And("I take a screenshot");
#line 52
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 53
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 54
 testRunner.And("I save the CRF page");
#line 55
 testRunner.And("I open log line 1");
#line 56
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 57
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 58
 testRunner.And("I save the CRF page");
#line 59
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 60
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table4);
#line 64
    testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is not displayed on Field \"Start Date\"");
#line 65
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "not displayed on Field \"Current Axis Number\"");
#line 66
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 70
 testRunner.When("I enter data in CRF and save", ((string)(null)), table5);
#line 74
 testRunner.And("I open log line 1");
#line 75
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is not displayed on Field \"Start Date\"");
#line 76
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "not displayed on Field \"Current Axis Number\"");
#line 77
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.2",
                        "Draft"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 85
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 86
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table6);
#line 90
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.3",
                        "Draft"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 98
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 99
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 100
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 101
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table7);
#line 107
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 108
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 109
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 110
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 114
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 115
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 116
 testRunner.And("I save the CRF page");
#line 117
 testRunner.And("I open log line 2");
#line 118
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 119
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 120
 testRunner.And("I save the CRF page");
#line 121
 testRunner.And("I take a screenshot");
#line 122
 testRunner.And("I open log line 2");
#line 123
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is not displayed on Field \"Start Date\"");
#line 124
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "not displayed on Field \"Current Axis Number\"");
#line 125
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 127
 testRunner.When("I enter data in CRF on log line 2 and save and reopen", ((string)(null)), table9);
#line 131
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 132
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 133
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.4",
                        "Draft"});
#line 139
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 141
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 142
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table10);
#line 146
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
            "and save data on form \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_1OnACrossFoldersStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
                    "and save data on form \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.1",
                        "Draft"});
#line 152
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 155
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 156
    testRunner.And("I create a Subject", ((string)(null)), table11);
#line 160
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table12.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table12.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 161
 testRunner.And("I enter data in CRF and save", ((string)(null)), table12);
#line 167
 testRunner.And("I take a screenshot");
#line 168
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 169
    testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 175
 testRunner.And("I open log line 1");
#line 176
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 177
    testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 178
 testRunner.And("I take a screenshot");
#line 179
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"query answered\"");
#line 180
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 181
 testRunner.And("I save the CRF page");
#line 182
 testRunner.And("I open log line 1");
#line 183
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on Fi" +
                    "eld \"Start Date\"");
#line 184
 testRunner.And("I close the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numbe" +
                    "r\'.\" on Field \"Current Axis Number\"");
#line 185
 testRunner.And("I save the CRF page");
#line 186
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 187
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table14);
#line 192
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is not displayed on Field \"Start Date\"");
#line 193
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is not displayed on Field \"Current Axis Number\"" +
                    "");
#line 194
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 197
 testRunner.When("I enter data in CRF and save", ((string)(null)), table15);
#line 202
 testRunner.And("I open log line 1");
#line 203
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is not displayed on Field \"Start Date\"");
#line 204
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is not displayed on Field \"Current Axis Number\"" +
                    "");
#line 205
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.2",
                        "Draft"});
#line 211
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 213
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "{DateTime}"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 214
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table16);
#line 218
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.3",
                        "Draft"});
#line 224
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 226
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 227
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 228
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 229
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table17);
#line 235
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 236
    testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 237
 testRunner.And("I take a screenshot");
#line 238
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"query answered\"");
#line 239
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 240
 testRunner.And("I save the CRF page");
#line 241
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 242
 testRunner.And("I enter data in CRF", ((string)(null)), table18);
#line 247
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 248
 testRunner.And("I close the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numbe" +
                    "r\'.\" on Field \"Current Axis Number\"");
#line 249
 testRunner.And("I save the CRF page");
#line 250
 testRunner.And("I take a screenshot");
#line 251
 testRunner.And("I open log line 2");
#line 252
    testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is not displayed on Field \"Start Date\"");
#line 253
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is not displayed on Field \"Current Axis Number\"" +
                    "");
#line 254
 testRunner.And("I take a screenshot");
#line 255
 testRunner.And("I cancel the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 258
 testRunner.When("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table19);
#line 263
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 264
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 265
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.4",
                        "Draft"});
#line 271
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 273
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "{DateTime}"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 274
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table20);
#line 278
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.1 Cross Forms log form to Standard form")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_1CrossFormsLogFormToStandardForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.1 Cross Forms log form to Standard form", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.1",
                        "Draft"});
#line 284
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 287
  testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 288
    testRunner.And("I create a Subject", ((string)(null)), table21);
#line 292
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table22.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 293
 testRunner.And("I enter data in CRF and save", ((string)(null)), table22);
#line 299
 testRunner.And("I open log line 1");
#line 300
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is displayed on Field \"End Date\"");
#line 301
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is displayed on Field \"Current Ax" +
                    "is Number\"");
#line 302
 testRunner.And("I take a screenshot");
#line 303
 testRunner.And("I answer the Query \"Start Date can not be greater than End Date.\" on Field \"End D" +
                    "ate\" with \"query answered\"");
#line 304
 testRunner.And("I answer the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on f" +
                    "irst Number field.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 305
 testRunner.And("I save the CRF page");
#line 306
 testRunner.And("I open log line 1");
#line 307
 testRunner.And("I close the Query \"Start Date can not be greater than End Date.\" on Field \"End Da" +
                    "te\"");
#line 308
 testRunner.And("I close the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on fi" +
                    "rst Number field.\" on Field \"Current Axis Number\"");
#line 309
 testRunner.And("I save the CRF page");
#line 310
 testRunner.And("I take a screenshot");
#line 311
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 312
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line 316
 testRunner.And("I open log line 1");
#line 317
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is not displayed on Field \"End Date\"");
#line 318
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is not displayed on Field \"Curren" +
                    "t Axis Number\"");
#line 319
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 321
 testRunner.When("I enter data in CRF and save", ((string)(null)), table24);
#line 325
 testRunner.And("I open log line 1");
#line 326
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is not displayed on Field \"End Date\"");
#line 327
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is not displayed on Field \"Curren" +
                    "t Axis Number\"");
#line 328
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.2",
                        "Draft"});
#line 334
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 336
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 337
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table25);
#line 341
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.3",
                        "Draft"});
#line 347
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 349
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 350
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 351
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table26.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table26.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table26.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 352
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table26);
#line 358
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is displayed on Field \"End Date\"");
#line 359
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is displayed on Field \"Current Ax" +
                    "is Number\"");
#line 360
 testRunner.And("I take a screenshot");
#line 361
 testRunner.And("I answer the Query \"Start Date can not be greater than End Date.\" on Field \"End D" +
                    "ate\" with \"query answered\"");
#line 362
 testRunner.And("I answer the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on f" +
                    "irst Number field.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 363
 testRunner.And("I save the CRF page");
#line 364
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 365
 testRunner.And("I enter data in CRF", ((string)(null)), table27);
#line 369
 testRunner.And("I close the Query \"Start Date can not be greater than End Date.\" on Field \"End Da" +
                    "te\"");
#line 370
 testRunner.And("I close the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on fi" +
                    "rst Number field.\" on Field \"Current Axis Number\"");
#line 371
 testRunner.And("I save the CRF page");
#line 372
 testRunner.And("I take a screenshot");
#line 373
 testRunner.And("I open log line 2");
#line 374
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is not displayed on Field \"End Date\"");
#line 375
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is not displayed on Field \"Curren" +
                    "t Axis Number\"");
#line 376
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 378
 testRunner.When("I enter data in CRF and save", ((string)(null)), table28);
#line 382
 testRunner.And("I open log line 2");
#line 383
 testRunner.Then("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is displayed on Field \"End Date\"");
#line 384
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is displayed on Field \"Current Ax" +
                    "is Number\"");
#line 385
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.4",
                        "Draft"});
#line 391
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 393
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 394
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table29);
#line 398
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.5",
                        "Draft"});
#line 404
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 406
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 407
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 408
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table30.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table30.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 409
    testRunner.And("I enter data in CRF and save", ((string)(null)), table30);
#line 415
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date.\" is displayed on Field \"End Date\"");
#line 416
 testRunner.And("I verify Requires Response Query with message \"Original Distribution Number\' and " +
                    "\'Current Distribution Number\' fields are not equal.\" is displayed on Field \"Curr" +
                    "ent Distribution Number\"");
#line 417
 testRunner.And("I take a screenshot");
#line 418
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is not equal to Current Date.\"" +
                    " on Field \"End Date\" with \"query answered\"");
#line 419
 testRunner.And("I answer the Query \"Original Distribution Number\' and \'Current Distribution Numbe" +
                    "r\' fields are not equal.\" on Field \"Current Distribution Number\" with \"query ans" +
                    "wered\"");
#line 420
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 421
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 425
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is not equal to Current Date.\" " +
                    "on Field \"End Date\"");
#line 426
 testRunner.And("I close the Query \"Original Distribution Number\' and \'Current Distribution Number" +
                    "\' fields are not equal.\" on Field \"Current Distribution Number\"");
#line 427
 testRunner.And("I save the CRF page");
#line 428
 testRunner.And("I take a screenshot");
#line 429
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date.\" is not displayed on Field \"End Date\"");
#line 430
 testRunner.And("I verify Requires Response Query with message \"Original Distribution Number\' and " +
                    "\'Current Distribution Number\' fields are not equal.\" is not displayed on Field \"" +
                    "Current Distribution Number\"");
#line 431
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 433
    testRunner.When("I enter data in CRF", ((string)(null)), table32);
#line 437
 testRunner.And("I save the CRF page");
#line 438
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date.\" is displayed on Field \"End Date\"");
#line 439
 testRunner.And("I verify Requires Response Query with message \"Original Distribution Number\' and " +
                    "\'Current Distribution Number\' fields are not equal.\" is displayed on Field \"Curr" +
                    "ent Distribution Number\"");
#line 440
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.6",
                        "Draft"});
#line 446
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 448
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is not equal to Current Date.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Original Distribution Number\' and \'Current Distribution Number\' fields are not eq" +
                            "ual.",
                        "{DateTime}"});
#line 449
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table33);
#line 453
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.1",
                        "Draft"});
#line 459
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 462
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 463
    testRunner.And("I create a Subject", ((string)(null)), table34);
#line 467
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 468
 testRunner.And("I enter data in CRF and save", ((string)(null)), table35);
#line 474
 testRunner.And("I take a screenshot");
#line 475
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table36.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table36.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 476
    testRunner.And("I enter data in CRF and save", ((string)(null)), table36);
#line 482
 testRunner.And("I take a screenshot");
#line 483
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 484
 testRunner.And("I open log line 1");
#line 485
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 486
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 487
 testRunner.And("I verify Requires Response Query with message \"AE Number is greater than or Equal" +
                    " to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 488
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 489
 testRunner.And("I take a screenshot");
#line 490
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 491
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 492
 testRunner.And("I answer the Query \"AE Number is greater than or Equal to \'Current Axis Number\' o" +
                    "n Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 493
 testRunner.And("I answer the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field " +
                    "\"Current Axis Number\" with \"query answered\"");
#line 494
 testRunner.And("I save the CRF page");
#line 495
 testRunner.And("I open log line 1");
#line 496
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 497
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 498
 testRunner.And("I close the Query \"AE Number is greater than or Equal to \'Current Axis Number\' on" +
                    " Log.\" on Field \"Original Axis Number\"");
#line 499
 testRunner.And("I close the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field \"" +
                    "Current Axis Number\"");
#line 500
 testRunner.And("I save the CRF page");
#line 501
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 502
 testRunner.And("I enter data in CRF on log line 1 and save", ((string)(null)), table37);
#line 508
 testRunner.And("I open log line 1");
#line 509
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is not" +
                    " displayed on Field \"Start Date\"");
#line 510
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is not displayed on Field \"End Date\"");
#line 511
 testRunner.And("I verify Requires Response Query with message \"AE Number is greater than or Equal" +
                    " to \'Current Axis Number\' on Log.\" is not displayed on Field \"Original Axis Numb" +
                    "er\"");
#line 512
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is not displayed on Field \"Current Axis Number\"");
#line 513
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 515
 testRunner.When("I enter data in CRF and save", ((string)(null)), table38);
#line 521
 testRunner.And("I open log line 1");
#line 522
 testRunner.Then("I verify Requires Response Query with message \"Date can not be less than.\" is not" +
                    " displayed on Field \"Start Date\"");
#line 523
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is not displayed on Field \"End Date\"");
#line 524
 testRunner.And("I verify Requires Response Query with message \"AE Number is greater than or Equal" +
                    " to \'Current Axis Number\' on Log.\" is not displayed on Field \"Original Axis Numb" +
                    "er\"");
#line 525
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is not displayed on Field \"Current Axis Number\"");
#line 526
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.2",
                        "Draft"});
#line 532
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 534
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "AE Number is greater than or Equal to \'Current Axis Number\' on Log.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Duration\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 535
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table39);
#line 541
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.3",
                        "Draft"});
#line 547
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 549
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 550
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 551
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table40.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table40.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 552
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table40);
#line 558
 testRunner.And("I take a screenshot");
#line 559
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table41.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table41.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 560
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table41);
#line 566
 testRunner.And("I take a screenshot");
#line 567
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 568
 testRunner.And("I open log line 2");
#line 569
 testRunner.And("I take a screenshot");
#line 570
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 571
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 572
 testRunner.And("I verify Requires Response Query with message \"AE Number is greater than or Equal" +
                    " to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 573
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 574
 testRunner.And("I take a screenshot");
#line 575
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 576
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 577
 testRunner.And("I answer the Query \"AE Number is greater than or Equal to \'Current Axis Number\' o" +
                    "n Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 578
 testRunner.And("I answer the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field " +
                    "\"Current Axis Number\" with \"query answered\"");
#line 579
 testRunner.And("I save the CRF page");
#line 580
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table42.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 581
    testRunner.And("I enter data in CRF", ((string)(null)), table42);
#line 587
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 588
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 589
 testRunner.And("I close the Query \"AE Number is greater than or Equal to \'Current Axis Number\' on" +
                    " Log.\" on Field \"Original Axis Number\"");
#line 590
 testRunner.And("I close the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field \"" +
                    "Current Axis Number\"");
#line 591
 testRunner.And("I save the CRF page");
#line 592
 testRunner.And("I open log line 2");
#line 593
 testRunner.And("I take a screenshot");
#line 594
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is not" +
                    " displayed on Field \"Start Date\"");
#line 595
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is not displayed on Field \"End Date\"");
#line 596
 testRunner.And("I verify Requires Response Query with message \"AE Number is greater than or Equal" +
                    " to \'Current Axis Number\' on Log.\" is not displayed on Field \"Original Axis Numb" +
                    "er\"");
#line 597
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is not displayed on Field \"Current Axis Number\"");
#line 598
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table43.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 600
 testRunner.When("I enter data in CRF", ((string)(null)), table43);
#line 606
 testRunner.And("I save the CRF page");
#line 607
 testRunner.And("I open log line 2");
#line 608
 testRunner.Then("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 609
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 610
 testRunner.And("I verify Requires Response Query with message \"AE Number is greater than or Equal" +
                    " to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 611
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 612
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.4",
                        "Draft"});
#line 618
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 620
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "AE Number is greater than or Equal to \'Current Axis Number\' on Log.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Duration\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 621
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table44);
#line 627
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyStandardFormToDifferentBadDataDoNotTouchLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.1",
                        "Draft"});
#line 633
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 635
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table45.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 636
    testRunner.And("I create a Subject", ((string)(null)), table45);
#line 640
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table46.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table46.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table46.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 641
 testRunner.And("I enter data in CRF and save", ((string)(null)), table46);
#line 647
 testRunner.And("I take a screenshot");
#line 648
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table47.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 649
    testRunner.And("I enter data in CRF and save", ((string)(null)), table47);
#line 655
 testRunner.And("I open log line 1");
#line 656
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 657
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'\" is d" +
                    "isplayed on Field \"Current Axis Number\"");
#line 658
 testRunner.And("I take a screenshot");
#line 659
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 660
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'\" on Field \"Current Axis Number\" " +
                    "with \"query answered\"");
#line 661
 testRunner.And("I save the CRF page");
#line 662
 testRunner.And("I open log line 1");
#line 663
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 664
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'\" on Field \"Current Axis Number\"");
#line 665
 testRunner.And("I save the CRF page");
#line 666
 testRunner.And("I take a screenshot");
#line 667
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table48.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 668
 testRunner.And("I enter data in CRF and save", ((string)(null)), table48);
#line 673
    testRunner.When("I select Form \"Concomitant Medications\"");
#line 674
 testRunner.And("I open log line 1");
#line 675
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 676
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'\" is d" +
                    "isplayed on Field \"Current Axis Number\"");
#line 677
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.2",
                        "Draft"});
#line 683
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 685
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'",
                        "{DateTime}"});
#line 686
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table49);
#line 690
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.1 On a Cross Forms,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_6_1OnACrossForms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.1 On a Cross Forms,", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.1",
                        "Draft"});
#line 696
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 699
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table50.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 700
    testRunner.And("I create a Subject", ((string)(null)), table50);
#line 704
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table51.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table51.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table51.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 705
 testRunner.And("I enter data in CRF and save", ((string)(null)), table51);
#line 711
 testRunner.And("I take a screenshot");
#line 712
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 713
    testRunner.And("I enter data in CRF and save", ((string)(null)), table52);
#line 719
 testRunner.And("I open log line 1");
#line 720
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 721
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 722
 testRunner.And("I take a screenshot");
#line 723
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 724
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 725
 testRunner.And("I save the CRF page");
#line 726
 testRunner.And("I take a screenshot");
#line 727
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 728
 testRunner.And("I enter data in CRF and save", ((string)(null)), table53);
#line 733
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 734
 testRunner.And("I open log line 1");
#line 735
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 736
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 737
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.2",
                        "Draft"});
#line 743
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 745
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 746
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table54);
#line 750
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.1",
                        "Draft"});
#line 756
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 758
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table55.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 759
    testRunner.And("I create a Subject", ((string)(null)), table55);
#line 763
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table56.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table56.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table56.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 764
 testRunner.And("I enter data in CRF and save", ((string)(null)), table56);
#line 769
 testRunner.And("I take a screenshot");
#line 770
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table57.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 771
    testRunner.And("I enter data in CRF and save", ((string)(null)), table57);
#line 776
 testRunner.And("I take a screenshot");
#line 777
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 778
 testRunner.And("I open log line 1");
#line 779
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 780
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 781
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 782
 testRunner.And("I take a screenshot");
#line 783
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 784
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 785
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 786
 testRunner.And("I save the CRF page");
#line 787
 testRunner.And("I open log line 1");
#line 788
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 789
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 790
 testRunner.And("I close the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number\'" +
                    " on Log.\" on Field \"Original Axis Number\"");
#line 791
 testRunner.And("I save the CRF page");
#line 792
 testRunner.And("I take a screenshot");
#line 793
 testRunner.And("I select Form \"Adverse Events\"");
#line 794
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table58.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 795
 testRunner.And("I enter data in CRF and save", ((string)(null)), table58);
#line 801
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 802
 testRunner.And("I open log line 1");
#line 803
 testRunner.Then("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 804
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 805
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 806
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.2",
                        "Draft"});
#line 812
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 814
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Start Date",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "{DateTime}"});
#line 815
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table59);
#line 820
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredCancelQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.1",
                        "Draft"});
#line 826
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 828
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table60.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 829
    testRunner.And("I create a Subject", ((string)(null)), table60);
#line 833
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table61.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table61.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 834
 testRunner.And("I enter data in CRF and save", ((string)(null)), table61);
#line 839
 testRunner.And("I take a screenshot");
#line 840
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table62.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 841
    testRunner.And("I enter data in CRF and save", ((string)(null)), table62);
#line 846
 testRunner.And("I take a screenshot");
#line 847
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 848
 testRunner.And("I open log line 1");
#line 849
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 850
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 851
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 852
 testRunner.And("I take a screenshot");
#line 853
 testRunner.And("I cancel the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 854
 testRunner.And("I cancel the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\"");
#line 855
 testRunner.And("I cancel the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\"");
#line 856
 testRunner.And("I save the CRF page");
#line 857
 testRunner.And("I take a screenshot");
#line 858
 testRunner.And("I select Form \"Adverse Events\"");
#line 859
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table63.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table63.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 860
 testRunner.And("I enter data in CRF and save", ((string)(null)), table63);
#line 866
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 867
 testRunner.And("I open log line 1");
#line 868
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 869
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 870
 testRunner.And("I verify Query with message \"\'AE Number\' is greater than or Equal to \'Original Ax" +
                    "is Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 871
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.2",
                        "Draft"});
#line 877
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 879
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Start Date",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "AE Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "{DateTime}"});
#line 880
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table64);
#line 885
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentGoodDataDoNotTouchStandardForm_NoQueryAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.1",
                        "Draft"});
#line 891
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 893
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table65.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 894
    testRunner.And("I create a Subject", ((string)(null)), table65);
#line 898
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table66.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table66.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table66.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 899
 testRunner.And("I enter data in CRF and save", ((string)(null)), table66);
#line 905
 testRunner.And("I take a screenshot");
#line 906
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 907
    testRunner.And("I enter data in CRF and save", ((string)(null)), table67);
#line 913
 testRunner.And("I open log line 1");
#line 914
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 915
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 916
 testRunner.And("I take a screenshot");
#line 917
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 918
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 919
 testRunner.And("I save the CRF page");
#line 920
 testRunner.And("I open log line 1");
#line 921
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 922
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 923
 testRunner.And("I save the CRF page");
#line 924
 testRunner.And("I take a screenshot");
#line 926
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 927
 testRunner.When("I enter data in CRF and save", ((string)(null)), table68);
#line 931
 testRunner.And("I open log line 1");
#line 932
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 933
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is eq" +
                    "ual to Concomitant Medications \'Current Axis Number\'.\" is not displayed on Field" +
                    " \"Current Axis Number\"");
#line 934
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.9.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.9.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.2",
                        "Draft"});
#line 940
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 942
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 943
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table69);
#line 947
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedicationsQueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentBadDataDoNotTouchStandardForm_QueryFiresAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.1",
                        "Draft"});
#line 953
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 955
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table70.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table70.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 956
    testRunner.And("I create a Subject", ((string)(null)), table70);
#line 960
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table71.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table71.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 961
 testRunner.And("I enter data in CRF and save", ((string)(null)), table71);
#line 967
 testRunner.And("I take a screenshot");
#line 968
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table72.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table72.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 969
    testRunner.And("I enter data in CRF and save", ((string)(null)), table72);
#line 975
 testRunner.And("I open log line 1");
#line 976
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 977
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 978
 testRunner.And("I take a screenshot");
#line 979
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 980
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 981
 testRunner.And("I save the CRF page");
#line 982
 testRunner.And("I open log line 1");
#line 983
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 984
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 985
 testRunner.And("I save the CRF page");
#line 986
 testRunner.And("I take a screenshot");
#line 988
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "21"});
#line 989
 testRunner.When("I enter data in CRF and save", ((string)(null)), table73);
#line 993
 testRunner.And("I open log line 1");
#line 994
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 995
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 996
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.10.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.10.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.2",
                        "Draft"});
#line 1002
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1004
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 1005
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 1009
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.1 On a Cross Forms Standard form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_1OnACrossFormsStandardFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.1 On a Cross Forms Standard form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.1",
                        "Draft"});
#line 1015
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1018
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table75.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table75.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1019
    testRunner.And("I create a Subject", ((string)(null)), table75);
#line 1023
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table76.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table76.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1024
 testRunner.And("I enter data in CRF and save", ((string)(null)), table76);
#line 1030
 testRunner.And("I take a screenshot");
#line 1031
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table77.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1032
    testRunner.And("I enter data in CRF and save", ((string)(null)), table77);
#line 1038
 testRunner.And("I open log line 1");
#line 1039
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 1040
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 1041
 testRunner.And("I take a screenshot");
#line 1042
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table78.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1043
 testRunner.And("I enter data in CRF and save", ((string)(null)), table78);
#line 1048
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 1049
 testRunner.And("I open log line 1");
#line 1050
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 1051
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 1052
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.2",
                        "Draft"});
#line 1058
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1060
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 1061
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table79);
#line 1065
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_12_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogForm_QueriesClosedBySystemAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.12.1",
                        "Draft"});
#line 1071
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1073
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table80.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table80.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1074
    testRunner.And("I create a Subject", ((string)(null)), table80);
#line 1078
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table81.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table81.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table81.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1079
 testRunner.And("I enter data in CRF and save", ((string)(null)), table81);
#line 1085
 testRunner.And("I take a screenshot");
#line 1086
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1087
    testRunner.And("I enter data in CRF and save", ((string)(null)), table82);
#line 1093
 testRunner.And("I open log line 1");
#line 1094
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 1095
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 1096
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1098
 testRunner.When("I enter data in CRF and save", ((string)(null)), table83);
#line 1102
 testRunner.And("I open log line 1");
#line 1103
   testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 1104
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 1105
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.12.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_12_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.12.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.12.2",
                        "Draft"});
#line 1111
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1113
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 1114
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table84);
#line 1118
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyStandardFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.1",
                        "Draft"});
#line 1124
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1126
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table85.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table85.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1127
 testRunner.And("I create a Subject", ((string)(null)), table85);
#line 1131
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table86.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table86.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table86.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1132
 testRunner.And("I enter data in CRF and save", ((string)(null)), table86);
#line 1138
 testRunner.And("I take a screenshot");
#line 1139
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table87.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1140
    testRunner.And("I enter data in CRF and save", ((string)(null)), table87);
#line 1146
 testRunner.And("I open log line 1");
#line 1147
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 1148
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 1149
 testRunner.And("I take a screenshot");
#line 1150
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table88.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1151
 testRunner.And("I enter data in CRF and save", ((string)(null)), table88);
#line 1155
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1156
 testRunner.And("I open log line 1");
#line 1157
   testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 1158
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 1159
 testRunner.And("I take a screenshot");
#line 1160
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table89.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1161
 testRunner.And("I enter data in CRF and save", ((string)(null)), table89);
#line 1166
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 1167
 testRunner.And("I open log line 1");
#line 1168
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 1169
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 1170
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.13.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.13.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.2",
                        "Draft"});
#line 1176
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1178
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 1179
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table90);
#line 1183
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.1",
                        "Draft"});
#line 1189
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1191
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table91.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1192
    testRunner.And("I create a Subject", ((string)(null)), table91);
#line 1196
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table92.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table92.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table92.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1197
 testRunner.And("I enter data in CRF and save", ((string)(null)), table92);
#line 1203
 testRunner.And("I take a screenshot");
#line 1204
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table93.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table93.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table93.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1205
    testRunner.And("I enter data in CRF and save", ((string)(null)), table93);
#line 1211
 testRunner.And("I open log line 1");
#line 1212
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 1213
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 1214
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table94.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1215
 testRunner.And("I enter data in CRF and save", ((string)(null)), table94);
#line 1219
 testRunner.And("I open log line 1");
#line 1221
  testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 1222
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 1223
 testRunner.And("I take a screenshot");
#line 1225
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table95.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table95.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1226
 testRunner.When("I enter data in CRF and save", ((string)(null)), table95);
#line 1230
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1231
 testRunner.And("I open log line 1");
#line 1232
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 1233
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 1234
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.14.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.14.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.2",
                        "Draft"});
#line 1240
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1242
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 1243
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table96);
#line 1247
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_1OnACrossFormsLogFormToLogFormFolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesOnConcomitantMedicationsFormModifyLogFieldsToDifferentGoodDataOnAdverseEventsFormDoNotTouchConcomitantMedicationsForm_NoQueriesOnConcomitantMedicationsAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.1",
                        "Draft"});
#line 1253
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1255
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table97.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1256
    testRunner.And("I create a Subject", ((string)(null)), table97);
#line 1260
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table98.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table98.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1261
 testRunner.And("I enter data in CRF and save", ((string)(null)), table98);
#line 1265
 testRunner.And("I take a screenshot");
#line 1266
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table99.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1267
    testRunner.And("I enter data in CRF and save", ((string)(null)), table99);
#line 1271
 testRunner.And("I take a screenshot");
#line 1272
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1273
 testRunner.And("I open log line 1");
#line 1274
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1275
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1276
 testRunner.And("I take a screenshot");
#line 1277
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 1278
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 1279
 testRunner.And("I save the CRF page");
#line 1280
 testRunner.And("I open log line 1");
#line 1281
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 1282
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 1283
 testRunner.And("I save the CRF page");
#line 1284
 testRunner.And("I take a screenshot");
#line 1286
 testRunner.And("I select Form \"Adverse Events\"");
#line 1287
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table100.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table100.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1288
 testRunner.When("I enter data in CRF and save", ((string)(null)), table100);
#line 1292
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1293
 testRunner.And("I open log line 1");
#line 1294
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1295
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1296
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.15.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.15.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.2",
                        "Draft"});
#line 1302
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1304
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1305
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table101);
#line 1309
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.1 On a Cross Forms log form to log form.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_1OnACrossFormsLogFormToLogForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.1 On a Cross Forms log form to log form.", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.1",
                        "Draft"});
#line 1315
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1318
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table102.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table102.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1319
    testRunner.And("I create a Subject", ((string)(null)), table102);
#line 1323
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table103.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table103.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table103.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 1324
 testRunner.And("I enter data in CRF and save", ((string)(null)), table103);
#line 1329
 testRunner.And("I take a screenshot");
#line 1330
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table104.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table104.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 1331
    testRunner.And("I enter data in CRF and save", ((string)(null)), table104);
#line 1336
 testRunner.And("I take a screenshot");
#line 1337
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1338
 testRunner.And("I open log line 1");
#line 1339
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1340
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1341
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 1342
 testRunner.And("I take a screenshot");
#line 1343
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 1344
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 1345
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 1346
 testRunner.And("I save the CRF page");
#line 1347
 testRunner.And("I open log line 1");
#line 1348
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 1349
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 1350
 testRunner.And("I close the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number\'" +
                    " on Log.\" on Field \"Original Axis Number\"");
#line 1351
 testRunner.And("I save the CRF page");
#line 1352
 testRunner.And("I take a screenshot");
#line 1353
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table105.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table105.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table105.AddRow(new string[] {
                        "Original Axis Number",
                        "99"});
#line 1354
 testRunner.And("I enter data in CRF and save", ((string)(null)), table105);
#line 1359
 testRunner.And("I open log line 1");
#line 1360
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1361
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1362
 testRunner.And("I verify Query with message \"\'AE Number\' is greater than or Equal to \'Original Ax" +
                    "is Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 1363
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.2",
                        "Draft"});
#line 1369
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1371
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "{DateTime}"});
#line 1372
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table106);
#line 1377
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.1",
                        "Draft"});
#line 1383
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1386
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table107.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table107.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1387
    testRunner.And("I create a Subject", ((string)(null)), table107);
#line 1391
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table108.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table108.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1392
 testRunner.And("I enter data in CRF and save", ((string)(null)), table108);
#line 1396
 testRunner.And("I take a screenshot");
#line 1397
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table109.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1398
    testRunner.And("I enter data in CRF and save", ((string)(null)), table109);
#line 1402
 testRunner.And("I take a screenshot");
#line 1403
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1404
 testRunner.And("I open log line 1");
#line 1405
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1406
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1407
 testRunner.And("I take a screenshot");
#line 1408
 testRunner.And("I select Form \"Adverse Events\"");
#line 1409
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table110.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table110.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1410
 testRunner.And("I enter data in CRF and save", ((string)(null)), table110);
#line 1414
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1415
 testRunner.And("I open log line 1");
#line 1416
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1417
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1418
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.2",
                        "Draft"});
#line 1424
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1426
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1427
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table111);
#line 1431
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.1",
                        "Draft"});
#line 1437
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1440
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table112.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table112.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1441
    testRunner.And("I create a Subject", ((string)(null)), table112);
#line 1445
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table113.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1446
 testRunner.And("I enter data in CRF and save", ((string)(null)), table113);
#line 1450
 testRunner.And("I take a screenshot");
#line 1451
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table114.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1452
    testRunner.And("I enter data in CRF and save", ((string)(null)), table114);
#line 1456
 testRunner.And("I take a screenshot");
#line 1457
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1458
 testRunner.And("I open log line 1");
#line 1459
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1460
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1461
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table115.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1462
 testRunner.And("I enter data in CRF and save", ((string)(null)), table115);
#line 1466
 testRunner.And("I open log line 1");
#line 1467
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1468
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1469
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.2",
                        "Draft"});
#line 1475
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1477
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1478
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table116);
#line 1482
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredOnSecondLogFormModifyLogFieldsOnFirstLogFormToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnSecondLogForm_NavigateToFirstLogFormAndEnterNewValueInViolationOfEditCheck_QueriesRefiredOnSecondLogFormAndNoLogInTheDatabase()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.1",
                        "Draft"});
#line 1488
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1490
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table117.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table117.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1491
    testRunner.And("I create a Subject", ((string)(null)), table117);
#line 1495
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table118.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1496
 testRunner.And("I enter data in CRF and save", ((string)(null)), table118);
#line 1500
 testRunner.And("I take a screenshot");
#line 1501
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table119.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1502
    testRunner.And("I enter data in CRF and save", ((string)(null)), table119);
#line 1506
 testRunner.And("I take a screenshot");
#line 1507
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1508
 testRunner.And("I open log line 1");
#line 1509
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1510
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1511
 testRunner.And("I take a screenshot");
#line 1512
 testRunner.And("I select Form \"Adverse Events\"");
#line 1513
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table120.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1514
 testRunner.And("I enter data in CRF and save", ((string)(null)), table120);
#line 1518
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1519
 testRunner.And("I open log line 1");
#line 1520
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1521
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1522
 testRunner.And("I take a screenshot");
#line 1524
 testRunner.And("I select Form \"Adverse Events\"");
#line 1525
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table121.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1526
 testRunner.When("I enter data in CRF and save", ((string)(null)), table121);
#line 1530
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1531
 testRunner.And("I open log line 1");
#line 1532
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1533
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1534
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.19.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.19.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.2",
                        "Draft"});
#line 1540
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1542
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1543
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table122);
#line 1547
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.1",
                        "Draft"});
#line 1553
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1558
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table123.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table123.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1559
    testRunner.And("I create a Subject", ((string)(null)), table123);
#line 1563
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table124.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1564
 testRunner.And("I enter data in CRF and save", ((string)(null)), table124);
#line 1568
 testRunner.And("I take a screenshot");
#line 1569
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table125.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1570
    testRunner.And("I enter data in CRF and save", ((string)(null)), table125);
#line 1574
 testRunner.And("I take a screenshot");
#line 1575
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1576
 testRunner.And("I open log line 1");
#line 1577
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1578
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1579
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table126.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1580
 testRunner.And("I enter data in CRF", ((string)(null)), table126);
#line 1584
 testRunner.And("I save the CRF page");
#line 1585
 testRunner.And("I open log line 1");
#line 1586
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1587
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1588
 testRunner.And("I take a screenshot");
#line 1590
 testRunner.And("I select Form \"Adverse Events\"");
#line 1591
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table127.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
#line 1592
 testRunner.When("I enter data in CRF and save", ((string)(null)), table127);
#line 1596
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1597
 testRunner.And("I open log line 1");
#line 1598
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1599
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1600
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.2",
                        "Draft"});
#line 1606
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1608
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Start Date",
                        "12 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1609
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table128);
#line 1613
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
            "uire manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_1OnAVerifiesQueryFiringOnMixedFormWithRequireResponseAndRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
                    "uire manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.1",
                        "Draft"});
#line 1619
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1623
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table129.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table129.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1624
    testRunner.And("I create a Subject", ((string)(null)), table129);
#line 1628
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Standard 1",
                        "5"});
            table130.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table130.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 1629
 testRunner.And("I enter data in CRF and save", ((string)(null)), table130);
#line 1634
 testRunner.And("I take a screenshot");
#line 1635
 testRunner.And("I open log line 1");
#line 1636
 testRunner.And("I verify Requires Response Query with message \"\" is displayed on Field \"Log Field" +
                    " 1\"");
#line 1637
 testRunner.And("I take a screenshot");
#line 1638
 testRunner.And("I answer the Query \"\" on Field \"Log Field 1\" with \"query answered\"");
#line 1639
 testRunner.And("I save the CRF page");
#line 1640
 testRunner.And("I open log line 1");
#line 1641
 testRunner.And("I close the Query \"\" on Field \"Log Field 1\"");
#line 1642
 testRunner.And("I save the CRF page");
#line 1643
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table131.AddRow(new string[] {
                        "Standard 1",
                        "6"});
#line 1644
 testRunner.When("I enter data in CRF and save", ((string)(null)), table131);
#line 1647
 testRunner.And("I open log line 1");
#line 1648
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Log Field 1\"");
#line 1649
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.2",
                        "Draft"});
#line 1655
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1657
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table132.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub121",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "6",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1658
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table132);
#line 1661
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.1 On a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_1OnA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.1 On a", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.1",
                        "Draft"});
#line 1667
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1672
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table133.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table133.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1673
    testRunner.And("I create a Subject", ((string)(null)), table133);
#line 1677
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table134.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table134.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1678
 testRunner.And("I enter data in CRF and save", ((string)(null)), table134);
#line 1683
 testRunner.And("I open log line 1");
#line 1684
 testRunner.And("I verify Requires Response Query with message \"\" is displayed on Field \"Log Field" +
                    " 1\"");
#line 1685
 testRunner.And("I take a screenshot");
#line 1686
 testRunner.And("I cancel the Query \"\" on Field \"Log Field 1\"");
#line 1687
 testRunner.And("I save the CRF page");
#line 1688
 testRunner.And("I take a screenshot");
#line 1689
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 1690
 testRunner.When("I enter data in CRF and save", ((string)(null)), table135);
#line 1693
 testRunner.And("I open log line 1");
#line 1694
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Log Field 1\"");
#line 1695
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.2",
                        "Draft"});
#line 1701
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1702
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table136.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "5",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1703
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table136);
#line 1706
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.3",
                        "Draft"});
#line 1712
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1714
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 1715
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 1716
 testRunner.And("I select Form \"Mixed Form\"");
#line 1717
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table137.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1718
 testRunner.And("I enter data in CRF and save", ((string)(null)), table137);
#line 1722
 testRunner.And("I open log line 2");
#line 1723
 testRunner.And("I verify Requires Response Query with message \"\" is displayed on Field \"Log Field" +
                    " 1\"");
#line 1724
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1725
 testRunner.And("I enter data in CRF", ((string)(null)), table138);
#line 1728
 testRunner.And("I cancel the Query \"\" on Field \"Log Field 1\"");
#line 1729
 testRunner.And("I save the CRF page");
#line 1730
 testRunner.And("I take a screenshot");
#line 1731
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 1733
 testRunner.When("I enter data in CRF and save", ((string)(null)), table139);
#line 1736
 testRunner.And("I open log line 1");
#line 1737
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Log Field 1\"");
#line 1738
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.4",
                        "Draft"});
#line 1744
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1746
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table140.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "2",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1747
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table140);
#line 1750
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.5", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.5",
                        "Draft"});
#line 1756
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1758
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 1759
 testRunner.And("I select a Subject \"SUB{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 1760
 testRunner.And("I select Form \"Mixed Form\"");
#line 1761
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table141.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1762
 testRunner.And("I enter data in CRF and save", ((string)(null)), table141);
#line 1766
 testRunner.And("I open log line 3");
#line 1767
 testRunner.And("I verify Requires Response Query with message \"\" is displayed on Field \"Log Field" +
                    " 1\"");
#line 1768
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1769
 testRunner.And("I enter data in CRF", ((string)(null)), table142);
#line 1772
 testRunner.And("I cancel the Query \"\" on Field \"Log Field 1\"");
#line 1773
 testRunner.And("I save the CRF page");
#line 1774
 testRunner.And("I take a screenshot");
#line 1775
 testRunner.And("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Standard 1",
                        "10"});
#line 1777
 testRunner.When("I enter data in CRF and save", ((string)(null)), table143);
#line 1780
 testRunner.And("I open log line 3");
#line 1781
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Log Field 1\"");
#line 1782
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.6", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.6",
                        "Draft"});
#line 1788
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1790
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table144.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "3",
                        "Log Field 1",
                        "10",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "8",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1791
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table144);
#line 1794
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
