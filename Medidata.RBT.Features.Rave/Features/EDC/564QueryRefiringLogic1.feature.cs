// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "1", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "1")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line 19
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.1",
                        "Draft"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 29
 testRunner.And("I create a Subject", ((string)(null)), table1);
#line 33
 testRunner.And("I select Folder \"Screening\"");
#line 34
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 35
 testRunner.And("I enter data in CRF and save", ((string)(null)), table2);
#line 42
 testRunner.And("I take a screenshot");
#line 43
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 44
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line 51
 testRunner.And("I open log line 1");
#line 52
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 53
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 54
 testRunner.And("I take a screenshot");
#line 55
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 56
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 57
 testRunner.And("I save the CRF page");
#line 58
 testRunner.And("I open log line 1");
#line 59
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 60
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 61
 testRunner.And("I save the CRF page");
#line 62
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 63
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table4);
#line 68
    testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 69
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 70
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 74
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line 79
 testRunner.And("I open log line 1");
#line 80
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 81
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 82
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.2",
                        "Draft"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 90
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 91
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table6);
#line 95
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.3",
                        "Draft"});
#line 101
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 102
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 103
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 104
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table7);
#line 111
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 112
    testRunner.And("I verify Requires Response Query with message \"{\\\" is displayed on Field \"\"");
#line 113
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 114
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 118
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 119
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 120
 testRunner.And("I save the CRF page");
#line 121
 testRunner.And("I open log line 2");
#line 122
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 123
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 124
 testRunner.And("I save the CRF page");
#line 125
 testRunner.And("I take a screenshot");
#line 126
 testRunner.And("I open log line 2");
#line 127
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 128
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 129
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 130
 testRunner.And("I enter data in CRF on log line 2 and save and reopen", ((string)(null)), table9);
#line 134
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 135
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 136
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.4",
                        "Draft"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 144
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 145
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table10);
#line 149
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
            "and save data on form \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_1OnACrossFoldersStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
                    "and save data on form \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.1",
                        "Draft"});
#line 155
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 158
    testRunner.And("I create a Subject", ((string)(null)), table11);
#line 162
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table12.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table12.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 163
 testRunner.And("I enter data in CRF and save", ((string)(null)), table12);
#line 169
 testRunner.And("I take a screenshot");
#line 170
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 171
    testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 177
 testRunner.And("I open log line 1");
#line 178
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 179
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 180
 testRunner.And("I take a screenshot");
#line 181
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 182
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 183
 testRunner.And("I save the CRF page");
#line 184
 testRunner.And("I open log line 1");
#line 185
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 186
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 187
 testRunner.And("I save the CRF page");
#line 188
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 189
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table14);
#line 195
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 196
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 197
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 200
 testRunner.When("I enter data in CRF and save", ((string)(null)), table15);
#line 205
 testRunner.And("I open log line 1");
#line 206
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 207
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 208
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.2",
                        "Draft"});
#line 214
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 216
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 217
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table16);
#line 221
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.3",
                        "Draft"});
#line 227
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 228
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 229
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 230
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table17);
#line 236
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 237
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 238
 testRunner.And("I take a screenshot");
#line 239
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 240
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 241
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 242
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table18);
#line 247
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 248
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 249
 testRunner.And("I save the CRF page");
#line 250
 testRunner.And("I take a screenshot");
#line 251
 testRunner.And("I open the last log line");
#line 252
    testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 253
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 254
 testRunner.And("I take a screenshot");
#line 255
 testRunner.And("I cancel the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 257
 testRunner.When("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table19);
#line 262
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 263
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 265
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.4",
                        "Draft"});
#line 271
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 273
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 274
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table20);
#line 278
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.1 Cross Forms log form to Standard form")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_1CrossFormsLogFormToStandardForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.1 Cross Forms log form to Standard form", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.1",
                        "Draft"});
#line 284
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 288
    testRunner.And("I create a Subject", ((string)(null)), table21);
#line 292
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table22.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 293
 testRunner.And("I enter data in CRF and save", ((string)(null)), table22);
#line 299
 testRunner.And("I open log line 1");
#line 300
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 301
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 302
 testRunner.And("I take a screenshot");
#line 303
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 304
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 305
 testRunner.And("I save the CRF page");
#line 306
 testRunner.And("I open log line 1");
#line 307
 testRunner.And("I close the Query on Field \"End Date\"");
#line 308
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 309
 testRunner.And("I save the CRF page");
#line 310
 testRunner.And("I take a screenshot");
#line 311
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 312
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line 316
 testRunner.And("I open log line 1");
#line 317
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 318
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 319
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 320
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 324
 testRunner.And("I open log line 1");
#line 325
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 326
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 327
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.2",
                        "Draft"});
#line 333
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 335
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than End Date.",
                        "{DateTime}"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 336
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table25);
#line 340
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.3",
                        "Draft"});
#line 346
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 348
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 349
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table26.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table26.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table26.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 350
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table26);
#line 356
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 357
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 358
 testRunner.And("I take a screenshot");
#line 359
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 360
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 361
 testRunner.And("I save the CRF page");
#line 362
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 363
 testRunner.And("I enter data in CRF", ((string)(null)), table27);
#line 367
 testRunner.And("I close the Query on Field \"End Date\"");
#line 368
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 369
 testRunner.And("I save the CRF page");
#line 370
 testRunner.And("I take a screenshot");
#line 371
 testRunner.And("I open log line 2");
#line 372
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 373
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 374
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 375
 testRunner.When("I enter data in CRF and save", ((string)(null)), table28);
#line 379
 testRunner.And("I open the last log line");
#line 381
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 382
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 383
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.4",
                        "Draft"});
#line 389
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 391
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than End Date.",
                        "{DateTime}"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 392
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table29);
#line 396
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.5",
                        "Draft"});
#line 402
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 404
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 405
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table30.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table30.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 406
    testRunner.And("I enter data in CRF and save", ((string)(null)), table30);
#line 412
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 413
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Distribution Number\"");
#line 414
 testRunner.And("I take a screenshot");
#line 415
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 416
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Distribution Number\"");
#line 417
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 418
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 422
 testRunner.And("I close the Query on Field \"End Date\"");
#line 423
 testRunner.And("I close the Query on Field \"Current Distribution Number\"");
#line 424
 testRunner.And("I save the CRF page");
#line 425
 testRunner.And("I take a screenshot");
#line 426
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 427
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Distribution Number\"");
#line 428
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 429
    testRunner.And("I enter data in CRF", ((string)(null)), table32);
#line 433
 testRunner.And("I save the CRF page");
#line 435
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 436
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Distribution Number\"");
#line 437
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.6",
                        "Draft"});
#line 443
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 445
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 446
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table33);
#line 450
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.1",
                        "Draft"});
#line 456
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 459
    testRunner.And("I create a Subject", ((string)(null)), table34);
#line 463
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 464
 testRunner.And("I enter data in CRF and save", ((string)(null)), table35);
#line 470
 testRunner.And("I take a screenshot");
#line 471
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table36.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table36.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 472
    testRunner.And("I enter data in CRF and save", ((string)(null)), table36);
#line 478
 testRunner.And("I take a screenshot");
#line 479
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 480
 testRunner.And("I open log line 1");
#line 481
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 482
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 483
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Original Axis Number\"");
#line 484
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 485
 testRunner.And("I take a screenshot");
#line 486
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 487
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 488
 testRunner.And("I answer the Query \"{message}\" on Field \"Original Axis Number\"");
#line 489
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 490
 testRunner.And("I save the CRF page");
#line 491
 testRunner.And("I open log line 1");
#line 492
 testRunner.And("I close the Query \"{message}\" on Field \"Start Date\"");
#line 493
 testRunner.And("I close the Query \"{message}\" on Field \"End Date\"");
#line 494
 testRunner.And("I close the Query \"{message}\" on Field \"Original Axis Number\"");
#line 495
 testRunner.And("I close the Query \"{message}\" on Field \"Current Axis Number\"");
#line 496
 testRunner.And("I save the CRF page");
#line 497
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 498
 testRunner.And("I enter data in CRF on log line 1 and save", ((string)(null)), table37);
#line 504
 testRunner.And("I open log line 1");
#line 505
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 506
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 507
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Original Axis Number\"");
#line 508
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 509
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 510
 testRunner.When("I enter data in CRF and save", ((string)(null)), table38);
#line 516
 testRunner.And("I open log line 1");
#line 517
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 518
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 519
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Original Axis Number\"");
#line 520
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 521
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.2",
                        "Draft"});
#line 527
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 529
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 530
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table39);
#line 536
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.3",
                        "Draft"});
#line 542
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 543
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 544
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table40.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table40.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 545
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table40);
#line 551
 testRunner.And("I take a screenshot");
#line 552
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table41.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table41.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 553
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table41);
#line 559
 testRunner.And("I take a screenshot");
#line 560
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 561
 testRunner.And("I open log line 2");
#line 562
 testRunner.And("I take a screenshot");
#line 563
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 564
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 565
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Original Axis Number\"");
#line 566
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 567
 testRunner.And("I take a screenshot");
#line 568
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 569
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 570
 testRunner.And("I answer the Query \"{message}\" on Field \"Original Axis Number\"");
#line 571
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 573
 testRunner.And("I save the CRF page");
#line 574
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table42.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 575
    testRunner.And("I enter data in CRF", ((string)(null)), table42);
#line 581
 testRunner.And("I close the Query \"{message}\" on Field \"Start Date\"");
#line 582
 testRunner.And("I close the Query \"{message}\" on Field \"End Date\"");
#line 583
 testRunner.And("I close the Query \"{message}\" on Field \"Original Axis Number\"");
#line 584
 testRunner.And("I close the Query \"{message}\" on Field \"Current Axis Number\"");
#line 585
 testRunner.And("I save the CRF page");
#line 586
 testRunner.And("I open log line 2");
#line 587
 testRunner.And("I take a screenshot");
#line 589
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 590
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 591
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Original Axis Number\"");
#line 592
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 593
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table43.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 594
 testRunner.When("I enter data in CRF", ((string)(null)), table43);
#line 600
 testRunner.And("I save the CRF page");
#line 601
 testRunner.And("I open log line 2");
#line 602
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 603
 testRunner.And("I verify Requires Response Query with message \"ff\" is displayed on Field \"End Dat" +
                    "e\"");
#line 604
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Original Axis Number\"");
#line 605
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 606
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.4",
                        "Draft"});
#line 612
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 614
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 615
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table44);
#line 621
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyStandardFormToDifferentBadDataDoNotTouchLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.1",
                        "Draft"});
#line 627
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table45.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 629
    testRunner.And("I create a Subject", ((string)(null)), table45);
#line 633
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table46.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table46.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table46.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 634
 testRunner.And("I enter data in CRF and save", ((string)(null)), table46);
#line 640
 testRunner.And("I take a screenshot");
#line 641
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table47.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 642
    testRunner.And("I enter data in CRF and save", ((string)(null)), table47);
#line 648
 testRunner.And("I open log line 1");
#line 649
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 650
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 651
 testRunner.And("I take a screenshot");
#line 652
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 653
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 654
 testRunner.And("I save the CRF page");
#line 655
 testRunner.And("I open log line 1");
#line 656
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 657
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 658
 testRunner.And("I save the CRF page");
#line 659
 testRunner.And("I take a screenshot");
#line 660
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table48.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 661
 testRunner.And("I enter data in CRF and save", ((string)(null)), table48);
#line 666
    testRunner.When("I select Form \"Concomitant Medications\"");
#line 667
 testRunner.And("I open log line 1");
#line 668
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 669
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 670
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.2",
                        "Draft"});
#line 676
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 678
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent Current Axis Number is not equal to assessment Current Axis Numb" +
                            "er",
                        "{DateTime}"});
#line 679
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table49);
#line 683
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.1 On a Cross Forms,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_6_1OnACrossForms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.1 On a Cross Forms,", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.1",
                        "Draft"});
#line 689
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table50.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 692
    testRunner.And("I create a Subject", ((string)(null)), table50);
#line 696
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table51.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table51.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table51.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 697
 testRunner.And("I enter data in CRF and save", ((string)(null)), table51);
#line 703
 testRunner.And("I take a screenshot");
#line 704
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 705
    testRunner.And("I enter data in CRF and save", ((string)(null)), table52);
#line 711
 testRunner.And("I open log line 1");
#line 712
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 713
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 714
 testRunner.And("I take a screenshot");
#line 715
 testRunner.And("I cancel the Query \"{message}\" on Field \"Start Date\"");
#line 716
 testRunner.And("I cancel the Query \"{message}\" on Field \"Current Axis Number\"");
#line 718
 testRunner.And("I save the CRF page");
#line 719
 testRunner.And("I take a screenshot");
#line 720
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 721
 testRunner.And("I enter data in CRF and save", ((string)(null)), table53);
#line 725
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 726
 testRunner.And("I open log line 1");
#line 727
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 728
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 730
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.2",
                        "Draft"});
#line 736
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 738
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 739
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table54);
#line 743
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.1",
                        "Draft"});
#line 749
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table55.AddRow(new string[] {
                        "Subject Initials",
                        "sub107"});
#line 751
    testRunner.And("I create a Subject", ((string)(null)), table55);
#line 755
 testRunner.And("I select Folder \"Screening\"");
#line 756
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 757
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table56.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table56.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table56.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 758
 testRunner.And("I save the CRF page", ((string)(null)), table56);
#line 763
 testRunner.And("I take a screenshot");
#line 764
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 765
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table57.AddRow(new string[] {
                        "Original Axis Number",
                        "101"});
#line 766
 testRunner.And("I save the CRF page", ((string)(null)), table57);
#line 771
 testRunner.And("I take a screenshot");
#line 772
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 773
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 774
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 775
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Original Axis Number\"");
#line 776
 testRunner.And("I take a screenshot");
#line 777
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 778
 testRunner.And("I save the CRF page");
#line 779
 testRunner.And("I close the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" fields" +
                    "");
#line 780
 testRunner.And("I save the CRF page");
#line 781
 testRunner.And("I take a screenshot");
#line 782
 testRunner.And("I select the form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table58.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 783
 testRunner.And("I enter data in CRF", ((string)(null)), table58);
#line 788
 testRunner.And("I save the CRF page");
#line 789
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 790
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\" and \"Original Axis Numb" +
                    "er\" fields");
#line 791
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.2",
                        "Draft"});
#line 797
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 799
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 800
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table59);
#line 805
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredCancelQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.1",
                        "Draft"});
#line 811
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table60.AddRow(new string[] {
                        "Subject Initials",
                        "sub108"});
#line 813
    testRunner.And("I create a Subject", ((string)(null)), table60);
#line 817
 testRunner.And("I select Folder \"Screening\"");
#line 818
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 819
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table61.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table61.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 820
 testRunner.And("I save the CRF page", ((string)(null)), table61);
#line 825
 testRunner.And("I take a screenshot");
#line 826
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 827
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table62.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 828
 testRunner.And("I save the CRF page", ((string)(null)), table62);
#line 833
 testRunner.And("I take a screenshot");
#line 834
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 835
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 836
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 837
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Original Axis Number\"");
#line 838
 testRunner.And("I take a screenshot");
#line 839
 testRunner.And("I cancel the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 840
 testRunner.And("I save the CRF page");
#line 841
 testRunner.And("I take a screenshot");
#line 842
 testRunner.And("I select the form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table63.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table63.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 843
 testRunner.And("I enter data in CRF", ((string)(null)), table63);
#line 848
 testRunner.And("I save the CRF page");
#line 849
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 850
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\" and \"Original Axis Numb" +
                    "er\" fields");
#line 851
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.2",
                        "Draft"});
#line 857
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 859
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "AE Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 860
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table64);
#line 865
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentGoodDataDoNotTouchStandardForm_NoQueryAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.1",
                        "Draft"});
#line 871
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table65.AddRow(new string[] {
                        "Subject Initials",
                        "sub109"});
#line 873
    testRunner.And("I create a Subject", ((string)(null)), table65);
#line 877
 testRunner.And("I select Folder \"Screening\"");
#line 878
 testRunner.And("I select Form \"Informed Consent\"");
#line 879
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table66.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table66.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table66.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 880
 testRunner.And("I save the CRF page", ((string)(null)), table66);
#line 886
 testRunner.And("I take a screenshot");
#line 887
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 888
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 889
 testRunner.And("I save the CRF page", ((string)(null)), table67);
#line 895
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 896
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 897
 testRunner.And("I take a screenshot");
#line 898
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 899
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 900
 testRunner.And("I save the CRF page");
#line 901
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 902
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 903
 testRunner.And("I save the CRF page");
#line 904
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 905
 testRunner.And("I enter data in CRF", ((string)(null)), table68);
#line 909
 testRunner.And("I save the CRF page");
#line 910
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"Current Axis Number\" f" +
                    "ields");
#line 911
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.9.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.9.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.2",
                        "Draft"});
#line 917
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 919
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 920
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table69);
#line 924
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedicationsQueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentBadDataDoNotTouchStandardForm_QueryFiresAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.1",
                        "Draft"});
#line 930
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table70.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table70.AddRow(new string[] {
                        "Subject Initials",
                        "sub110"});
#line 932
    testRunner.And("I create a Subject", ((string)(null)), table70);
#line 936
 testRunner.And("I select Folder \"Screening\"");
#line 937
 testRunner.And("I select Form \"Informed Consent\"");
#line 938
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table71.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table71.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 939
 testRunner.And("I save the CRF page", ((string)(null)), table71);
#line 945
 testRunner.And("I take a screenshot");
#line 946
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 947
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table72.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table72.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 948
 testRunner.And("I save the CRF page", ((string)(null)), table72);
#line 954
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 955
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 956
 testRunner.And("I take a screenshot");
#line 957
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 958
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 959
 testRunner.And("I save the CRF page");
#line 960
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 961
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 962
 testRunner.And("I save the CRF page");
#line 963
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "21"});
#line 964
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line 968
 testRunner.And("I save the CRF page");
#line 969
    testRunner.And("I verify the queries refired on \"Start Date\" and \"Current Axis Number\" fields");
#line 970
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.10.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.10.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.2",
                        "Draft"});
#line 976
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 978
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 979
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 983
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.1 On a Cross Forms Standard form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_1OnACrossFormsStandardFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.1 On a Cross Forms Standard form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.1",
                        "Draft"});
#line 989
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table75.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table75.AddRow(new string[] {
                        "Subject Initials",
                        "sub111"});
#line 992
    testRunner.And("I create a Subject", ((string)(null)), table75);
#line 996
 testRunner.And("I select Folder \"Screening\"");
#line 997
 testRunner.And("I select Form \"Informed Consent\"");
#line 998
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table76.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table76.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 999
 testRunner.And("I save the CRF page", ((string)(null)), table76);
#line 1005
 testRunner.And("I take a screenshot");
#line 1006
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1007
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table77.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1008
 testRunner.And("I save the CRF page", ((string)(null)), table77);
#line 1014
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1015
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 1016
 testRunner.And("I take a screenshot");
#line 1017
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table78.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1018
 testRunner.And("I enter data in CRF", ((string)(null)), table78);
#line 1022
 testRunner.And("I save the CRF page");
#line 1023
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1024
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 1025
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.2",
                        "Draft"});
#line 1031
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1033
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1034
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table79);
#line 1038
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_12_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogForm_QueriesClosedBySystemAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.12.1",
                        "Draft"});
#line 1044
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table80.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table80.AddRow(new string[] {
                        "Subject Initials",
                        "sub112"});
#line 1046
    testRunner.And("I create a Subject", ((string)(null)), table80);
#line 1050
 testRunner.And("I select Folder \"Screening\"");
#line 1051
 testRunner.And("I select Form \"Informed Consent\"");
#line 1052
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table81.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table81.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table81.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1053
 testRunner.And("I save the CRF page", ((string)(null)), table81);
#line 1059
 testRunner.And("I take a screenshot");
#line 1060
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1061
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1062
 testRunner.And("I save the CRF page", ((string)(null)), table82);
#line 1068
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1069
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 1070
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1071
 testRunner.And("I enter data in CRF", ((string)(null)), table83);
#line 1075
 testRunner.And("I save the CRF page");
#line 1076
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 1077
 testRunner.And("I take a screenshot");
#line 1078
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1079
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table84);
#line 1083
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyStandardFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.1",
                        "Draft"});
#line 1089
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table85.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table85.AddRow(new string[] {
                        "Subject Initials",
                        "sub113"});
#line 1091
    testRunner.And("I create a Subject", ((string)(null)), table85);
#line 1095
 testRunner.And("I select Folder \"Screening\"");
#line 1096
 testRunner.And("I select Form \"Informed Consent\"");
#line 1097
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table86.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table86.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table86.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1098
 testRunner.And("I save the CRF page", ((string)(null)), table86);
#line 1104
 testRunner.And("I take a screenshot");
#line 1105
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1106
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table87.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1107
 testRunner.And("I save the CRF page", ((string)(null)), table87);
#line 1113
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1114
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 1115
 testRunner.And("I take a screenshot");
#line 1116
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table88.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1117
 testRunner.And("I enter data in CRF", ((string)(null)), table88);
#line 1121
 testRunner.And("I save the CRF page");
#line 1122
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1123
    testRunner.And("I verify the queries closed automatically");
#line 1124
 testRunner.And("I take a screenshot");
#line 1125
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table89.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1126
 testRunner.And("I enter data in CRF", ((string)(null)), table89);
#line 1130
 testRunner.And("I save the CRF page");
#line 1131
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1132
    testRunner.And("I verify the queries refire on \"Start Date\" and \"Current Axis Number\" fields");
#line 1133
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.13.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.13.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.2",
                        "Draft"});
#line 1139
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1141
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1142
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table90);
#line 1146
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.1",
                        "Draft"});
#line 1152
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table91.AddRow(new string[] {
                        "Subject Initials",
                        "sub114"});
#line 1154
    testRunner.And("I create a Subject", ((string)(null)), table91);
#line 1158
 testRunner.And("I select Folder \"Screening\"");
#line 1159
 testRunner.And("I select Form \"Informed Consent\"");
#line 1160
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table92.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table92.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table92.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1161
 testRunner.And("I save the CRF page", ((string)(null)), table92);
#line 1167
 testRunner.And("I take a screenshot");
#line 1168
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1169
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table93.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table93.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table93.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1170
 testRunner.And("I save the CRF page", ((string)(null)), table93);
#line 1176
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1177
    testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Current Axis Number\"");
#line 1178
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table94.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1179
 testRunner.And("I enter data in CRF", ((string)(null)), table94);
#line 1183
 testRunner.And("I save the CRF page");
#line 1184
    testRunner.And("I verify the queries closed automatically");
#line 1185
 testRunner.And("I take a screenshot");
#line 1186
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table95.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table95.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1187
 testRunner.And("I enter data in CRF", ((string)(null)), table95);
#line 1191
 testRunner.And("I save the CRF page");
#line 1192
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1193
    testRunner.And("I verify the queries refire on \"Start Date\" and \"Current Axis Number\" fields");
#line 1194
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.14.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.14.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.2",
                        "Draft"});
#line 1200
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1202
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1203
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table96);
#line 1207
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_1OnACrossFormsLogFormToLogFormFolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesOnConcomitantMedicationsFormModifyLogFieldsToDifferentGoodDataOnAdverseEventsFormDoNotTouchConcomitantMedicationsForm_NoQueriesOnConcomitantMedicationsAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.1",
                        "Draft"});
#line 1213
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table97.AddRow(new string[] {
                        "Subject Initials",
                        "sub115"});
#line 1215
    testRunner.And("I create a Subject", ((string)(null)), table97);
#line 1219
 testRunner.And("I select Folder \"Screening\"");
#line 1220
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1221
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table98.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table98.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1222
testRunner.And("I save the CRF page", ((string)(null)), table98);
#line 1226
 testRunner.And("I take a screenshot");
#line 1227
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1228
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table99.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1229
testRunner.And("I save the CRF page", ((string)(null)), table99);
#line 1233
 testRunner.And("I take a screenshot");
#line 1234
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1235
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1236
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 1237
 testRunner.And("I take a screenshot");
#line 1238
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 1239
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 1240
 testRunner.And("I save the CRF page");
#line 1241
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 1242
 testRunner.And("I close the Query on Field \"End Date\"");
#line 1243
 testRunner.And("I save the CRF page");
#line 1244
 testRunner.And("I take a screenshot");
#line 1245
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table100.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table100.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1246
 testRunner.And("I enter data in CRF", ((string)(null)), table100);
#line 1250
 testRunner.And("I save the CRF page");
#line 1251
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1252
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"End Date\" fields");
#line 1253
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.15.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.15.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.2",
                        "Draft"});
#line 1259
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1261
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1262
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table101);
#line 1266
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.1 On a Cross Forms log form to log form.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_1OnACrossFormsLogFormToLogForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.1 On a Cross Forms log form to log form.", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.1",
                        "Draft"});
#line 1272
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table102.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table102.AddRow(new string[] {
                        "Subject Initials",
                        "sub116"});
#line 1275
    testRunner.And("I create a Subject", ((string)(null)), table102);
#line 1279
 testRunner.And("I select Folder \"Screening\"");
#line 1280
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1281
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table103.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table103.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table103.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 1282
testRunner.And("I save the CRF page", ((string)(null)), table103);
#line 1287
 testRunner.And("I take a screenshot");
#line 1288
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1289
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table104.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table104.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 1290
testRunner.And("I save the CRF page", ((string)(null)), table104);
#line 1295
 testRunner.And("I take a screenshot");
#line 1296
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1297
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1298
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 1299
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Original Axis Number\"");
#line 1300
 testRunner.And("I take a screenshot");
#line 1301
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 1302
 testRunner.And("I save the CRF page");
#line 1303
 testRunner.And("I close the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" fields" +
                    "");
#line 1304
 testRunner.And("I save the CRF page");
#line 1305
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table105.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table105.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table105.AddRow(new string[] {
                        "Original Axis Number",
                        "99"});
#line 1306
 testRunner.And("I enter data in CRF", ((string)(null)), table105);
#line 1311
 testRunner.And("I save the CRF page");
#line 1312
    testRunner.And("I verify the queries refire on \"Start Date\", \"End Date\" and \"Original Axis Number" +
                    "\" fields");
#line 1313
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.2",
                        "Draft"});
#line 1319
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1321
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 1322
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table106);
#line 1327
   testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.1",
                        "Draft"});
#line 1333
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table107.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table107.AddRow(new string[] {
                        "Subject Initials",
                        "sub117"});
#line 1336
    testRunner.And("I create a Subject", ((string)(null)), table107);
#line 1340
 testRunner.And("I select Folder \"Screening\"");
#line 1341
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1342
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table108.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table108.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1343
testRunner.And("I save the CRF page", ((string)(null)), table108);
#line 1347
 testRunner.And("I take a screenshot");
#line 1348
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1349
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table109.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1350
testRunner.And("I save the CRF page", ((string)(null)), table109);
#line 1354
 testRunner.And("I take a screenshot");
#line 1355
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1356
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1357
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 1358
 testRunner.And("I take a screenshot");
#line 1359
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table110.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table110.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1360
 testRunner.And("I enter data in CRF", ((string)(null)), table110);
#line 1364
 testRunner.And("I save the CRF page");
#line 1365
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1366
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1367
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.2",
                        "Draft"});
#line 1373
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1375
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1376
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table111);
#line 1380
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.1",
                        "Draft"});
#line 1386
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table112.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table112.AddRow(new string[] {
                        "Subject Initials",
                        "sub118"});
#line 1389
    testRunner.And("I create a Subject", ((string)(null)), table112);
#line 1393
 testRunner.And("I select Folder \"Screening\"");
#line 1394
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1395
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table113.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1396
testRunner.And("I save the CRF page", ((string)(null)), table113);
#line 1400
 testRunner.And("I take a screenshot");
#line 1401
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1402
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table114.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1403
testRunner.And("I save the CRF page", ((string)(null)), table114);
#line 1407
 testRunner.And("I take a screenshot");
#line 1408
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1409
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1410
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 1411
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table115.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1412
 testRunner.And("I enter data in CRF", ((string)(null)), table115);
#line 1416
 testRunner.And("I save the CRF page");
#line 1417
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1418
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.2",
                        "Draft"});
#line 1424
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1426
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1427
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table116);
#line 1431
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredOnSecondLogFormModifyLogFieldsOnFirstLogFormToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnSecondLogForm_NavigateToFirstLogFormAndEnterNewValueInViolationOfEditCheck_QueriesRefiredOnSecondLogFormAndNoLogInTheDatabase()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.1",
                        "Draft"});
#line 1437
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table117.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table117.AddRow(new string[] {
                        "Subject Initials",
                        "sub119"});
#line 1439
    testRunner.And("I create a Subject", ((string)(null)), table117);
#line 1443
 testRunner.And("I select Folder \"Screening\"");
#line 1444
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1445
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table118.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1446
testRunner.And("I save the CRF page", ((string)(null)), table118);
#line 1450
 testRunner.And("I take a screenshot");
#line 1451
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1452
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table119.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1453
testRunner.And("I save the CRF page", ((string)(null)), table119);
#line 1457
 testRunner.And("I take a screenshot");
#line 1458
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1459
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1460
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 1461
 testRunner.And("I take a screenshot");
#line 1462
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table120.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1463
 testRunner.And("I enter data in CRF", ((string)(null)), table120);
#line 1467
 testRunner.And("I save the CRF page");
#line 1468
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1469
    testRunner.And("I verify the queries closed automatically");
#line 1470
 testRunner.And("I take a screenshot");
#line 1471
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table121.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1472
 testRunner.And("I enter data in CRF", ((string)(null)), table121);
#line 1476
 testRunner.And("I save the CRF page");
#line 1477
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1478
    testRunner.And("I verify the queries refired on \"Start Date\" and \"End Date\" fields");
#line 1479
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.19.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.19.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.2",
                        "Draft"});
#line 1485
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1487
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1488
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table122);
#line 1492
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.1",
                        "Draft"});
#line 1498
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table123.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table123.AddRow(new string[] {
                        "Subject Initials",
                        "sub120"});
#line 1503
    testRunner.And("I create a Subject", ((string)(null)), table123);
#line 1507
 testRunner.And("I select Folder \"Screening\"");
#line 1508
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1509
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table124.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1510
testRunner.And("I save the CRF page", ((string)(null)), table124);
#line 1514
 testRunner.And("I take a screenshot");
#line 1515
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1516
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table125.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1517
testRunner.And("I save the CRF page", ((string)(null)), table125);
#line 1521
 testRunner.And("I take a screenshot");
#line 1522
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1523
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Start Date\"");
#line 1524
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "End Date\"");
#line 1525
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table126.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1526
 testRunner.And("I enter data in CRF", ((string)(null)), table126);
#line 1530
 testRunner.And("I save the CRF page");
#line 1531
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1532
 testRunner.And("I take a screenshot");
#line 1533
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table127.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
#line 1534
 testRunner.And("I enter data in CRF", ((string)(null)), table127);
#line 1538
 testRunner.And("I save the CRF page");
#line 1539
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1540
    testRunner.And("I verify the queries refired on \"Start Date\" and \"End Date\" fields");
#line 1541
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.2",
                        "Draft"});
#line 1547
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1549
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1550
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table128);
#line 1554
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
            "uire manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_1OnAVerifiesQueryFiringOnMixedFormWithRequireResponseAndRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
                    "uire manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.1",
                        "Draft"});
#line 1560
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table129.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table129.AddRow(new string[] {
                        "Subject Initials",
                        "sub121"});
#line 1564
    testRunner.And("I create a Subject", ((string)(null)), table129);
#line 1568
 testRunner.And("I select Form \"Mixed Form\"");
#line 1569
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Standard 1",
                        "5"});
            table130.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table130.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 1570
testRunner.And("I save the CRF page", ((string)(null)), table130);
#line 1575
 testRunner.And("I take a screenshot");
#line 1576
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1577
 testRunner.And("I take a screenshot");
#line 1578
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 1579
 testRunner.And("I save the CRF page");
#line 1580
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 1581
 testRunner.And("I save the CRF page");
#line 1582
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table131.AddRow(new string[] {
                        "Standard 1",
                        "6"});
#line 1583
 testRunner.And("I enter data in CRF", ((string)(null)), table131);
#line 1586
 testRunner.And("I save the CRF page");
#line 1587
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1588
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.2",
                        "Draft"});
#line 1594
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1596
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table132.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub121",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "6",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1597
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table132);
#line 1600
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.1 On a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_1OnA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.1 On a", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.1",
                        "Draft"});
#line 1606
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table133.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table133.AddRow(new string[] {
                        "Subject Initials",
                        "sub122"});
#line 1611
    testRunner.And("I create a Subject", ((string)(null)), table133);
#line 1615
 testRunner.And("I select Form \"Mixed Form\"");
#line 1616
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table134.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table134.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1617
testRunner.And("I save the CRF page", ((string)(null)), table134);
#line 1622
 testRunner.And("I take a screenshot");
#line 1623
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1624
 testRunner.And("I take a screenshot");
#line 1625
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1626
 testRunner.And("I save the CRF page");
#line 1627
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 1628
 testRunner.And("I enter data in CRF", ((string)(null)), table135);
#line 1631
 testRunner.And("I save the CRF page");
#line 1632
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1633
 testRunner.And("I take a screenshot");
#line 1634
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table136.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "5",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1635
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table136);
#line 1638
 testRunner.And("I take a screenshot");
#line 1640
 testRunner.And("I select Form \"Mixed Form\"");
#line 1641
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table137.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1642
 testRunner.And("I enter data in CRF", ((string)(null)), table137);
#line 1646
 testRunner.And("I take a screenshot");
#line 1647
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1648
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1649
 testRunner.And("I enter data in CRF", ((string)(null)), table138);
#line 1652
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1653
 testRunner.And("I save the CRF page");
#line 1654
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 1655
 testRunner.And("I enter data in CRF", ((string)(null)), table139);
#line 1658
 testRunner.And("I save the CRF page");
#line 1659
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1660
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.2",
                        "Draft"});
#line 1666
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1668
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table140.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "2",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1669
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table140);
#line 1672
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.3",
                        "Draft"});
#line 1678
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1680
 testRunner.And("I select Form \"Mixed Form\"");
#line 1681
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table141.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1682
 testRunner.And("I enter data in CRF", ((string)(null)), table141);
#line 1686
 testRunner.And("I take a screenshot");
#line 1687
 testRunner.And("I verify Requires Response Query with message \"{message}\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1688
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1689
 testRunner.And("I enter data in CRF", ((string)(null)), table142);
#line 1692
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1693
 testRunner.And("I save the CRF page");
#line 1694
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Standard 1",
                        "10"});
#line 1695
 testRunner.And("I enter data in CRF", ((string)(null)), table143);
#line 1698
 testRunner.And("I save the CRF page");
#line 1699
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1700
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.4",
                        "Draft"});
#line 1706
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1708
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table144.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "3",
                        "Log Field 1",
                        "10",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "8",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1709
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table144);
#line 1712
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
