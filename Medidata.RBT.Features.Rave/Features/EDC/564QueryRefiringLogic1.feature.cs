// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "1", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "1")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("AAA")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void AAA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("AAA", ((string[])(null)));
#line 23
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 25
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("BBB")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void BBB()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("BBB", ((string[])(null)));
#line 27
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 29
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.1",
                        "Draft"});
#line 34
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 36
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "sub101"});
#line 37
 testRunner.And("I create a Subject", ((string)(null)), table1);
#line 41
 testRunner.And("I select Folder \"Screening\"");
#line 42
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 43
 testRunner.And("I enter data in CRF", ((string)(null)), table2);
#line 49
 testRunner.And("I save the CRF page");
#line 50
 testRunner.And("I take a screenshot");
#line 51
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 52
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 58
 testRunner.And("I save the CRF page");
#line 59
 testRunner.And("I open log line 1");
#line 60
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 61
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 62
 testRunner.And("I take a screenshot");
#line 63
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 64
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 65
 testRunner.And("I save the CRF page");
#line 66
 testRunner.And("I open log line 1");
#line 67
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 68
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 69
 testRunner.And("I save the CRF page");
#line 70
 testRunner.And("I take a screenshot");
#line 71
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 72
 testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 76
 testRunner.And("I save the CRF page");
#line 77
 testRunner.And("I open log line 1");
#line 78
    testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 79
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 80
 testRunner.And("I take a screenshot");
#line 83
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 84
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 88
 testRunner.And("I save the CRF page");
#line 89
 testRunner.And("I open log line 1");
#line 90
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 91
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 92
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.2",
                        "Draft"});
#line 98
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 100
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 101
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table6);
#line 105
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.3",
                        "Draft"});
#line 111
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 112
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 113
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 114
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 115
 testRunner.And("I enter data in CRF", ((string)(null)), table7);
#line 121
 testRunner.And("I save the CRF page");
#line 122
 testRunner.And("I open log line 2");
#line 123
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 124
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 125
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 126
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 131
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 132
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 133
 testRunner.And("I save the CRF page");
#line 134
 testRunner.And("I open log line 2");
#line 135
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 136
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 137
 testRunner.And("I close the Query on Field \"{fieldNames}\"");
#line 138
 testRunner.And("I save the CRF page");
#line 139
 testRunner.And("I take a screenshot");
#line 140
 testRunner.And("I open log line 2");
#line 141
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 142
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 144
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 146
 testRunner.And("I enter data in CRF", ((string)(null)), table9);
#line 150
 testRunner.And("I save the CRF page");
#line 151
 testRunner.And("I open log line 1");
#line 152
 testRunner.Then("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 153
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 154
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.4",
                        "Draft"});
#line 160
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 162
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 163
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table10);
#line 167
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
            "and save data on form \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_1OnACrossFoldersStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
                    "and save data on form \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.1",
                        "Draft"});
#line 173
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 175
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "sub102"});
#line 176
    testRunner.And("I create a Subject", ((string)(null)), table11);
#line 180
 testRunner.And("I select Folder \"Screening\"");
#line 181
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table12.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table12.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 182
 testRunner.And("I enter data in CRF", ((string)(null)), table12);
#line 188
 testRunner.And("I save the CRF page");
#line 189
 testRunner.And("I take a screenshot");
#line 190
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 191
    testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 198
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 199
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 200
 testRunner.And("I take a screenshot");
#line 201
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 202
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 203
 testRunner.And("I save the CRF page");
#line 204
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 205
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 206
 testRunner.And("I save the CRF page");
#line 207
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 208
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table14);
#line 214
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 215
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 216
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 219
 testRunner.When("I enter data in CRF and save", ((string)(null)), table15);
#line 224
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 225
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 226
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.2",
                        "Draft"});
#line 232
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 234
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 235
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table16);
#line 239
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.3",
                        "Draft"});
#line 245
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 246
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 247
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 248
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table17);
#line 254
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 255
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 256
 testRunner.And("I take a screenshot");
#line 257
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 258
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 259
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 260
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table18);
#line 265
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 266
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 267
 testRunner.And("I save the CRF page");
#line 268
 testRunner.And("I take a screenshot");
#line 269
 testRunner.And("I open the last log line");
#line 270
    testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 271
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 272
 testRunner.And("I take a screenshot");
#line 273
 testRunner.And("I cancel the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 275
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table19);
#line 280
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 281
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 282
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.4",
                        "Draft"});
#line 288
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 290
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 291
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table20);
#line 295
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.1 Cross Forms log form to Standard form")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_1CrossFormsLogFormToStandardForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.1 Cross Forms log form to Standard form", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.1",
                        "Draft"});
#line 301
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 305
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "sub103"});
#line 306
    testRunner.And("I create a Subject", ((string)(null)), table21);
#line 310
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table22.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 311
 testRunner.And("I enter data in CRF and save", ((string)(null)), table22);
#line 317
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 318
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 319
 testRunner.And("I take a screenshot");
#line 320
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 321
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 322
 testRunner.And("I save the CRF page");
#line 323
 testRunner.And("I close the Query on Field \"End Date\"");
#line 324
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 325
 testRunner.And("I save the CRF page");
#line 326
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 327
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table23);
#line 331
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 332
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 333
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 334
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 338
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 339
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 340
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.2",
                        "Draft"});
#line 346
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 348
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than End Date.",
                        "{DateTime}"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 349
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table25);
#line 353
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.3",
                        "Draft"});
#line 359
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 360
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line 361
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 362
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table26.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table26.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table26.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 363
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table26);
#line 369
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 370
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 371
 testRunner.And("I take a screenshot");
#line 372
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 373
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 374
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 375
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table27);
#line 379
 testRunner.And("I close the Query on Field \"End Date\"");
#line 380
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 381
 testRunner.And("I save the CRF page");
#line 382
 testRunner.And("I take a screenshot");
#line 383
 testRunner.And("I open the last log line");
#line 384
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 385
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 386
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 387
 testRunner.And("I enter data in CRF and save", ((string)(null)), table28);
#line 391
 testRunner.And("I open the last log line");
#line 393
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.4",
                        "Draft"});
#line 399
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 401
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than End Date.",
                        "{DateTime}"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 402
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table29);
#line 406
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.5",
                        "Draft"});
#line 412
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 413
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 414
 testRunner.And("I select Form \"Informed Consent\" within folder \"Week 1\"");
#line 415
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table30.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table30.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 416
 testRunner.And("I save the CRF page", ((string)(null)), table30);
#line 422
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 423
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 424
 testRunner.And("I take a screenshot");
#line 425
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 426
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Distribution Number\"");
#line 427
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 428
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 432
 testRunner.And("I close the Query on Field \"End Date\"");
#line 433
 testRunner.And("I close the Query on Field \"Current Distribution Number\"");
#line 434
 testRunner.And("I save the CRF page");
#line 435
 testRunner.And("I take a screenshot");
#line 436
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 437
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Distribution Number\"");
#line 438
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 439
    testRunner.And("I enter data in CRF", ((string)(null)), table32);
#line 443
 testRunner.And("I save the CRF page");
#line 444
 testRunner.And("I verify new queries did fire on \"End Date\" and \"Current Distribution Number\" fie" +
                    "lds");
#line 445
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.6",
                        "Draft"});
#line 451
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 453
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 454
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table33);
#line 458
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.1",
                        "Draft"});
#line 464
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "sub104"});
#line 467
    testRunner.And("I create a Subject", ((string)(null)), table34);
#line 471
 testRunner.And("I select Folder \"Screening\"");
#line 472
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 473
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 474
 testRunner.And("I save the CRF page", ((string)(null)), table35);
#line 480
 testRunner.And("I take a screenshot");
#line 481
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 482
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table36.AddRow(new string[] {
                        "Original Axis Number",
                        "101"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 483
 testRunner.And("I save the CRF page", ((string)(null)), table36);
#line 489
 testRunner.And("I take a screenshot");
#line 490
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 491
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 492
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 493
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 494
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 495
 testRunner.And("I take a screenshot");
#line 496
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Cur" +
                    "rent Axis Number\" fields");
#line 497
 testRunner.And("I save the CRF page");
#line 498
 testRunner.And("I close the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Curr" +
                    "ent Axis Number\" fields");
#line 499
 testRunner.And("I save the CRF page");
#line 500
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 501
 testRunner.And("I enter data in CRF", ((string)(null)), table37);
#line 507
 testRunner.And("I save the CRF page");
#line 508
 testRunner.And("I verify the queries did not fire on \"Start Date\", \"End Date\", \"Original Axis Num" +
                    "ber\" and \"Current Axis Number\" fields");
#line 509
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 510
 testRunner.And("I enter data in CRF", ((string)(null)), table38);
#line 516
 testRunner.And("I save the CRF page");
#line 517
 testRunner.And("I verify new queries did not fire on \"Start Date\", \"End Date\", \"Original Axis Num" +
                    "ber\" and \"Current Axis Number\" fields");
#line 518
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.2",
                        "Draft"});
#line 524
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 526
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 527
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table39);
#line 533
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.3",
                        "Draft"});
#line 539
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 540
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 541
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 542
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table40.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table40.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 543
 testRunner.And("I enter data in CRF", ((string)(null)), table40);
#line 549
 testRunner.And("I take a screenshot");
#line 550
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 551
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Date Field 1",
                        "11 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table41.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table41.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 552
 testRunner.And("I enter data in CRF", ((string)(null)), table41);
#line 558
 testRunner.And("I take a screenshot");
#line 559
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 560
 testRunner.And("I open log line 2");
#line 561
 testRunner.And("I take a screenshot");
#line 562
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 563
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 564
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 565
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 566
 testRunner.And("I take a screenshot");
#line 567
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Cur" +
                    "rent Axis Number\" fields");
#line 568
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table42.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 569
    testRunner.And("I enter data in CRF", ((string)(null)), table42);
#line 575
 testRunner.And("I close the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Curr" +
                    "ent Axis Number\" fields");
#line 576
 testRunner.And("I save the CRF page");
#line 577
 testRunner.And("I take a screenshot");
#line 578
 testRunner.And("I verify the queries did not fire on \"Start Date\", \"End Date\", \"Original Axis Num" +
                    "ber\" and \"Current Axis Number\" fields");
#line 579
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table43.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 580
 testRunner.And("I enter data in CRF", ((string)(null)), table43);
#line 586
 testRunner.And("I save the CRF page");
#line 587
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\", \"Original Axis Number\"" +
                    " and \"Current Axis Number\" fields");
#line 588
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.4",
                        "Draft"});
#line 594
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 596
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 597
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table44);
#line 603
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyStandardFormToDifferentBadDataDoNotTouchLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.1",
                        "Draft"});
#line 609
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table45.AddRow(new string[] {
                        "Subject Initials",
                        "sub105"});
#line 611
    testRunner.And("I create a Subject", ((string)(null)), table45);
#line 615
 testRunner.And("I select Folder \"Screening\"");
#line 616
 testRunner.And("I select Form \"Informed Consent\"");
#line 617
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table46.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table46.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table46.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 618
 testRunner.And("I save the CRF page", ((string)(null)), table46);
#line 624
 testRunner.And("I take a screenshot");
#line 625
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 626
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table47.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 627
 testRunner.And("I save the CRF page", ((string)(null)), table47);
#line 633
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 634
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 635
 testRunner.And("I take a screenshot");
#line 636
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 637
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 638
 testRunner.And("I save the CRF page");
#line 639
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 640
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 641
 testRunner.And("I save the CRF page");
#line 642
 testRunner.And("I take a screenshot");
#line 643
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table48.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 644
 testRunner.And("I enter data in CRF", ((string)(null)), table48);
#line 648
 testRunner.And("I save the CRF page");
#line 649
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 650
 testRunner.And("I verify new queries did fire on \"Start Date\" and \"Current Axis Number\" fields");
#line 651
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.2",
                        "Draft"});
#line 657
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 659
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent Current Axis Number is not equal to assessment Current Axis Numb" +
                            "er",
                        "{DateTime}"});
#line 660
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table49);
#line 664
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.3 On a Cross Forms,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_3OnACrossForms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.3 On a Cross Forms,", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.1",
                        "Draft"});
#line 670
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table50.AddRow(new string[] {
                        "Subject Initials",
                        "sub106"});
#line 673
    testRunner.And("I create a Subject", ((string)(null)), table50);
#line 677
 testRunner.And("I select Folder \"Screening\"");
#line 678
 testRunner.And("I select Form \"Informed Consent\"");
#line 679
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table51.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table51.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table51.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 680
 testRunner.And("I save the CRF page", ((string)(null)), table51);
#line 686
 testRunner.And("I take a screenshot");
#line 687
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 688
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 689
 testRunner.And("I save the CRF page", ((string)(null)), table52);
#line 695
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 696
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 697
 testRunner.And("I take a screenshot");
#line 698
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields");
#line 699
 testRunner.And("I save the CRF page");
#line 700
 testRunner.And("I take a screenshot");
#line 701
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 702
 testRunner.And("I enter data in CRF", ((string)(null)), table53);
#line 706
 testRunner.And("I save the CRF page");
#line 707
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 708
 testRunner.And("I verify new queries did fire on \"Start Date\" and \"Current Axis Number\" fields");
#line 709
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.2",
                        "Draft"});
#line 715
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 717
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 718
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table54);
#line 722
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.1",
                        "Draft"});
#line 728
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table55.AddRow(new string[] {
                        "Subject Initials",
                        "sub107"});
#line 730
    testRunner.And("I create a Subject", ((string)(null)), table55);
#line 734
 testRunner.And("I select Folder \"Screening\"");
#line 735
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 736
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table56.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table56.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table56.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 737
 testRunner.And("I save the CRF page", ((string)(null)), table56);
#line 742
 testRunner.And("I take a screenshot");
#line 743
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 744
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table57.AddRow(new string[] {
                        "Original Axis Number",
                        "101"});
#line 745
 testRunner.And("I save the CRF page", ((string)(null)), table57);
#line 750
 testRunner.And("I take a screenshot");
#line 751
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 752
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 753
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 754
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 755
 testRunner.And("I take a screenshot");
#line 756
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 757
 testRunner.And("I save the CRF page");
#line 758
 testRunner.And("I close the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" fields" +
                    "");
#line 759
 testRunner.And("I save the CRF page");
#line 760
 testRunner.And("I take a screenshot");
#line 761
 testRunner.And("I select the form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table58.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 762
 testRunner.And("I enter data in CRF", ((string)(null)), table58);
#line 767
 testRunner.And("I save the CRF page");
#line 768
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 769
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\" and \"Original Axis Numb" +
                    "er\" fields");
#line 770
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.2",
                        "Draft"});
#line 776
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 778
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 779
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table59);
#line 784
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredCancelQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.1",
                        "Draft"});
#line 790
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table60.AddRow(new string[] {
                        "Subject Initials",
                        "sub108"});
#line 792
    testRunner.And("I create a Subject", ((string)(null)), table60);
#line 796
 testRunner.And("I select Folder \"Screening\"");
#line 797
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 798
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table61.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table61.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 799
 testRunner.And("I save the CRF page", ((string)(null)), table61);
#line 804
 testRunner.And("I take a screenshot");
#line 805
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 806
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table62.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 807
 testRunner.And("I save the CRF page", ((string)(null)), table62);
#line 812
 testRunner.And("I take a screenshot");
#line 813
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 814
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 815
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 816
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 817
 testRunner.And("I take a screenshot");
#line 818
 testRunner.And("I cancel the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 819
 testRunner.And("I save the CRF page");
#line 820
 testRunner.And("I take a screenshot");
#line 821
 testRunner.And("I select the form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table63.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table63.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 822
 testRunner.And("I enter data in CRF", ((string)(null)), table63);
#line 827
 testRunner.And("I save the CRF page");
#line 828
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 829
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\" and \"Original Axis Numb" +
                    "er\" fields");
#line 830
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.2",
                        "Draft"});
#line 836
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 838
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "AE Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 839
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table64);
#line 844
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentGoodDataDoNotTouchStandardForm_NoQueryAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.1",
                        "Draft"});
#line 850
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table65.AddRow(new string[] {
                        "Subject Initials",
                        "sub109"});
#line 852
    testRunner.And("I create a Subject", ((string)(null)), table65);
#line 856
 testRunner.And("I select Folder \"Screening\"");
#line 857
 testRunner.And("I select Form \"Informed Consent\"");
#line 858
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table66.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table66.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table66.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 859
 testRunner.And("I save the CRF page", ((string)(null)), table66);
#line 865
 testRunner.And("I take a screenshot");
#line 866
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 867
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 868
 testRunner.And("I save the CRF page", ((string)(null)), table67);
#line 874
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 875
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 876
 testRunner.And("I take a screenshot");
#line 877
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 878
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 879
 testRunner.And("I save the CRF page");
#line 880
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 881
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 882
 testRunner.And("I save the CRF page");
#line 883
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 884
 testRunner.And("I enter data in CRF", ((string)(null)), table68);
#line 888
 testRunner.And("I save the CRF page");
#line 889
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"Current Axis Number\" f" +
                    "ields");
#line 890
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.9.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.9.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.2",
                        "Draft"});
#line 896
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 898
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 899
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table69);
#line 903
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedicationsQueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentBadDataDoNotTouchStandardForm_QueryFiresAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.1",
                        "Draft"});
#line 909
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table70.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table70.AddRow(new string[] {
                        "Subject Initials",
                        "sub110"});
#line 911
    testRunner.And("I create a Subject", ((string)(null)), table70);
#line 915
 testRunner.And("I select Folder \"Screening\"");
#line 916
 testRunner.And("I select Form \"Informed Consent\"");
#line 917
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table71.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table71.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 918
 testRunner.And("I save the CRF page", ((string)(null)), table71);
#line 924
 testRunner.And("I take a screenshot");
#line 925
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 926
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table72.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table72.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 927
 testRunner.And("I save the CRF page", ((string)(null)), table72);
#line 933
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 934
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 935
 testRunner.And("I take a screenshot");
#line 936
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 937
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 938
 testRunner.And("I save the CRF page");
#line 939
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 940
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 941
 testRunner.And("I save the CRF page");
#line 942
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "21"});
#line 943
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line 947
 testRunner.And("I save the CRF page");
#line 948
    testRunner.And("I verify the queries refired on \"Start Date\" and \"Current Axis Number\" fields");
#line 949
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.10.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.10.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.2",
                        "Draft"});
#line 955
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 957
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 958
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 962
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.1 On a Cross Forms Standard form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_1OnACrossFormsStandardFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.1 On a Cross Forms Standard form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.1",
                        "Draft"});
#line 968
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table75.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table75.AddRow(new string[] {
                        "Subject Initials",
                        "sub111"});
#line 971
    testRunner.And("I create a Subject", ((string)(null)), table75);
#line 975
 testRunner.And("I select Folder \"Screening\"");
#line 976
 testRunner.And("I select Form \"Informed Consent\"");
#line 977
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table76.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table76.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 978
 testRunner.And("I save the CRF page", ((string)(null)), table76);
#line 984
 testRunner.And("I take a screenshot");
#line 985
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 986
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table77.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 987
 testRunner.And("I save the CRF page", ((string)(null)), table77);
#line 993
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 994
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 995
 testRunner.And("I take a screenshot");
#line 996
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table78.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 997
 testRunner.And("I enter data in CRF", ((string)(null)), table78);
#line 1001
 testRunner.And("I save the CRF page");
#line 1002
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1003
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 1004
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.2",
                        "Draft"});
#line 1010
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1012
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1013
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table79);
#line 1017
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_12_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogForm_QueriesClosedBySystemAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.12.1",
                        "Draft"});
#line 1023
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table80.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table80.AddRow(new string[] {
                        "Subject Initials",
                        "sub112"});
#line 1025
    testRunner.And("I create a Subject", ((string)(null)), table80);
#line 1029
 testRunner.And("I select Folder \"Screening\"");
#line 1030
 testRunner.And("I select Form \"Informed Consent\"");
#line 1031
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table81.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table81.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table81.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1032
 testRunner.And("I save the CRF page", ((string)(null)), table81);
#line 1038
 testRunner.And("I take a screenshot");
#line 1039
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1040
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1041
 testRunner.And("I save the CRF page", ((string)(null)), table82);
#line 1047
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1048
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 1049
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1050
 testRunner.And("I enter data in CRF", ((string)(null)), table83);
#line 1054
 testRunner.And("I save the CRF page");
#line 1055
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 1056
 testRunner.And("I take a screenshot");
#line 1057
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1058
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table84);
#line 1062
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyStandardFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.1",
                        "Draft"});
#line 1068
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table85.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table85.AddRow(new string[] {
                        "Subject Initials",
                        "sub113"});
#line 1070
    testRunner.And("I create a Subject", ((string)(null)), table85);
#line 1074
 testRunner.And("I select Folder \"Screening\"");
#line 1075
 testRunner.And("I select Form \"Informed Consent\"");
#line 1076
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table86.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table86.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table86.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1077
 testRunner.And("I save the CRF page", ((string)(null)), table86);
#line 1083
 testRunner.And("I take a screenshot");
#line 1084
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1085
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table87.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1086
 testRunner.And("I save the CRF page", ((string)(null)), table87);
#line 1092
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1093
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 1094
 testRunner.And("I take a screenshot");
#line 1095
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table88.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1096
 testRunner.And("I enter data in CRF", ((string)(null)), table88);
#line 1100
 testRunner.And("I save the CRF page");
#line 1101
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1102
    testRunner.And("I verify the queries closed automatically");
#line 1103
 testRunner.And("I take a screenshot");
#line 1104
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table89.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1105
 testRunner.And("I enter data in CRF", ((string)(null)), table89);
#line 1109
 testRunner.And("I save the CRF page");
#line 1110
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1111
    testRunner.And("I verify the queries refire on \"Start Date\" and \"Current Axis Number\" fields");
#line 1112
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.13.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.13.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.2",
                        "Draft"});
#line 1118
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1120
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1121
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table90);
#line 1125
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.1",
                        "Draft"});
#line 1131
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table91.AddRow(new string[] {
                        "Subject Initials",
                        "sub114"});
#line 1133
    testRunner.And("I create a Subject", ((string)(null)), table91);
#line 1137
 testRunner.And("I select Folder \"Screening\"");
#line 1138
 testRunner.And("I select Form \"Informed Consent\"");
#line 1139
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table92.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table92.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table92.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1140
 testRunner.And("I save the CRF page", ((string)(null)), table92);
#line 1146
 testRunner.And("I take a screenshot");
#line 1147
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1148
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table93.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table93.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table93.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1149
 testRunner.And("I save the CRF page", ((string)(null)), table93);
#line 1155
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1156
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 1157
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table94.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1158
 testRunner.And("I enter data in CRF", ((string)(null)), table94);
#line 1162
 testRunner.And("I save the CRF page");
#line 1163
    testRunner.And("I verify the queries closed automatically");
#line 1164
 testRunner.And("I take a screenshot");
#line 1165
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table95.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table95.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1166
 testRunner.And("I enter data in CRF", ((string)(null)), table95);
#line 1170
 testRunner.And("I save the CRF page");
#line 1171
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1172
    testRunner.And("I verify the queries refire on \"Start Date\" and \"Current Axis Number\" fields");
#line 1173
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.14.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.14.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.2",
                        "Draft"});
#line 1179
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1181
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1182
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table96);
#line 1186
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_1OnACrossFormsLogFormToLogFormFolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesOnConcomitantMedicationsFormModifyLogFieldsToDifferentGoodDataOnAdverseEventsFormDoNotTouchConcomitantMedicationsForm_NoQueriesOnConcomitantMedicationsAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.1",
                        "Draft"});
#line 1192
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table97.AddRow(new string[] {
                        "Subject Initials",
                        "sub115"});
#line 1194
    testRunner.And("I create a Subject", ((string)(null)), table97);
#line 1198
 testRunner.And("I select Folder \"Screening\"");
#line 1199
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1200
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table98.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table98.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1201
testRunner.And("I save the CRF page", ((string)(null)), table98);
#line 1205
 testRunner.And("I take a screenshot");
#line 1206
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1207
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table99.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1208
testRunner.And("I save the CRF page", ((string)(null)), table99);
#line 1212
 testRunner.And("I take a screenshot");
#line 1213
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1214
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1215
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1216
 testRunner.And("I take a screenshot");
#line 1217
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 1218
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 1219
 testRunner.And("I save the CRF page");
#line 1220
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 1221
 testRunner.And("I close the Query on Field \"End Date\"");
#line 1222
 testRunner.And("I save the CRF page");
#line 1223
 testRunner.And("I take a screenshot");
#line 1224
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table100.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table100.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1225
 testRunner.And("I enter data in CRF", ((string)(null)), table100);
#line 1229
 testRunner.And("I save the CRF page");
#line 1230
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1231
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"End Date\" fields");
#line 1232
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.15.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.15.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.2",
                        "Draft"});
#line 1238
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1240
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1241
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table101);
#line 1245
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.1 On a Cross Forms log form to log form.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_1OnACrossFormsLogFormToLogForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.1 On a Cross Forms log form to log form.", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.1",
                        "Draft"});
#line 1251
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table102.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table102.AddRow(new string[] {
                        "Subject Initials",
                        "sub116"});
#line 1254
    testRunner.And("I create a Subject", ((string)(null)), table102);
#line 1258
 testRunner.And("I select Folder \"Screening\"");
#line 1259
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1260
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table103.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table103.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table103.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 1261
testRunner.And("I save the CRF page", ((string)(null)), table103);
#line 1266
 testRunner.And("I take a screenshot");
#line 1267
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1268
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table104.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table104.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 1269
testRunner.And("I save the CRF page", ((string)(null)), table104);
#line 1274
 testRunner.And("I take a screenshot");
#line 1275
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1276
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1277
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1278
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 1279
 testRunner.And("I take a screenshot");
#line 1280
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 1281
 testRunner.And("I save the CRF page");
#line 1282
 testRunner.And("I close the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" fields" +
                    "");
#line 1283
 testRunner.And("I save the CRF page");
#line 1284
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table105.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table105.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table105.AddRow(new string[] {
                        "Original Axis Number",
                        "99"});
#line 1285
 testRunner.And("I enter data in CRF", ((string)(null)), table105);
#line 1290
 testRunner.And("I save the CRF page");
#line 1291
    testRunner.And("I verify the queries refire on \"Start Date\", \"End Date\" and \"Original Axis Number" +
                    "\" fields");
#line 1292
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.2",
                        "Draft"});
#line 1298
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1300
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 1301
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table106);
#line 1306
   testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.1",
                        "Draft"});
#line 1312
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table107.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table107.AddRow(new string[] {
                        "Subject Initials",
                        "sub117"});
#line 1315
    testRunner.And("I create a Subject", ((string)(null)), table107);
#line 1319
 testRunner.And("I select Folder \"Screening\"");
#line 1320
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1321
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table108.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table108.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1322
testRunner.And("I save the CRF page", ((string)(null)), table108);
#line 1326
 testRunner.And("I take a screenshot");
#line 1327
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1328
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table109.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1329
testRunner.And("I save the CRF page", ((string)(null)), table109);
#line 1333
 testRunner.And("I take a screenshot");
#line 1334
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1335
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1336
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1337
 testRunner.And("I take a screenshot");
#line 1338
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table110.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table110.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1339
 testRunner.And("I enter data in CRF", ((string)(null)), table110);
#line 1343
 testRunner.And("I save the CRF page");
#line 1344
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1345
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1346
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.2",
                        "Draft"});
#line 1352
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1354
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1355
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table111);
#line 1359
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.1",
                        "Draft"});
#line 1365
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table112.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table112.AddRow(new string[] {
                        "Subject Initials",
                        "sub118"});
#line 1368
    testRunner.And("I create a Subject", ((string)(null)), table112);
#line 1372
 testRunner.And("I select Folder \"Screening\"");
#line 1373
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1374
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table113.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1375
testRunner.And("I save the CRF page", ((string)(null)), table113);
#line 1379
 testRunner.And("I take a screenshot");
#line 1380
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1381
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table114.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1382
testRunner.And("I save the CRF page", ((string)(null)), table114);
#line 1386
 testRunner.And("I take a screenshot");
#line 1387
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1388
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1389
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1390
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table115.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1391
 testRunner.And("I enter data in CRF", ((string)(null)), table115);
#line 1395
 testRunner.And("I save the CRF page");
#line 1396
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1397
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.2",
                        "Draft"});
#line 1403
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1405
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1406
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table116);
#line 1410
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredOnSecondLogFormModifyLogFieldsOnFirstLogFormToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnSecondLogForm_NavigateToFirstLogFormAndEnterNewValueInViolationOfEditCheck_QueriesRefiredOnSecondLogFormAndNoLogInTheDatabase()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.1",
                        "Draft"});
#line 1416
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table117.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table117.AddRow(new string[] {
                        "Subject Initials",
                        "sub119"});
#line 1418
    testRunner.And("I create a Subject", ((string)(null)), table117);
#line 1422
 testRunner.And("I select Folder \"Screening\"");
#line 1423
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1424
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table118.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1425
testRunner.And("I save the CRF page", ((string)(null)), table118);
#line 1429
 testRunner.And("I take a screenshot");
#line 1430
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1431
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table119.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1432
testRunner.And("I save the CRF page", ((string)(null)), table119);
#line 1436
 testRunner.And("I take a screenshot");
#line 1437
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1438
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1439
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1440
 testRunner.And("I take a screenshot");
#line 1441
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table120.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1442
 testRunner.And("I enter data in CRF", ((string)(null)), table120);
#line 1446
 testRunner.And("I save the CRF page");
#line 1447
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1448
    testRunner.And("I verify the queries closed automatically");
#line 1449
 testRunner.And("I take a screenshot");
#line 1450
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table121.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1451
 testRunner.And("I enter data in CRF", ((string)(null)), table121);
#line 1455
 testRunner.And("I save the CRF page");
#line 1456
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1457
    testRunner.And("I verify the queries refired on \"Start Date\" and \"End Date\" fields");
#line 1458
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.19.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.19.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.2",
                        "Draft"});
#line 1464
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1466
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1467
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table122);
#line 1471
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.1",
                        "Draft"});
#line 1477
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table123.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table123.AddRow(new string[] {
                        "Subject Initials",
                        "sub120"});
#line 1482
    testRunner.And("I create a Subject", ((string)(null)), table123);
#line 1486
 testRunner.And("I select Folder \"Screening\"");
#line 1487
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1488
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table124.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1489
testRunner.And("I save the CRF page", ((string)(null)), table124);
#line 1493
 testRunner.And("I take a screenshot");
#line 1494
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1495
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table125.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1496
testRunner.And("I save the CRF page", ((string)(null)), table125);
#line 1500
 testRunner.And("I take a screenshot");
#line 1501
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1502
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1503
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1504
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table126.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1505
 testRunner.And("I enter data in CRF", ((string)(null)), table126);
#line 1509
 testRunner.And("I save the CRF page");
#line 1510
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1511
 testRunner.And("I take a screenshot");
#line 1512
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table127.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
#line 1513
 testRunner.And("I enter data in CRF", ((string)(null)), table127);
#line 1517
 testRunner.And("I save the CRF page");
#line 1518
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1519
    testRunner.And("I verify the queries refired on \"Start Date\" and \"End Date\" fields");
#line 1520
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.2",
                        "Draft"});
#line 1526
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1528
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1529
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table128);
#line 1533
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
            "uire manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_1OnAVerifiesQueryFiringOnMixedFormWithRequireResponseAndRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
                    "uire manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.1",
                        "Draft"});
#line 1539
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table129.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table129.AddRow(new string[] {
                        "Subject Initials",
                        "sub121"});
#line 1543
    testRunner.And("I create a Subject", ((string)(null)), table129);
#line 1547
 testRunner.And("I select Form \"Mixed Form\"");
#line 1548
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Standard 1",
                        "5"});
            table130.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table130.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 1549
testRunner.And("I save the CRF page", ((string)(null)), table130);
#line 1554
 testRunner.And("I take a screenshot");
#line 1555
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1556
 testRunner.And("I take a screenshot");
#line 1557
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 1558
 testRunner.And("I save the CRF page");
#line 1559
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 1560
 testRunner.And("I save the CRF page");
#line 1561
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table131.AddRow(new string[] {
                        "Standard 1",
                        "6"});
#line 1562
 testRunner.And("I enter data in CRF", ((string)(null)), table131);
#line 1565
 testRunner.And("I save the CRF page");
#line 1566
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1567
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.2",
                        "Draft"});
#line 1573
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1575
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table132.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub121",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "6",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1576
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table132);
#line 1579
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.1 On a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_1OnA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.1 On a", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.1",
                        "Draft"});
#line 1585
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table133.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table133.AddRow(new string[] {
                        "Subject Initials",
                        "sub122"});
#line 1590
    testRunner.And("I create a Subject", ((string)(null)), table133);
#line 1594
 testRunner.And("I select Form \"Mixed Form\"");
#line 1595
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table134.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table134.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1596
testRunner.And("I save the CRF page", ((string)(null)), table134);
#line 1601
 testRunner.And("I take a screenshot");
#line 1602
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1603
 testRunner.And("I take a screenshot");
#line 1604
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1605
 testRunner.And("I save the CRF page");
#line 1606
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 1607
 testRunner.And("I enter data in CRF", ((string)(null)), table135);
#line 1610
 testRunner.And("I save the CRF page");
#line 1611
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1612
 testRunner.And("I take a screenshot");
#line 1613
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table136.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "5",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1614
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table136);
#line 1617
 testRunner.And("I take a screenshot");
#line 1619
 testRunner.And("I select Form \"Mixed Form\"");
#line 1620
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table137.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1621
 testRunner.And("I enter data in CRF", ((string)(null)), table137);
#line 1625
 testRunner.And("I take a screenshot");
#line 1626
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1627
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1628
 testRunner.And("I enter data in CRF", ((string)(null)), table138);
#line 1631
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1632
 testRunner.And("I save the CRF page");
#line 1633
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 1634
 testRunner.And("I enter data in CRF", ((string)(null)), table139);
#line 1637
 testRunner.And("I save the CRF page");
#line 1638
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1639
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.2",
                        "Draft"});
#line 1645
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1647
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table140.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "2",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1648
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table140);
#line 1651
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.3",
                        "Draft"});
#line 1657
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1659
 testRunner.And("I select Form \"Mixed Form\"");
#line 1660
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table141.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1661
 testRunner.And("I enter data in CRF", ((string)(null)), table141);
#line 1665
 testRunner.And("I take a screenshot");
#line 1666
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1667
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1668
 testRunner.And("I enter data in CRF", ((string)(null)), table142);
#line 1671
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1672
 testRunner.And("I save the CRF page");
#line 1673
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Standard 1",
                        "10"});
#line 1674
 testRunner.And("I enter data in CRF", ((string)(null)), table143);
#line 1677
 testRunner.And("I save the CRF page");
#line 1678
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1679
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.4",
                        "Draft"});
#line 1685
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1687
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table144.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "3",
                        "Log Field 1",
                        "10",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "8",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1688
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table144);
#line 1691
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
