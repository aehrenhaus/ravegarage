// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "1", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "1")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line 19
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.1 As an EDC user, On a Cross Forms - Standard form to log form, when a que" +
            "ry has been answered and closed with the same data and I enter the same data tha" +
            "t originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.1.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_1_1AsAnEDCUserOnACrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.1 As an EDC user, On a Cross Forms - Standard form to log form, when a que" +
                    "ry has been answered and closed with the same data and I enter the same data tha" +
                    "t originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.1",
                        "Draft"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 27
 testRunner.Given("I create a Subject", ((string)(null)), table1);
#line 31
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 32
 testRunner.And("I enter data in CRF and save", ((string)(null)), table2);
#line 38
 testRunner.And("I take a screenshot");
#line 39
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 40
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line 46
 testRunner.And("I open log line 1");
#line 47
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 48
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 49
 testRunner.And("I take a screenshot");
#line 50
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 51
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 52
 testRunner.And("I save the CRF page");
#line 53
 testRunner.And("I open log line 1");
#line 54
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 55
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 56
 testRunner.And("I save the CRF page");
#line 57
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 58
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table4);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
#line 62
 testRunner.And("I verify Query is not displayed", ((string)(null)), table5);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 65
 testRunner.And("I verify Query is not displayed", ((string)(null)), table6);
#line 68
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 72
 testRunner.When("I enter data in CRF and save", ((string)(null)), table7);
#line 76
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
#line 77
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table8);
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 80
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table9);
#line 83
 testRunner.And("I verify closed Query with message \"\'Date Informed Consent Signed\' is greater. Pl" +
                    "ease revise.\" is displayed on Field \"Start Date\"");
#line 84
 testRunner.And("I verify closed Query with message \"Informed Consent \'Current Distribution Number" +
                    "\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is displayed o" +
                    "n Field \"Current Axis Number\"");
#line 85
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.2 As an EDC user, On a Cross Forms - Standard form to log form, when a que" +
            "ry has been answered and closed with the same data and I enter the different dat" +
            "a that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_1_2AsAnEDCUserOnACrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheDifferentDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.2 As an EDC user, On a Cross Forms - Standard form to log form, when a que" +
                    "ry has been answered and closed with the same data and I enter the different dat" +
                    "a that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.2",
                        "Draft"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 93
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 94
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 95
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table10.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 96
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table10);
#line 102
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 103
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 104
 testRunner.And("I take a screenshot");
#line 105
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 106
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table11.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 107
 testRunner.And("I enter data in CRF", ((string)(null)), table11);
#line 111
 testRunner.And("I save the CRF page");
#line 112
 testRunner.And("I open log line 2");
#line 113
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 114
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 115
 testRunner.And("I save the CRF page");
#line 116
 testRunner.And("I take a screenshot");
#line 117
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table12.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
#line 118
 testRunner.And("I verify Query is not displayed", ((string)(null)), table12);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 121
 testRunner.And("I verify Query is not displayed", ((string)(null)), table13);
#line 124
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 126
 testRunner.When("I enter data in CRF on log line 2 and save and reopen", ((string)(null)), table14);
#line 130
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 131
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 132
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.1 As an EDC user, On a Cross Folders, Standard form to log form. when a qu" +
            "ery has been answered and closed with the same data and I enter the same data th" +
            "at originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.2.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_2_1AsAnEDCUserOnACrossFoldersStandardFormToLogForm_WhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.1 As an EDC user, On a Cross Folders, Standard form to log form. when a qu" +
                    "ery has been answered and closed with the same data and I enter the same data th" +
                    "at originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.1",
                        "Draft"});
#line 138
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 141
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table15.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 142
    testRunner.And("I create a Subject", ((string)(null)), table15);
#line 146
   testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table16.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table16.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table16.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 147
 testRunner.And("I enter data in CRF and save", ((string)(null)), table16);
#line 153
 testRunner.And("I take a screenshot");
#line 154
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 155
    testRunner.And("I enter data in CRF and save", ((string)(null)), table17);
#line 161
 testRunner.And("I open log line 1");
#line 162
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 163
    testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 164
 testRunner.And("I take a screenshot");
#line 165
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"query answered\"");
#line 166
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 167
 testRunner.And("I save the CRF page");
#line 168
 testRunner.And("I open log line 1");
#line 169
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on Fi" +
                    "eld \"Start Date\"");
#line 170
 testRunner.And("I close the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numbe" +
                    "r\'.\" on Field \"Current Axis Number\"");
#line 171
 testRunner.And("I save the CRF page");
#line 172
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 173
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table18);
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "false",
                        "false"});
#line 178
 testRunner.And("I verify Query is not displayed", ((string)(null)), table19);
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 181
 testRunner.And("I verify Query is not displayed", ((string)(null)), table20);
#line 184
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table21.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table21.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 187
 testRunner.When("I enter data in CRF and save", ((string)(null)), table21);
#line 192
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "false",
                        "false"});
#line 193
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table22);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 196
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table23);
#line 199
 testRunner.And("I verify closed Query with message \"\'Date Informed Consent Signed\' can not be gre" +
                    "ater than.\" is displayed on Field \"Start Date\"");
#line 200
 testRunner.And("I verify closed Query with message \"\'Current Distribution Number\' is not equal \'C" +
                    "urrent Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 201
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.2 As an EDC user, On a Cross Folders, Standard form to log form. when a qu" +
            "ery has been answered and closed with the same data and I enter the same data th" +
            "at originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_2_2AsAnEDCUserOnACrossFoldersStandardFormToLogForm_WhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.2 As an EDC user, On a Cross Folders, Standard form to log form. when a qu" +
                    "ery has been answered and closed with the same data and I enter the same data th" +
                    "at originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.2",
                        "Draft"});
#line 207
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 209
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 210
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 211
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table24.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table24.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 212
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table24);
#line 218
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 219
    testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 220
 testRunner.And("I take a screenshot");
#line 221
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"query answered\"");
#line 222
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 223
 testRunner.And("I save the CRF page");
#line 224
 testRunner.And("I open log line 2");
#line 225
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on Fi" +
                    "eld \"Start Date\"");
#line 226
 testRunner.And("I close the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numbe" +
                    "r\'.\" on Field \"Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table25.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table25.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 227
 testRunner.And("I enter data in CRF", ((string)(null)), table25);
#line 232
 testRunner.And("I save the CRF page");
#line 233
 testRunner.And("I take a screenshot");
#line 234
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "false",
                        "false"});
#line 235
 testRunner.And("I verify Query is not displayed", ((string)(null)), table26);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 238
 testRunner.And("I verify Query is not displayed", ((string)(null)), table27);
#line 241
 testRunner.And("I take a screenshot");
#line 242
 testRunner.And("I cancel the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table28.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 245
 testRunner.When("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table28);
#line 250
 testRunner.Then("I verify Not Requires Response Query with message \"\'Date Informed Consent Signed\'" +
                    " can not be greater than.\" is displayed on Field \"Start Date\"");
#line 251
 testRunner.And("I verify Not Requires Response Query with message \"\'Current Distribution Number\' " +
                    "is not equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"" +
                    "");
#line 252
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.1 As an EDC user, on a Cross Forms log form to Standard form, when a query" +
            " has been answered and closed with the same data and I enter the same data that " +
            "originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.3.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_3_1AsAnEDCUserOnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.1 As an EDC user, on a Cross Forms log form to Standard form, when a query" +
                    " has been answered and closed with the same data and I enter the same data that " +
                    "originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.1",
                        "Draft"});
#line 258
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 261
  testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table29.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 262
    testRunner.And("I create a Subject", ((string)(null)), table29);
#line 266
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table30.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table30.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 267
 testRunner.And("I enter data in CRF and save", ((string)(null)), table30);
#line 273
 testRunner.And("I open log line 1");
#line 274
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is displayed on Field \"End Date\"");
#line 275
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is displayed on Field \"Current Ax" +
                    "is Number\"");
#line 276
 testRunner.And("I take a screenshot");
#line 277
 testRunner.And("I answer the Query \"Start Date can not be greater than End Date.\" on Field \"End D" +
                    "ate\" with \"query answered\"");
#line 278
 testRunner.And("I answer the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on f" +
                    "irst Number field.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 279
 testRunner.And("I save the CRF page");
#line 280
 testRunner.And("I open log line 1");
#line 281
 testRunner.And("I close the Query \"Start Date can not be greater than End Date.\" on Field \"End Da" +
                    "te\"");
#line 282
 testRunner.And("I close the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on fi" +
                    "rst Number field.\" on Field \"Current Axis Number\"");
#line 283
 testRunner.And("I save the CRF page");
#line 284
 testRunner.And("I take a screenshot");
#line 285
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table31.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 286
 testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 290
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table32.AddRow(new string[] {
                        "End Date",
                        "Start Date can not be greater than End Date.",
                        "false",
                        "false"});
#line 291
 testRunner.And("I verify Query is not displayed", ((string)(null)), table32);
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table33.AddRow(new string[] {
                        "Current Axis Number",
                        "Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "false",
                        "false"});
#line 294
 testRunner.And("I verify Query is not displayed", ((string)(null)), table33);
#line 297
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table34.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table34.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 299
 testRunner.When("I enter data in CRF and save", ((string)(null)), table34);
#line 303
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table35.AddRow(new string[] {
                        "End Date",
                        "Start Date can not be greater than End Date.",
                        "false",
                        "false"});
#line 304
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table35);
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "false",
                        "false"});
#line 307
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table36);
#line 310
 testRunner.And("I verify closed Query with message \"Start Date can not be greater than End Date.\"" +
                    " is displayed on Field \"End Date\"");
#line 311
 testRunner.And("I verify closed Query with message \"Original Axis Number\' is Less Than \'Current A" +
                    "xis Number\' on first Number field.\" is displayed on Field \"Current Axis Number\"");
#line 312
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.2 As an EDC user, on a Cross Forms log form to Standard form, when a query" +
            " has been answered and closed with the different data and I enter the same data " +
            "that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_3_2AsAnEDCUserOnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.2 As an EDC user, on a Cross Forms log form to Standard form, when a query" +
                    " has been answered and closed with the different data and I enter the same data " +
                    "that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.2",
                        "Draft"});
#line 318
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 320
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 321
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 322
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table37.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 323
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table37);
#line 329
 testRunner.And("I verify Requires Response Query with message \"Start Date can not be greater than" +
                    " End Date.\" is displayed on Field \"End Date\"");
#line 330
 testRunner.And("I verify Requires Response Query with message \"Original Axis Number\' is Less Than" +
                    " \'Current Axis Number\' on first Number field.\" is displayed on Field \"Current Ax" +
                    "is Number\"");
#line 331
 testRunner.And("I take a screenshot");
#line 332
 testRunner.And("I answer the Query \"Start Date can not be greater than End Date.\" on Field \"End D" +
                    "ate\" with \"query answered\"");
#line 333
 testRunner.And("I answer the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on f" +
                    "irst Number field.\" on Field \"Current Axis Number\" with \"query answered\"");
#line 334
 testRunner.And("I save the CRF page");
#line 335
 testRunner.And("I open log line 2");
#line 336
 testRunner.And("I close the Query \"Start Date can not be greater than End Date.\" on Field \"End Da" +
                    "te\"");
#line 337
 testRunner.And("I close the Query \"Original Axis Number\' is Less Than \'Current Axis Number\' on fi" +
                    "rst Number field.\" on Field \"Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 338
 testRunner.And("I enter data in CRF", ((string)(null)), table38);
#line 342
 testRunner.And("I save the CRF page");
#line 343
 testRunner.And("I take a screenshot");
#line 344
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table39.AddRow(new string[] {
                        "End Date",
                        "Start Date can not be greater than End Date.",
                        "false",
                        "false"});
#line 345
 testRunner.And("I verify Query is not displayed", ((string)(null)), table39);
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "false",
                        "false"});
#line 348
 testRunner.And("I verify Query is not displayed", ((string)(null)), table40);
#line 351
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table41.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 353
 testRunner.When("I enter data in CRF and save", ((string)(null)), table41);
#line 357
 testRunner.And("I open log line 2");
#line 358
 testRunner.Then("I verify Not Requires Response Query with message \"Start Date can not be greater " +
                    "than End Date.\" is displayed on Field \"End Date\"");
#line 359
 testRunner.And("I verify Not Requires Response Query with message \"Original Axis Number\' is Less " +
                    "Than \'Current Axis Number\' on first Number field.\" is displayed on Field \"Curren" +
                    "t Axis Number\"");
#line 360
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.3 As an EDC user, on a Cross Forms log form to Standard form, when a query" +
            " has been answered and closed with the different data and I enter the same data " +
            "that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_3_3AsAnEDCUserOnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.3 As an EDC user, on a Cross Forms log form to Standard form, when a query" +
                    " has been answered and closed with the different data and I enter the same data " +
                    "that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.3",
                        "Draft"});
#line 366
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 368
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 369
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 370
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table42.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table42.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 371
    testRunner.And("I enter data in CRF and save", ((string)(null)), table42);
#line 377
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date.\" is displayed on Field \"End Date\"");
#line 378
 testRunner.And("I verify Requires Response Query with message \"Original Distribution Number\' and " +
                    "\'Current Distribution Number\' fields are not equal.\" is displayed on Field \"Curr" +
                    "ent Distribution Number\"");
#line 379
 testRunner.And("I take a screenshot");
#line 380
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is not equal to Current Date.\"" +
                    " on Field \"End Date\" with \"query answered\"");
#line 381
 testRunner.And("I answer the Query \"Original Distribution Number\' and \'Current Distribution Numbe" +
                    "r\' fields are not equal.\" on Field \"Current Distribution Number\" with \"query ans" +
                    "wered\"");
#line 382
 testRunner.And("I save the CRF page");
#line 383
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is not equal to Current Date.\" " +
                    "on Field \"End Date\"");
#line 384
 testRunner.And("I close the Query \"Original Distribution Number\' and \'Current Distribution Number" +
                    "\' fields are not equal.\" on Field \"Current Distribution Number\"");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table43.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 385
 testRunner.And("I enter data in CRF", ((string)(null)), table43);
#line 389
 testRunner.And("I save the CRF page");
#line 390
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table44.AddRow(new string[] {
                        "End Date",
                        "\'Date Informed Consent Signed\' is not equal to Current Date.",
                        "false",
                        "false"});
#line 391
 testRunner.And("I verify Query is not displayed", ((string)(null)), table44);
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table45.AddRow(new string[] {
                        "Current Distribution Number",
                        "Original Distribution Number\' and \'Current Distribution Number\' fields are not eq" +
                            "ual.",
                        "false",
                        "false"});
#line 394
 testRunner.And("I verify Query is not displayed", ((string)(null)), table45);
#line 397
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table46.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 399
    testRunner.When("I enter data in CRF", ((string)(null)), table46);
#line 403
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table47.AddRow(new string[] {
                        "End Date",
                        "\'Date Informed Consent Signed\' is not equal to Current Date.",
                        "false",
                        "false"});
#line 404
 testRunner.Then("I verify Query is displayed", ((string)(null)), table47);
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table48.AddRow(new string[] {
                        "Current Distribution Number",
                        "Original Distribution Number\' and \'Current Distribution Number\' fields are not eq" +
                            "ual.",
                        "false",
                        "false"});
#line 407
 testRunner.Then("I verify Query is displayed", ((string)(null)), table48);
#line 410
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date.\" is displayed on Field \"End Date\"");
#line 411
 testRunner.And("I verify Requires Response Query with message \"Original Distribution Number\' and " +
                    "\'Current Distribution Number\' fields are not equal.\" is displayed on Field \"Curr" +
                    "ent Distribution Number\"");
#line 412
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.1 As an EDC user, On a Cross Forms log form to log form, when a query has " +
            "been answered and closed with the same data and I enter the same data that origi" +
            "nally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.4.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_4_1AsAnEDCUserOnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.1 As an EDC user, On a Cross Forms log form to log form, when a query has " +
                    "been answered and closed with the same data and I enter the same data that origi" +
                    "nally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.1",
                        "Draft"});
#line 418
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 421
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table49.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 422
    testRunner.And("I create a Subject", ((string)(null)), table49);
#line 426
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table50.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table50.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table50.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 427
 testRunner.And("I enter data in CRF and save", ((string)(null)), table50);
#line 433
 testRunner.And("I take a screenshot");
#line 434
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table51.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table51.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table51.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 435
    testRunner.And("I enter data in CRF and save", ((string)(null)), table51);
#line 441
 testRunner.And("I take a screenshot");
#line 442
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 443
 testRunner.And("I open log line 1");
#line 444
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 445
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 446
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 447
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 448
 testRunner.And("I take a screenshot");
#line 449
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 450
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 451
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 452
 testRunner.And("I answer the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field " +
                    "\"Current Axis Number\" with \"query answered\"");
#line 453
 testRunner.And("I save the CRF page");
#line 454
 testRunner.And("I open log line 1");
#line 455
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 456
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 457
 testRunner.And("I close the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number\'" +
                    " on Log.\" on Field \"Original Axis Number\"");
#line 458
 testRunner.And("I close the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field \"" +
                    "Current Axis Number\"");
#line 459
 testRunner.And("I save the CRF page");
#line 460
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 461
 testRunner.And("I enter data in CRF on log line 1 and save", ((string)(null)), table52);
#line 467
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table53.AddRow(new string[] {
                        "Start Date",
                        "Date can not be less than.",
                        "true"});
            table53.AddRow(new string[] {
                        "End Date",
                        "Date is Less Than Date on the first log form.",
                        "true"});
            table53.AddRow(new string[] {
                        "Original Axis Number",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "true"});
            table53.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Duration\' and \'Current Axis Number\' cannot equal.",
                        "true"});
#line 468
 testRunner.And("I verify Query is not displayed", ((string)(null)), table53);
#line 474
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table54.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table54.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table54.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table54.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 476
 testRunner.When("I enter data in CRF and save", ((string)(null)), table54);
#line 482
 testRunner.And("I open log line 1");
#line 483
 testRunner.And("I verify closed Query with message \"Date can not be less than.\" is displayed on F" +
                    "ield \"Start Date\"");
#line 484
 testRunner.And("I verify closed Query with message \"Date is Less Than Date on the first log form." +
                    "\" is displayed on Field \"End Date\"");
#line 485
 testRunner.And("I verify closed Query with message \"\'AE Number\' is greater than or Equal to \'Orig" +
                    "inal Axis Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 486
 testRunner.And("I verify closed Query with message \"\'Duration\' and \'Current Axis Number\' cannot e" +
                    "qual.\" is displayed on Field \"Current Axis Number\"");
#line 487
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.2 As an EDC user, On a Cross Forms log form to log form, when a query has " +
            "been answered and closed with the different data and I enter the same data that " +
            "originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_4_2AsAnEDCUserOnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.2 As an EDC user, On a Cross Forms log form to log form, when a query has " +
                    "been answered and closed with the different data and I enter the same data that " +
                    "originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.2",
                        "Draft"});
#line 493
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 495
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 496
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 497
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table55.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table55.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table55.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 498
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table55);
#line 504
 testRunner.And("I take a screenshot");
#line 505
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table56.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table56.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table56.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table56.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 506
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table56);
#line 512
 testRunner.And("I take a screenshot");
#line 513
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 514
 testRunner.And("I open log line 2");
#line 515
 testRunner.And("I take a screenshot");
#line 516
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 517
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 518
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 519
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 520
 testRunner.And("I take a screenshot");
#line 521
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 522
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 523
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 524
 testRunner.And("I answer the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field " +
                    "\"Current Axis Number\" with \"query answered\"");
#line 525
 testRunner.And("I save the CRF page");
#line 526
 testRunner.And("I open log line 2");
#line 527
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 528
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 529
 testRunner.And("I close the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number\'" +
                    " on Log.\" on Field \"Original Axis Number\"");
#line 530
 testRunner.And("I close the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field \"" +
                    "Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table57.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table57.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 531
    testRunner.And("I enter data in CRF", ((string)(null)), table57);
#line 537
 testRunner.And("I save the CRF page");
#line 538
 testRunner.And("I open log line 2");
#line 539
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table58.AddRow(new string[] {
                        "Start Date",
                        "Date can not be less than.",
                        "true"});
            table58.AddRow(new string[] {
                        "End Date",
                        "Date is Less Than Date on the first log form.",
                        "true"});
            table58.AddRow(new string[] {
                        "Original Axis Number",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "true"});
            table58.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Duration\' and \'Current Axis Number\' cannot equal.",
                        "true"});
#line 540
 testRunner.And("I verify Query is not displayed", ((string)(null)), table58);
#line 546
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table59.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table59.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table59.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table59.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 548
 testRunner.When("I enter data in CRF", ((string)(null)), table59);
#line 554
 testRunner.And("I save the CRF page");
#line 555
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table60.AddRow(new string[] {
                        "Start Date",
                        "Date can not be less than.",
                        "false",
                        "false"});
#line 556
 testRunner.And("I verify Query is displayed", ((string)(null)), table60);
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table61.AddRow(new string[] {
                        "End Date",
                        "Date is Less Than Date on the first log form.",
                        "false",
                        "false"});
#line 559
 testRunner.And("I verify Query is displayed", ((string)(null)), table61);
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table62.AddRow(new string[] {
                        "Original Axis Number",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "false",
                        "false"});
#line 562
 testRunner.And("I verify Query is displayed", ((string)(null)), table62);
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table63.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Duration\' and \'Current Axis Number\' cannot equal.",
                        "false",
                        "false"});
#line 565
 testRunner.And("I verify Query is displayed", ((string)(null)), table63);
#line 568
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.1 As an EDC user, Cross Forms - Standard form to log form, when a query ha" +
            "s been answered and closed with the same data and I enter the same data that ori" +
            "ginally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.5.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_5_1AsAnEDCUserCrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.1 As an EDC user, Cross Forms - Standard form to log form, when a query ha" +
                    "s been answered and closed with the same data and I enter the same data that ori" +
                    "ginally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.1",
                        "Draft"});
#line 574
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 577
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table64.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 578
    testRunner.And("I create a Subject", ((string)(null)), table64);
#line 582
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table65.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table65.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table65.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table65.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 583
 testRunner.And("I enter data in CRF and save", ((string)(null)), table65);
#line 589
 testRunner.And("I take a screenshot");
#line 590
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table66.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table66.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table66.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 591
    testRunner.And("I enter data in CRF and save", ((string)(null)), table66);
#line 597
 testRunner.And("I open log line 1");
#line 598
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 599
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'\" is d" +
                    "isplayed on Field \"Current Axis Number\"");
#line 600
 testRunner.And("I take a screenshot");
#line 601
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 602
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'\" on Field \"Current Axis Number\" " +
                    "with \"query answered\"");
#line 603
 testRunner.And("I save the CRF page");
#line 604
 testRunner.And("I open log line 1");
#line 605
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 606
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'\" on Field \"Current Axis Number\"");
#line 607
 testRunner.And("I save the CRF page");
#line 608
 testRunner.And("I take a screenshot");
#line 609
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table67.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 610
 testRunner.And("I enter data in CRF and save", ((string)(null)), table67);
#line 615
    testRunner.When("I select Form \"Concomitant Medications\"");
#line 616
 testRunner.And("I open log line 1");
#line 618
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 619
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'\" is d" +
                    "isplayed on Field \"Current Axis Number\"");
#line 620
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.1 As an EDC user, On a Cross Forms - Standard form to log form. when a que" +
            "ry has been answered and closed with the same data and I enter the same data tha" +
            "t originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.6.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_6_1AsAnEDCUserOnACrossForms_StandardFormToLogForm_WhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.1 As an EDC user, On a Cross Forms - Standard form to log form. when a que" +
                    "ry has been answered and closed with the same data and I enter the same data tha" +
                    "t originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.1",
                        "Draft"});
#line 626
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 629
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table68.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 630
    testRunner.And("I create a Subject", ((string)(null)), table68);
#line 634
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table69.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table69.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table69.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table69.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 635
 testRunner.And("I enter data in CRF and save", ((string)(null)), table69);
#line 641
 testRunner.And("I take a screenshot");
#line 642
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table70.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table70.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table70.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table70.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 643
    testRunner.And("I enter data in CRF and save", ((string)(null)), table70);
#line 649
 testRunner.And("I open log line 1");
#line 650
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 651
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 652
 testRunner.And("I take a screenshot");
#line 653
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 654
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 655
 testRunner.And("I save the CRF page");
#line 656
 testRunner.And("I take a screenshot");
#line 657
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table71.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 658
 testRunner.And("I enter data in CRF and save", ((string)(null)), table71);
#line 663
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 664
 testRunner.And("I open log line 1");
#line 665
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 666
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 667
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.7.1 As an EDC user, Cross Forms - log form to log form, when a query has bee" +
            "n answered and closed with the different data and I enter the same data that ori" +
            "ginally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.7.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_7_1AsAnEDCUserCrossForms_LogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.7.1 As an EDC user, Cross Forms - log form to log form, when a query has bee" +
                    "n answered and closed with the different data and I enter the same data that ori" +
                    "ginally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.1",
                        "Draft"});
#line 673
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 676
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table72.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 677
    testRunner.And("I create a Subject", ((string)(null)), table72);
#line 681
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table73.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table73.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 682
 testRunner.And("I enter data in CRF and save", ((string)(null)), table73);
#line 687
 testRunner.And("I take a screenshot");
#line 688
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table74.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table74.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table74.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 689
    testRunner.And("I enter data in CRF and save", ((string)(null)), table74);
#line 694
 testRunner.And("I take a screenshot");
#line 695
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 696
 testRunner.And("I open log line 1");
#line 697
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 698
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 699
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 700
 testRunner.And("I take a screenshot");
#line 701
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 702
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 703
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 704
 testRunner.And("I save the CRF page");
#line 705
 testRunner.And("I open log line 1");
#line 706
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 707
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 708
 testRunner.And("I close the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number\'" +
                    " on Log.\" on Field \"Original Axis Number\"");
#line 709
 testRunner.And("I save the CRF page");
#line 710
 testRunner.And("I take a screenshot");
#line 711
 testRunner.And("I select Form \"Adverse Events\"");
#line 712
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table75.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table75.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 713
 testRunner.And("I enter data in CRF and save", ((string)(null)), table75);
#line 719
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 720
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table76.AddRow(new string[] {
                        "Start Date",
                        "Date can not be less than.",
                        "false",
                        "false"});
#line 722
 testRunner.And("I verify Query is displayed", ((string)(null)), table76);
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table77.AddRow(new string[] {
                        "End Date",
                        "Date is Less Than Date on the first log form.",
                        "false",
                        "false"});
#line 725
 testRunner.And("I verify Query is displayed", ((string)(null)), table77);
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table78.AddRow(new string[] {
                        "Original Axis Number",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log.",
                        "false",
                        "false"});
#line 728
 testRunner.And("I verify Query is displayed", ((string)(null)), table78);
#line 735
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.8.1 As an EDC user, On a Cross Forms - log form to log form, when a query ha" +
            "s been answered and closed with the different data and I enter the same data tha" +
            "t originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.8.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_8_1AsAnEDCUserOnACrossForms_LogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.8.1 As an EDC user, On a Cross Forms - log form to log form, when a query ha" +
                    "s been answered and closed with the different data and I enter the same data tha" +
                    "t originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.1",
                        "Draft"});
#line 741
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 744
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table79.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table79.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 745
    testRunner.And("I create a Subject", ((string)(null)), table79);
#line 749
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table80.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table80.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 750
 testRunner.And("I enter data in CRF and save", ((string)(null)), table80);
#line 755
 testRunner.And("I take a screenshot");
#line 756
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table81.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table81.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 757
    testRunner.And("I enter data in CRF and save", ((string)(null)), table81);
#line 762
 testRunner.And("I take a screenshot");
#line 763
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 764
 testRunner.And("I open log line 1");
#line 765
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 766
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 767
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 768
 testRunner.And("I take a screenshot");
#line 769
 testRunner.And("I cancel the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 770
 testRunner.And("I cancel the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\"");
#line 771
 testRunner.And("I cancel the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\"");
#line 772
 testRunner.And("I save the CRF page");
#line 773
 testRunner.And("I take a screenshot");
#line 774
 testRunner.And("I select Form \"Adverse Events\"");
#line 775
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table82.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 776
 testRunner.And("I enter data in CRF and save", ((string)(null)), table82);
#line 782
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 783
 testRunner.And("I open log line 1");
#line 784
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 785
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 786
 testRunner.And("I verify Query with message \"\'AE Number\' is greater than or Equal to \'Original Ax" +
                    "is Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 787
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.9.1 As an EDC user, On a Cross Forms - Standard form to log form, when a que" +
            "ry has been answered and closed with the different data and I enter the same dat" +
            "a that originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.9.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_9_1AsAnEDCUserOnACrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.9.1 As an EDC user, On a Cross Forms - Standard form to log form, when a que" +
                    "ry has been answered and closed with the different data and I enter the same dat" +
                    "a that originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.1",
                        "Draft"});
#line 793
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 796
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table83.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 797
    testRunner.And("I create a Subject", ((string)(null)), table83);
#line 801
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table84.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table84.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table84.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table84.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 802
 testRunner.And("I enter data in CRF and save", ((string)(null)), table84);
#line 808
 testRunner.And("I take a screenshot");
#line 809
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table85.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table85.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table85.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table85.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 810
    testRunner.And("I enter data in CRF and save", ((string)(null)), table85);
#line 816
 testRunner.And("I open log line 1");
#line 817
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 818
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 819
 testRunner.And("I take a screenshot");
#line 820
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 821
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 822
 testRunner.And("I save the CRF page");
#line 823
 testRunner.And("I open log line 1");
#line 824
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 825
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 826
 testRunner.And("I save the CRF page");
#line 827
 testRunner.And("I take a screenshot");
#line 829
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table86.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 830
 testRunner.When("I enter data in CRF and save", ((string)(null)), table86);
#line 834
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false"});
#line 835
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table87);
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table88.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is equal to Concomitant Medication" +
                            "s \'Current Axis Number\'.",
                        "false"});
#line 838
 testRunner.And("I verify Query is not displayed", ((string)(null)), table88);
#line 843
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.10.1 As an EDC user, Cross Forms: Standard form to log form, when a query ha" +
            "s been answered and closed with the different data and I enter the same data tha" +
            "t originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.10.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_10_1AsAnEDCUserCrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.10.1 As an EDC user, Cross Forms: Standard form to log form, when a query ha" +
                    "s been answered and closed with the different data and I enter the same data tha" +
                    "t originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.1",
                        "Draft"});
#line 849
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 852
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table89.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 853
    testRunner.And("I create a Subject", ((string)(null)), table89);
#line 857
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table90.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table90.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table90.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table90.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 858
 testRunner.And("I enter data in CRF and save", ((string)(null)), table90);
#line 864
 testRunner.And("I take a screenshot");
#line 865
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table91.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table91.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table91.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table91.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 866
    testRunner.And("I enter data in CRF and save", ((string)(null)), table91);
#line 872
 testRunner.And("I open log line 1");
#line 873
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 874
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 875
 testRunner.And("I take a screenshot");
#line 876
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"query answered\"");
#line 877
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"query answered\"");
#line 878
 testRunner.And("I save the CRF page");
#line 879
 testRunner.And("I open log line 1");
#line 880
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 881
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 882
 testRunner.And("I save the CRF page");
#line 883
 testRunner.And("I take a screenshot");
#line 885
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table92.AddRow(new string[] {
                        "Current Axis Number",
                        "21"});
#line 886
 testRunner.When("I enter data in CRF and save", ((string)(null)), table92);
#line 890
 testRunner.And("I open log line 1");
#line 891
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 892
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 893
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.1 As an EDC user, On a Cross Forms Standard form to log form, when a quer" +
            "y has been answered and closed with the different data and I enter the same data" +
            " that originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.11.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_11_1AsAnEDCUserOnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.1 As an EDC user, On a Cross Forms Standard form to log form, when a quer" +
                    "y has been answered and closed with the different data and I enter the same data" +
                    " that originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.1",
                        "Draft"});
#line 899
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 902
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table93.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 903
    testRunner.And("I create a Subject", ((string)(null)), table93);
#line 907
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table94.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table94.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table94.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 908
 testRunner.And("I enter data in CRF and save", ((string)(null)), table94);
#line 914
 testRunner.And("I take a screenshot");
#line 915
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table95.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table95.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table95.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table95.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 916
    testRunner.And("I enter data in CRF and save", ((string)(null)), table95);
#line 922
 testRunner.And("I open log line 1");
#line 923
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 924
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 925
 testRunner.And("I take a screenshot");
#line 926
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table96.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table96.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 927
 testRunner.And("I enter data in CRF and save", ((string)(null)), table96);
#line 932
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 933
 testRunner.And("I open log line 1");
#line 934
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 935
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 936
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.12.1 As an EDC user, On a Cross Forms - Standard form to log form, when a qu" +
            "ery has been answered and closed with the different data and I enter the same da" +
            "ta that originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.12.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_12_1AsAnEDCUserOnACrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.12.1 As an EDC user, On a Cross Forms - Standard form to log form, when a qu" +
                    "ery has been answered and closed with the different data and I enter the same da" +
                    "ta that originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.12.1",
                        "Draft"});
#line 942
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 945
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table97.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table97.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 946
    testRunner.And("I create a Subject", ((string)(null)), table97);
#line 950
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table98.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table98.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table98.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table98.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 951
 testRunner.And("I enter data in CRF and save", ((string)(null)), table98);
#line 957
 testRunner.And("I take a screenshot");
#line 958
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table99.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table99.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table99.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 959
    testRunner.And("I enter data in CRF and save", ((string)(null)), table99);
#line 965
 testRunner.And("I open log line 1");
#line 966
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 967
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 968
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table100.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table100.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 970
 testRunner.When("I enter data in CRF and save", ((string)(null)), table100);
#line 974
 testRunner.And("I open log line 1");
#line 975
   testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 976
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 977
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.13.1 As an EDC user, On a Cross Forms - Standard form to log form, when a qu" +
            "ery has been answered and closed with the different data and I enter the same da" +
            "ta that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.13.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_13_1AsAnEDCUserOnACrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.13.1 As an EDC user, On a Cross Forms - Standard form to log form, when a qu" +
                    "ery has been answered and closed with the different data and I enter the same da" +
                    "ta that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.1",
                        "Draft"});
#line 983
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 986
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table101.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table101.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 987
 testRunner.And("I create a Subject", ((string)(null)), table101);
#line 991
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table102.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table102.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table102.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table102.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 992
 testRunner.And("I enter data in CRF and save", ((string)(null)), table102);
#line 998
 testRunner.And("I take a screenshot");
#line 999
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table103.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table103.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table103.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table103.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1000
    testRunner.And("I enter data in CRF and save", ((string)(null)), table103);
#line 1006
 testRunner.And("I open log line 1");
#line 1007
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 1008
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 1009
 testRunner.And("I take a screenshot");
#line 1010
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table104.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1011
 testRunner.And("I enter data in CRF and save", ((string)(null)), table104);
#line 1015
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1016
 testRunner.And("I open log line 1");
#line 1017
   testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 1018
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 1019
 testRunner.And("I take a screenshot");
#line 1020
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table105.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table105.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1021
 testRunner.And("I enter data in CRF and save", ((string)(null)), table105);
#line 1026
 testRunner.When("I select Form \"Concomitant Medications\"");
#line 1027
 testRunner.And("I open log line 1");
#line 1028
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 1029
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 1030
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.14.1 As an EDC user, Cross Forms - Standard form to log form, when a query h" +
            "as been answered and closed with the different data and I enter the same data th" +
            "at originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.14.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_14_1AsAnEDCUserCrossForms_StandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.14.1 As an EDC user, Cross Forms - Standard form to log form, when a query h" +
                    "as been answered and closed with the different data and I enter the same data th" +
                    "at originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.1",
                        "Draft"});
#line 1036
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1039
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table106.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table106.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1040
    testRunner.And("I create a Subject", ((string)(null)), table106);
#line 1044
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table107.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table107.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table107.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table107.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1045
 testRunner.And("I enter data in CRF and save", ((string)(null)), table107);
#line 1051
 testRunner.And("I take a screenshot");
#line 1052
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table108.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table108.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table108.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table108.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1053
    testRunner.And("I enter data in CRF and save", ((string)(null)), table108);
#line 1059
 testRunner.And("I open log line 1");
#line 1060
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 1061
    testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 1062
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table109.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1063
 testRunner.And("I enter data in CRF and save", ((string)(null)), table109);
#line 1067
 testRunner.And("I open log line 1");
#line 1068
  testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 1069
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 1070
 testRunner.And("I take a screenshot");
#line 1072
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table110.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table110.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1073
 testRunner.When("I enter data in CRF and save", ((string)(null)), table110);
#line 1077
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1078
 testRunner.And("I open log line 1");
#line 1079
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 1080
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 1081
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.15.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
            "as been answered and closed with the different data and I enter the same data th" +
            "at originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.15.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_15_1AsAnEDCUserOnACrossForms_LogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.15.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
                    "as been answered and closed with the different data and I enter the same data th" +
                    "at originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.1",
                        "Draft"});
#line 1087
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1090
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table111.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table111.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1091
    testRunner.And("I create a Subject", ((string)(null)), table111);
#line 1095
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table112.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table112.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1096
 testRunner.And("I enter data in CRF and save", ((string)(null)), table112);
#line 1100
 testRunner.And("I take a screenshot");
#line 1101
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table113.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1102
    testRunner.And("I enter data in CRF and save", ((string)(null)), table113);
#line 1106
 testRunner.And("I take a screenshot");
#line 1107
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1108
 testRunner.And("I open log line 1");
#line 1109
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1110
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1111
 testRunner.And("I take a screenshot");
#line 1112
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 1113
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 1114
 testRunner.And("I save the CRF page");
#line 1115
 testRunner.And("I open log line 1");
#line 1116
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 1117
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 1118
 testRunner.And("I save the CRF page");
#line 1119
 testRunner.And("I take a screenshot");
#line 1121
 testRunner.And("I select Form \"Adverse Events\"");
#line 1122
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table114.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1123
 testRunner.When("I enter data in CRF and save", ((string)(null)), table114);
#line 1127
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1128
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table115.AddRow(new string[] {
                        "Start Date",
                        "Date can not be less than.",
                        "false",
                        "false"});
#line 1129
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table115);
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table116.AddRow(new string[] {
                        "Start Date",
                        "Date is Less Than Date on the first log form.",
                        "false",
                        "false"});
#line 1132
 testRunner.And("I verify Query is not displayed", ((string)(null)), table116);
#line 1137
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
            "as been answered and closed with the different data and I enter the same data th" +
            "at originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.16.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_16_1AsAnEDCUserOnACrossForms_LogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
                    "as been answered and closed with the different data and I enter the same data th" +
                    "at originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.1",
                        "Draft"});
#line 1143
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1146
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table117.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table117.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1147
    testRunner.And("I create a Subject", ((string)(null)), table117);
#line 1151
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table118.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table118.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 1152
 testRunner.And("I enter data in CRF and save", ((string)(null)), table118);
#line 1157
 testRunner.And("I take a screenshot");
#line 1158
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table119.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table119.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 1159
    testRunner.And("I enter data in CRF and save", ((string)(null)), table119);
#line 1164
 testRunner.And("I take a screenshot");
#line 1165
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1166
 testRunner.And("I open log line 1");
#line 1167
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1168
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1169
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 1170
 testRunner.And("I take a screenshot");
#line 1171
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"query" +
                    " answered\"");
#line 1172
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"query answered\"");
#line 1173
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"query answered\"");
#line 1174
 testRunner.And("I save the CRF page");
#line 1175
 testRunner.And("I open log line 1");
#line 1176
 testRunner.And("I close the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 1177
 testRunner.And("I close the Query \"Date is Less Than Date on the first log form.\" on Field \"End D" +
                    "ate\"");
#line 1178
 testRunner.And("I close the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number\'" +
                    " on Log.\" on Field \"Original Axis Number\"");
#line 1179
 testRunner.And("I save the CRF page");
#line 1180
 testRunner.And("I take a screenshot");
#line 1181
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table120.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table120.AddRow(new string[] {
                        "Original Axis Number",
                        "99"});
#line 1182
 testRunner.And("I enter data in CRF and save", ((string)(null)), table120);
#line 1187
 testRunner.And("I open log line 1");
#line 1188
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1189
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1190
 testRunner.And("I verify Query with message \"\'AE Number\' is greater than or Equal to \'Original Ax" +
                    "is Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 1191
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
            "as not been answered and closed with the different data and I enter the same dat" +
            "a that originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.17.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_17_1AsAnEDCUserOnACrossForms_LogFormToLogFormWhenAQueryHasNotBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
                    "as not been answered and closed with the different data and I enter the same dat" +
                    "a that originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.1",
                        "Draft"});
#line 1197
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1200
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table121.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1201
    testRunner.And("I create a Subject", ((string)(null)), table121);
#line 1205
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table122.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table122.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1206
 testRunner.And("I enter data in CRF and save", ((string)(null)), table122);
#line 1210
 testRunner.And("I take a screenshot");
#line 1211
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table123.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table123.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1212
    testRunner.And("I enter data in CRF and save", ((string)(null)), table123);
#line 1216
 testRunner.And("I take a screenshot");
#line 1217
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1218
 testRunner.And("I open log line 1");
#line 1219
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1220
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1221
 testRunner.And("I take a screenshot");
#line 1222
 testRunner.And("I select Form \"Adverse Events\"");
#line 1223
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table124.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1224
 testRunner.And("I enter data in CRF and save", ((string)(null)), table124);
#line 1228
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1229
 testRunner.And("I open log line 1");
#line 1231
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1232
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1233
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
            "as not been answered and closed with the different data and I enter the same dat" +
            "a that originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.18.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_18_1AsAnEDCUserOnACrossForms_LogFormToLogFormWhenAQueryHasNotBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
                    "as not been answered and closed with the different data and I enter the same dat" +
                    "a that originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.1",
                        "Draft"});
#line 1239
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1242
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table125.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1243
    testRunner.And("I create a Subject", ((string)(null)), table125);
#line 1247
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table126.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1248
 testRunner.And("I enter data in CRF and save", ((string)(null)), table126);
#line 1252
 testRunner.And("I take a screenshot");
#line 1253
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table127.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1254
    testRunner.And("I enter data in CRF and save", ((string)(null)), table127);
#line 1258
 testRunner.And("I take a screenshot");
#line 1259
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1260
 testRunner.And("I open log line 1");
#line 1261
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1262
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1263
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table128.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table128.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1264
 testRunner.When("I enter data in CRF and save", ((string)(null)), table128);
#line 1268
 testRunner.And("I open log line 1");
#line 1269
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1270
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1271
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.19.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
            "as been answered and closed with the different data and I enter the same data th" +
            "at originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.19.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_19_1AsAnEDCUserOnACrossForms_LogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.19.1 As an EDC user, On a Cross Forms - log form to log form, when a query h" +
                    "as been answered and closed with the different data and I enter the same data th" +
                    "at originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.1",
                        "Draft"});
#line 1277
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1280
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table129.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table129.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1281
    testRunner.And("I create a Subject", ((string)(null)), table129);
#line 1285
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table130.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1286
 testRunner.And("I enter data in CRF and save", ((string)(null)), table130);
#line 1290
 testRunner.And("I take a screenshot");
#line 1291
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table131.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table131.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1292
    testRunner.And("I enter data in CRF and save", ((string)(null)), table131);
#line 1296
 testRunner.And("I take a screenshot");
#line 1297
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1298
 testRunner.And("I open log line 1");
#line 1299
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 1300
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 1301
 testRunner.And("I take a screenshot");
#line 1302
 testRunner.And("I select Form \"Adverse Events\"");
#line 1303
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table132.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table132.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1304
 testRunner.And("I enter data in CRF and save", ((string)(null)), table132);
#line 1308
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1309
 testRunner.And("I open log line 1");
#line 1310
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1311
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1312
 testRunner.And("I take a screenshot");
#line 1314
 testRunner.And("I select Form \"Adverse Events\"");
#line 1315
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table133.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table133.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1316
 testRunner.When("I enter data in CRF and save", ((string)(null)), table133);
#line 1320
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1321
 testRunner.And("I open log line 1");
#line 1322
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1323
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1324
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.1 As an EDC user, On a Cross Forms log form to log form, when a query has" +
            " not been answered and closed with the different data and I enter the same data " +
            "that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.20.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_20_1AsAnEDCUserOnACrossFormsLogFormToLogFormWhenAQueryHasNotBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.1 As an EDC user, On a Cross Forms log form to log form, when a query has" +
                    " not been answered and closed with the different data and I enter the same data " +
                    "that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.1",
                        "Draft"});
#line 1330
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1333
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table134.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1334
    testRunner.And("I create a Subject", ((string)(null)), table134);
#line 1338
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table135.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1339
 testRunner.And("I enter data in CRF and save", ((string)(null)), table135);
#line 1343
 testRunner.And("I take a screenshot");
#line 1344
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table136.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table136.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1345
    testRunner.And("I enter data in CRF and save", ((string)(null)), table136);
#line 1349
 testRunner.And("I take a screenshot");
#line 1350
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1351
 testRunner.And("I open log line 1");
#line 1352
 testRunner.And("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1353
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1354
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table137.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1355
 testRunner.And("I enter data in CRF", ((string)(null)), table137);
#line 1359
 testRunner.And("I save the CRF page");
#line 1360
 testRunner.And("I open log line 1");
#line 1361
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1362
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1363
 testRunner.And("I take a screenshot");
#line 1365
 testRunner.And("I select Form \"Adverse Events\"");
#line 1366
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table138.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
#line 1367
 testRunner.When("I enter data in CRF and save", ((string)(null)), table138);
#line 1371
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1372
 testRunner.And("I open log line 1");
#line 1373
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1374
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1375
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.1 As an EDC user, when a query has been answered and closed with the diff" +
            "erent data and I enter the same data that originally opened the query, then quer" +
            "ies are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.21.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_21_1AsAnEDCUserWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.1 As an EDC user, when a query has been answered and closed with the diff" +
                    "erent data and I enter the same data that originally opened the query, then quer" +
                    "ies are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.1",
                        "Draft"});
#line 1381
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1384
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table139.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1385
    testRunner.And("I create a Subject", ((string)(null)), table139);
#line 1389
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table140.AddRow(new string[] {
                        "Standard 1",
                        "5"});
            table140.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table140.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 1390
 testRunner.And("I enter data in CRF and save", ((string)(null)), table140);
#line 1395
 testRunner.And("I take a screenshot");
#line 1396
 testRunner.And("I open log line 1");
#line 1397
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 1398
 testRunner.And("I take a screenshot");
#line 1399
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"que" +
                    "ry answered\"");
#line 1400
 testRunner.And("I save the CRF page");
#line 1401
 testRunner.And("I open log line 1");
#line 1402
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 1403
 testRunner.And("I save the CRF page");
#line 1404
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Standard 1",
                        "6"});
#line 1406
 testRunner.When("I enter data in CRF and save", ((string)(null)), table141);
#line 1409
 testRunner.And("I open log line 1");
#line 1410
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1411
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.1 As an EDC user, when a query has been canceled with the same data and I" +
            " enter the same data that originally opened the query, then queries are displaye" +
            "d.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.22.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_22_1AsAnEDCUserWhenAQueryHasBeenCanceledWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.1 As an EDC user, when a query has been canceled with the same data and I" +
                    " enter the same data that originally opened the query, then queries are displaye" +
                    "d.", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.1",
                        "Draft"});
#line 1417
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1420
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table142.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 1421
    testRunner.And("I create a Subject", ((string)(null)), table142);
#line 1425
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table143.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table143.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1426
 testRunner.And("I enter data in CRF and save", ((string)(null)), table143);
#line 1431
 testRunner.And("I open log line 1");
#line 1432
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 1433
 testRunner.And("I take a screenshot");
#line 1434
 testRunner.And("I cancel the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 1435
 testRunner.And("I save the CRF page");
#line 1436
 testRunner.And("I take a screenshot");
#line 1437
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table144.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 1438
 testRunner.When("I enter data in CRF and save", ((string)(null)), table144);
#line 1441
 testRunner.And("I open log line 1");
#line 1442
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1443
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.2 As an EDC user, when a query has been canceled with the different data " +
            "and I enter the same data that originally opened the query, then queries are dis" +
            "played.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.22.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_22_2AsAnEDCUserWhenAQueryHasBeenCanceledWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.2 As an EDC user, when a query has been canceled with the different data " +
                    "and I enter the same data that originally opened the query, then queries are dis" +
                    "played.", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.2",
                        "Draft"});
#line 1449
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1451
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 1452
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 1453
 testRunner.And("I select Form \"Mixed Form\"");
#line 1454
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table145.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table145.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1455
 testRunner.And("I enter data in CRF and save", ((string)(null)), table145);
#line 1459
 testRunner.And("I open log line 2");
#line 1460
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 1461
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table146.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1462
 testRunner.And("I enter data in CRF", ((string)(null)), table146);
#line 1465
 testRunner.And("I cancel the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 1466
 testRunner.And("I save the CRF page");
#line 1467
 testRunner.And("I take a screenshot");
#line 1468
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table147.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 1470
 testRunner.When("I enter data in CRF and save", ((string)(null)), table147);
#line 1473
 testRunner.And("I open log line 1");
#line 1474
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1475
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.3 As an EDC user, when a query has been cancel with the different data an" +
            "d I enter the same data that originally opened the query, then queries are displ" +
            "ayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_1.22.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_1_22_3AsAnEDCUserWhenAQueryHasBeenCancelWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.3 As an EDC user, when a query has been cancel with the different data an" +
                    "d I enter the same data that originally opened the query, then queries are displ" +
                    "ayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.3",
                        "Draft"});
#line 1481
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1483
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line 1484
 testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 1485
 testRunner.And("I select Form \"Mixed Form\"");
#line 1486
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table148.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table148.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1487
 testRunner.And("I enter data in CRF and save", ((string)(null)), table148);
#line 1491
 testRunner.And("I open log line 3");
#line 1492
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 1493
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table149.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1494
 testRunner.And("I enter data in CRF", ((string)(null)), table149);
#line 1497
 testRunner.And("I cancel the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 1498
 testRunner.And("I save the CRF page");
#line 1499
 testRunner.And("I take a screenshot");
#line 1500
 testRunner.And("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table150.AddRow(new string[] {
                        "Standard 1",
                        "10"});
#line 1502
 testRunner.When("I enter data in CRF and save", ((string)(null)), table150);
#line 1505
 testRunner.And("I open log line 3");
#line 1506
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 1507
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
