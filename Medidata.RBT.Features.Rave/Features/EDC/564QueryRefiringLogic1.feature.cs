// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _1Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "1", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "1")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._1Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.1",
                        "Draft"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 27
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "sub101"});
#line 28
 testRunner.And("I create a Subject", ((string)(null)), table1);
#line 32
 testRunner.And("I select Folder \"Screening\"");
#line 33
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 34
 testRunner.And("I enter data in CRF", ((string)(null)), table2);
#line 40
 testRunner.And("I save the CRF page");
#line 41
 testRunner.And("I take a screenshot");
#line 42
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 43
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 49
 testRunner.And("I save the CRF page");
#line 50
 testRunner.And("I open log line 1");
#line 51
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 52
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 53
 testRunner.And("I take a screenshot");
#line 54
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 55
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 56
 testRunner.And("I save the CRF page");
#line 57
 testRunner.And("I open log line 1");
#line 58
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 59
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 60
 testRunner.And("I save the CRF page");
#line 61
 testRunner.And("I take a screenshot");
#line 62
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 63
 testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 67
 testRunner.And("I save the CRF page");
#line 68
 testRunner.And("I open log line 1");
#line 69
    testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 70
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 71
 testRunner.And("I take a screenshot");
#line 74
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 75
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 79
 testRunner.And("I save the CRF page");
#line 80
 testRunner.And("I open log line 1");
#line 81
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 82
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 83
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.2",
                        "Draft"});
#line 89
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 91
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 92
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table6);
#line 96
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.3",
                        "Draft"});
#line 102
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 103
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 104
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 105
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 106
 testRunner.And("I enter data in CRF", ((string)(null)), table7);
#line 112
 testRunner.And("I save the CRF page");
#line 113
 testRunner.And("I open log line 2");
#line 114
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 115
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 116
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 117
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 122
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 123
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 124
 testRunner.And("I save the CRF page");
#line 125
 testRunner.And("I open log line 2");
#line 126
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 127
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 128
 testRunner.And("I close the Query on Field \"{fieldNames}\"");
#line 129
 testRunner.And("I save the CRF page");
#line 130
 testRunner.And("I take a screenshot");
#line 131
 testRunner.And("I open log line 2");
#line 132
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 133
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 135
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 137
 testRunner.And("I enter data in CRF", ((string)(null)), table9);
#line 141
 testRunner.And("I save the CRF page");
#line 142
 testRunner.And("I open log line 1");
#line 143
 testRunner.Then("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 144
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 145
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.1.4",
                        "Draft"});
#line 151
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 153
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB101",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 154
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table10);
#line 158
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
            "and save data on form \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_1OnACrossFoldersStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.1 On a Cross Folders, Standard form to log form. Folder \"Screening\" enter " +
                    "and save data on form \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.1",
                        "Draft"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 166
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "sub102"});
#line 167
    testRunner.And("I create a Subject", ((string)(null)), table11);
#line 171
 testRunner.And("I select Folder \"Screening\"");
#line 172
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table12.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table12.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 173
 testRunner.And("I enter data in CRF", ((string)(null)), table12);
#line 179
 testRunner.And("I save the CRF page");
#line 180
 testRunner.And("I take a screenshot");
#line 181
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 182
    testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 189
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 190
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 191
 testRunner.And("I take a screenshot");
#line 192
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 193
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 194
 testRunner.And("I save the CRF page");
#line 195
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 196
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 197
 testRunner.And("I save the CRF page");
#line 198
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 199
 testRunner.And("I enter data in CRF on log line 1 and save and reopen", ((string)(null)), table14);
#line 205
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 206
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 207
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 210
 testRunner.When("I enter data in CRF and save", ((string)(null)), table15);
#line 215
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 216
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 217
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.2",
                        "Draft"});
#line 223
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 225
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table16.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 226
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table16);
#line 230
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.3",
                        "Draft"});
#line 236
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 237
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 238
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 239
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table17);
#line 245
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 246
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 247
 testRunner.And("I take a screenshot");
#line 248
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 249
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 250
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 251
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table18);
#line 256
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 257
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 258
 testRunner.And("I save the CRF page");
#line 259
 testRunner.And("I take a screenshot");
#line 260
 testRunner.And("I open the last log line");
#line 261
    testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 262
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 263
 testRunner.And("I take a screenshot");
#line 264
 testRunner.And("I cancel the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 266
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table19);
#line 271
 testRunner.Then("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Start Date\"");
#line 272
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 273
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.2.4",
                        "Draft"});
#line 279
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 281
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table20.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "SUB102",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 282
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table20);
#line 286
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.1 Cross Forms log form to Standard form")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_1CrossFormsLogFormToStandardForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.1 Cross Forms log form to Standard form", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.1",
                        "Draft"});
#line 292
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 296
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "sub103"});
#line 297
    testRunner.And("I create a Subject", ((string)(null)), table21);
#line 301
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table22.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 302
 testRunner.And("I enter data in CRF and save", ((string)(null)), table22);
#line 308
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 309
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 310
 testRunner.And("I take a screenshot");
#line 311
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 312
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 313
 testRunner.And("I save the CRF page");
#line 314
 testRunner.And("I close the Query on Field \"End Date\"");
#line 315
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 316
 testRunner.And("I save the CRF page");
#line 317
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 318
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table23);
#line 322
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 323
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 324
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 325
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 329
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 330
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 331
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.2",
                        "Draft"});
#line 337
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 339
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than End Date.",
                        "{DateTime}"});
            table25.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 340
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table25);
#line 344
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.3",
                        "Draft"});
#line 350
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 351
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line 352
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 353
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table26.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table26.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table26.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 354
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table26);
#line 360
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 361
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 362
 testRunner.And("I take a screenshot");
#line 363
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 364
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 365
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 366
 testRunner.And("I enter data in CRF on the last log line and save and reopen", ((string)(null)), table27);
#line 370
 testRunner.And("I close the Query on Field \"End Date\"");
#line 371
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 372
 testRunner.And("I save the CRF page");
#line 373
 testRunner.And("I take a screenshot");
#line 374
 testRunner.And("I open the last log line");
#line 375
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 376
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Axis Number\"");
#line 377
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 378
 testRunner.And("I enter data in CRF and save", ((string)(null)), table28);
#line 382
 testRunner.And("I open the last log line");
#line 384
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.4",
                        "Draft"});
#line 390
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 392
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than End Date.",
                        "{DateTime}"});
            table29.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 393
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table29);
#line 397
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.5",
                        "Draft"});
#line 403
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 404
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 405
 testRunner.And("I select Form \"Informed Consent\" within folder \"Week 1\"");
#line 406
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table30.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table30.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 407
 testRunner.And("I save the CRF page", ((string)(null)), table30);
#line 413
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 414
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 415
 testRunner.And("I take a screenshot");
#line 416
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 417
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Distribution Number\"");
#line 418
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 419
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 423
 testRunner.And("I close the Query on Field \"End Date\"");
#line 424
 testRunner.And("I close the Query on Field \"Current Distribution Number\"");
#line 425
 testRunner.And("I save the CRF page");
#line 426
 testRunner.And("I take a screenshot");
#line 427
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"End Date\"");
#line 428
 testRunner.And("I verify Requires Response Query with message \"{message}\" is not displayed on Fie" +
                    "ld \"Current Distribution Number\"");
#line 429
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 430
    testRunner.And("I enter data in CRF", ((string)(null)), table32);
#line 434
 testRunner.And("I save the CRF page");
#line 435
 testRunner.And("I verify new queries did fire on \"End Date\" and \"Current Distribution Number\" fie" +
                    "lds");
#line 436
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_1.3.6",
                        "Draft"});
#line 442
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 444
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub103",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 445
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table33);
#line 449
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.1",
                        "Draft"});
#line 455
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "sub104"});
#line 458
    testRunner.And("I create a Subject", ((string)(null)), table34);
#line 462
 testRunner.And("I select Folder \"Screening\"");
#line 463
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 464
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 465
 testRunner.And("I save the CRF page", ((string)(null)), table35);
#line 471
 testRunner.And("I take a screenshot");
#line 472
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 473
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table36.AddRow(new string[] {
                        "Original Axis Number",
                        "101"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 474
 testRunner.And("I save the CRF page", ((string)(null)), table36);
#line 480
 testRunner.And("I take a screenshot");
#line 481
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 482
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 483
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 484
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 485
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 486
 testRunner.And("I take a screenshot");
#line 487
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Cur" +
                    "rent Axis Number\" fields");
#line 488
 testRunner.And("I save the CRF page");
#line 489
 testRunner.And("I close the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Curr" +
                    "ent Axis Number\" fields");
#line 490
 testRunner.And("I save the CRF page");
#line 491
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 492
 testRunner.And("I enter data in CRF", ((string)(null)), table37);
#line 498
 testRunner.And("I save the CRF page");
#line 499
 testRunner.And("I verify the queries did not fire on \"Start Date\", \"End Date\", \"Original Axis Num" +
                    "ber\" and \"Current Axis Number\" fields");
#line 500
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 501
 testRunner.And("I enter data in CRF", ((string)(null)), table38);
#line 507
 testRunner.And("I save the CRF page");
#line 508
 testRunner.And("I verify new queries did not fire on \"Start Date\", \"End Date\", \"Original Axis Num" +
                    "ber\" and \"Current Axis Number\" fields");
#line 509
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.2",
                        "Draft"});
#line 515
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 517
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table39.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 518
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table39);
#line 524
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.3",
                        "Draft"});
#line 530
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 531
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 532
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 533
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table40.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table40.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 534
 testRunner.And("I enter data in CRF", ((string)(null)), table40);
#line 540
 testRunner.And("I take a screenshot");
#line 541
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 542
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Date Field 1",
                        "11 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table41.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table41.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 543
 testRunner.And("I enter data in CRF", ((string)(null)), table41);
#line 549
 testRunner.And("I take a screenshot");
#line 550
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 551
 testRunner.And("I open log line 2");
#line 552
 testRunner.And("I take a screenshot");
#line 553
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 554
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 555
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 556
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 557
 testRunner.And("I take a screenshot");
#line 558
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Cur" +
                    "rent Axis Number\" fields");
#line 559
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table42.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 560
    testRunner.And("I enter data in CRF", ((string)(null)), table42);
#line 566
 testRunner.And("I close the queries on \"Start Date\", \"End Date\", \"Original Axis Number\" and \"Curr" +
                    "ent Axis Number\" fields");
#line 567
 testRunner.And("I save the CRF page");
#line 568
 testRunner.And("I take a screenshot");
#line 569
 testRunner.And("I verify the queries did not fire on \"Start Date\", \"End Date\", \"Original Axis Num" +
                    "ber\" and \"Current Axis Number\" fields");
#line 570
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table43.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 571
 testRunner.And("I enter data in CRF", ((string)(null)), table43);
#line 577
 testRunner.And("I save the CRF page");
#line 578
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\", \"Original Axis Number\"" +
                    " and \"Current Axis Number\" fields");
#line 579
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.4.4",
                        "Draft"});
#line 585
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 587
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table44.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub104",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 588
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table44);
#line 594
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyStandardFormToDifferentBadDataDoNotTouchLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.5.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify Standard form to different bad data, do not touch log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.1",
                        "Draft"});
#line 600
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table45.AddRow(new string[] {
                        "Subject Initials",
                        "sub105"});
#line 602
    testRunner.And("I create a Subject", ((string)(null)), table45);
#line 606
 testRunner.And("I select Folder \"Screening\"");
#line 607
 testRunner.And("I select Form \"Informed Consent\"");
#line 608
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table46.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table46.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table46.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 609
 testRunner.And("I save the CRF page", ((string)(null)), table46);
#line 615
 testRunner.And("I take a screenshot");
#line 616
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 617
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table47.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 618
 testRunner.And("I save the CRF page", ((string)(null)), table47);
#line 624
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 625
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 626
 testRunner.And("I take a screenshot");
#line 627
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 628
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 629
 testRunner.And("I save the CRF page");
#line 630
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 631
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 632
 testRunner.And("I save the CRF page");
#line 633
 testRunner.And("I take a screenshot");
#line 634
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table48.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 635
 testRunner.And("I enter data in CRF", ((string)(null)), table48);
#line 639
 testRunner.And("I save the CRF page");
#line 640
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 641
 testRunner.And("I verify new queries did fire on \"Start Date\" and \"Current Axis Number\" fields");
#line 642
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.5.2",
                        "Draft"});
#line 648
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 650
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table49.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub105",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent Current Axis Number is not equal to assessment Current Axis Numb" +
                            "er",
                        "{DateTime}"});
#line 651
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table49);
#line 655
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.5.3 On a Cross Forms,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_5_3OnACrossForms()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.5.3 On a Cross Forms,", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.1",
                        "Draft"});
#line 661
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table50.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table50.AddRow(new string[] {
                        "Subject Initials",
                        "sub106"});
#line 664
    testRunner.And("I create a Subject", ((string)(null)), table50);
#line 668
 testRunner.And("I select Folder \"Screening\"");
#line 669
 testRunner.And("I select Form \"Informed Consent\"");
#line 670
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table51.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table51.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table51.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 671
 testRunner.And("I save the CRF page", ((string)(null)), table51);
#line 677
 testRunner.And("I take a screenshot");
#line 678
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 679
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 680
 testRunner.And("I save the CRF page", ((string)(null)), table52);
#line 686
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 687
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 688
 testRunner.And("I take a screenshot");
#line 689
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields");
#line 690
 testRunner.And("I save the CRF page");
#line 691
 testRunner.And("I take a screenshot");
#line 692
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "20 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Distribution Number",
                        "21"});
#line 693
 testRunner.And("I enter data in CRF", ((string)(null)), table53);
#line 697
 testRunner.And("I save the CRF page");
#line 698
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 699
 testRunner.And("I verify new queries did fire on \"Start Date\" and \"Current Axis Number\" fields");
#line 700
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.6.2",
                        "Draft"});
#line 706
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 708
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "20 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table54.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub106",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 709
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table54);
#line 713
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.7.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.1",
                        "Draft"});
#line 719
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table55.AddRow(new string[] {
                        "Subject Initials",
                        "sub107"});
#line 721
    testRunner.And("I create a Subject", ((string)(null)), table55);
#line 725
 testRunner.And("I select Folder \"Screening\"");
#line 726
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 727
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table56.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table56.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table56.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 728
 testRunner.And("I save the CRF page", ((string)(null)), table56);
#line 733
 testRunner.And("I take a screenshot");
#line 734
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 735
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table57.AddRow(new string[] {
                        "Original Axis Number",
                        "101"});
#line 736
 testRunner.And("I save the CRF page", ((string)(null)), table57);
#line 741
 testRunner.And("I take a screenshot");
#line 742
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 743
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 744
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 745
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 746
 testRunner.And("I take a screenshot");
#line 747
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 748
 testRunner.And("I save the CRF page");
#line 749
 testRunner.And("I close the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" fields" +
                    "");
#line 750
 testRunner.And("I save the CRF page");
#line 751
 testRunner.And("I take a screenshot");
#line 752
 testRunner.And("I select the form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table58.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 753
 testRunner.And("I enter data in CRF", ((string)(null)), table58);
#line 758
 testRunner.And("I save the CRF page");
#line 759
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 760
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\" and \"Original Axis Numb" +
                    "er\" fields");
#line 761
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.7.2",
                        "Draft"});
#line 767
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 769
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table59.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub107",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 770
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table59);
#line 775
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredCancelQueriesInLogFieldsSecondLogFormModifyLogFormFirstLogFormToDifferentBadDataDoNotTouchSecondLogForm_QueryAndNoLogsInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.8.1 On a Cross Forms log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, cancel queries in log fields (second log form), Modify log form (first log form) to different bad data, do not touch second log form - query and no logs in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.1",
                        "Draft"});
#line 781
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table60.AddRow(new string[] {
                        "Subject Initials",
                        "sub108"});
#line 783
    testRunner.And("I create a Subject", ((string)(null)), table60);
#line 787
 testRunner.And("I select Folder \"Screening\"");
#line 788
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 789
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table61.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table61.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 790
 testRunner.And("I save the CRF page", ((string)(null)), table61);
#line 795
 testRunner.And("I take a screenshot");
#line 796
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 797
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table62.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 798
 testRunner.And("I save the CRF page", ((string)(null)), table62);
#line 803
 testRunner.And("I take a screenshot");
#line 804
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 805
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 806
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 807
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 808
 testRunner.And("I take a screenshot");
#line 809
 testRunner.And("I cancel the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 810
 testRunner.And("I save the CRF page");
#line 811
 testRunner.And("I take a screenshot");
#line 812
 testRunner.And("I select the form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table63.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
            table63.AddRow(new string[] {
                        "AE Number",
                        "100"});
#line 813
 testRunner.And("I enter data in CRF", ((string)(null)), table63);
#line 818
 testRunner.And("I save the CRF page");
#line 819
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 820
 testRunner.And("I verify new queries did fire on \"Start Date\", \"End Date\" and \"Original Axis Numb" +
                    "er\" fields");
#line 821
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.8.2",
                        "Draft"});
#line 827
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 829
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table64.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub108",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "AE Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 830
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table64);
#line 835
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentGoodDataDoNotTouchStandardForm_NoQueryAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.9.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different good data, do not touch standard form - no query and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.1",
                        "Draft"});
#line 841
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table65.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table65.AddRow(new string[] {
                        "Subject Initials",
                        "sub109"});
#line 843
    testRunner.And("I create a Subject", ((string)(null)), table65);
#line 847
 testRunner.And("I select Folder \"Screening\"");
#line 848
 testRunner.And("I select Form \"Informed Consent\"");
#line 849
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table66.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table66.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table66.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 850
 testRunner.And("I save the CRF page", ((string)(null)), table66);
#line 856
 testRunner.And("I take a screenshot");
#line 857
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 858
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 859
 testRunner.And("I save the CRF page", ((string)(null)), table67);
#line 865
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 866
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 867
 testRunner.And("I take a screenshot");
#line 868
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 869
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 870
 testRunner.And("I save the CRF page");
#line 871
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 872
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 873
 testRunner.And("I save the CRF page");
#line 874
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 875
 testRunner.And("I enter data in CRF", ((string)(null)), table68);
#line 879
 testRunner.And("I save the CRF page");
#line 880
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"Current Axis Number\" f" +
                    "ields");
#line 881
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.9.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_9_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.9.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.9.2",
                        "Draft"});
#line 887
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 889
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table69.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub109",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 890
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table69);
#line 894
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedicationsQueriesFiredAnswerAndManuallyCloseQueriesInLogFieldsModifyLogFieldsToDifferentBadDataDoNotTouchStandardForm_QueryFiresAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.10.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"" Queries fired, Answer and  Manually close queries in log fields, Modify log fields to different bad data, do not touch standard form - query fires and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.1",
                        "Draft"});
#line 900
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table70.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table70.AddRow(new string[] {
                        "Subject Initials",
                        "sub110"});
#line 902
    testRunner.And("I create a Subject", ((string)(null)), table70);
#line 906
 testRunner.And("I select Folder \"Screening\"");
#line 907
 testRunner.And("I select Form \"Informed Consent\"");
#line 908
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table71.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table71.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 909
 testRunner.And("I save the CRF page", ((string)(null)), table71);
#line 915
 testRunner.And("I take a screenshot");
#line 916
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 917
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table72.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table72.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 918
 testRunner.And("I save the CRF page", ((string)(null)), table72);
#line 924
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 925
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 926
 testRunner.And("I take a screenshot");
#line 927
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 928
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\"");
#line 929
 testRunner.And("I save the CRF page");
#line 930
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 931
 testRunner.And("I close the Query on Field \"Current Axis Number\"");
#line 932
 testRunner.And("I save the CRF page");
#line 933
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "21"});
#line 934
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line 938
 testRunner.And("I save the CRF page");
#line 939
    testRunner.And("I verify the queries refired on \"Start Date\" and \"Current Axis Number\" fields");
#line 940
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.10.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_10_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.10.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.10.2",
                        "Draft"});
#line 946
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 948
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub110",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "21",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 949
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 953
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.1 On a Cross Forms Standard form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_1OnACrossFormsStandardFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.1 On a Cross Forms Standard form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.1",
                        "Draft"});
#line 959
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table75.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table75.AddRow(new string[] {
                        "Subject Initials",
                        "sub111"});
#line 962
    testRunner.And("I create a Subject", ((string)(null)), table75);
#line 966
 testRunner.And("I select Folder \"Screening\"");
#line 967
 testRunner.And("I select Form \"Informed Consent\"");
#line 968
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table76.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table76.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 969
 testRunner.And("I save the CRF page", ((string)(null)), table76);
#line 975
 testRunner.And("I take a screenshot");
#line 976
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 977
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table77.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 978
 testRunner.And("I save the CRF page", ((string)(null)), table77);
#line 984
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 985
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 986
 testRunner.And("I take a screenshot");
#line 987
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table78.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 988
 testRunner.And("I enter data in CRF", ((string)(null)), table78);
#line 992
 testRunner.And("I save the CRF page");
#line 993
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 994
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 995
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.11.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_11_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.11.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.11.2",
                        "Draft"});
#line 1001
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1003
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table79.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub111",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Distribution Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1004
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table79);
#line 1008
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_12_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogForm_QueriesClosedBySystemAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.12.1 On a Cross Forms Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form - queries closed by system and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.12.1",
                        "Draft"});
#line 1014
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table80.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table80.AddRow(new string[] {
                        "Subject Initials",
                        "sub112"});
#line 1016
    testRunner.And("I create a Subject", ((string)(null)), table80);
#line 1020
 testRunner.And("I select Folder \"Screening\"");
#line 1021
 testRunner.And("I select Form \"Informed Consent\"");
#line 1022
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table81.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table81.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table81.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1023
 testRunner.And("I save the CRF page", ((string)(null)), table81);
#line 1029
 testRunner.And("I take a screenshot");
#line 1030
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1031
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1032
 testRunner.And("I save the CRF page", ((string)(null)), table82);
#line 1038
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1039
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 1040
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1041
 testRunner.And("I enter data in CRF", ((string)(null)), table83);
#line 1045
 testRunner.And("I save the CRF page");
#line 1046
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 1047
 testRunner.And("I take a screenshot");
#line 1048
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub112",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1049
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table84);
#line 1053
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_1OnACrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyStandardFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.13.1 On a Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify standard fields to different good data, new value results in system close of edit check on log form and update \new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.1",
                        "Draft"});
#line 1059
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table85.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table85.AddRow(new string[] {
                        "Subject Initials",
                        "sub113"});
#line 1061
    testRunner.And("I create a Subject", ((string)(null)), table85);
#line 1065
 testRunner.And("I select Folder \"Screening\"");
#line 1066
 testRunner.And("I select Form \"Informed Consent\"");
#line 1067
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table86.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table86.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table86.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1068
 testRunner.And("I save the CRF page", ((string)(null)), table86);
#line 1074
 testRunner.And("I take a screenshot");
#line 1075
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1076
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table87.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1077
 testRunner.And("I save the CRF page", ((string)(null)), table87);
#line 1083
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1084
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 1085
 testRunner.And("I take a screenshot");
#line 1086
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "08 Jan 2000"});
            table88.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1087
 testRunner.And("I enter data in CRF", ((string)(null)), table88);
#line 1091
 testRunner.And("I save the CRF page");
#line 1092
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1093
    testRunner.And("I verify the queries closed automatically");
#line 1094
 testRunner.And("I take a screenshot");
#line 1095
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table89.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1096
 testRunner.And("I enter data in CRF", ((string)(null)), table89);
#line 1100
 testRunner.And("I save the CRF page");
#line 1101
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1102
    testRunner.And("I verify the queries refire on \"Start Date\" and \"Current Axis Number\" fields");
#line 1103
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.13.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_13_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.13.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.13.2",
                        "Draft"});
#line 1109
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1111
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table90.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub113",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "19",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1112
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table90);
#line 1116
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_1VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_CrossFormsStandardFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications_QueriesFiredOnLogFormModifyLogFieldsToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnLogFormAndUpdateNewValueOnStandardFieldsInViolationOfEditCheckOnLogForm_QueriesRefiresOnLogFormAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.14.1 Verifies query firing between cross forms with require response and require manual close. Cross Forms: Standard form to log form. Folder ""Screening"" enter and save data on forms ""Informed Consent"" and ""Concomitant Medications"". Queries fired on log form, Modify log fields to different good data, new value results in system close of edit check on log form and update new value on standard fields in violation of edit check on log form- queries refires on log form and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.1",
                        "Draft"});
#line 1122
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table91.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table91.AddRow(new string[] {
                        "Subject Initials",
                        "sub114"});
#line 1124
    testRunner.And("I create a Subject", ((string)(null)), table91);
#line 1128
 testRunner.And("I select Folder \"Screening\"");
#line 1129
 testRunner.And("I select Form \"Informed Consent\"");
#line 1130
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table92.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table92.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table92.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 1131
 testRunner.And("I save the CRF page", ((string)(null)), table92);
#line 1137
 testRunner.And("I take a screenshot");
#line 1138
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 1139
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table93.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table93.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table93.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 1140
 testRunner.And("I save the CRF page", ((string)(null)), table93);
#line 1146
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1147
    testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 1148
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table94.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 1149
 testRunner.And("I enter data in CRF", ((string)(null)), table94);
#line 1153
 testRunner.And("I save the CRF page");
#line 1154
    testRunner.And("I verify the queries closed automatically");
#line 1155
 testRunner.And("I take a screenshot");
#line 1156
 testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table95.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table95.AddRow(new string[] {
                        "Current Distribution Number",
                        "20"});
#line 1157
 testRunner.And("I enter data in CRF", ((string)(null)), table95);
#line 1161
 testRunner.And("I save the CRF page");
#line 1162
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1163
    testRunner.And("I verify the queries refire on \"Start Date\" and \"Current Axis Number\" fields");
#line 1164
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.14.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_14_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.14.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.14.2",
                        "Draft"});
#line 1170
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1172
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Date Informed Consent Signed",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table96.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub114",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "19",
                        "Screening",
                        "Informed Consent",
                        "0",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 1173
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table96);
#line 1177
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_1OnACrossFormsLogFormToLogFormFolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredAnswerAndManuallyCloseQueriesOnConcomitantMedicationsFormModifyLogFieldsToDifferentGoodDataOnAdverseEventsFormDoNotTouchConcomitantMedicationsForm_NoQueriesOnConcomitantMedicationsAndNoLogInTheDatabase_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.15.1 On a Cross Forms log form to log form, Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired, Answer and  Manually close queries on ""Concomitant Medications"" form, Modify log fields to different good data on ""Adverse Events"" form, do not touch ""Concomitant Medications"" form - no queries on ""Concomitant Medications"" and no log in the Database.", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.1",
                        "Draft"});
#line 1183
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table97.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table97.AddRow(new string[] {
                        "Subject Initials",
                        "sub115"});
#line 1185
    testRunner.And("I create a Subject", ((string)(null)), table97);
#line 1189
 testRunner.And("I select Folder \"Screening\"");
#line 1190
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1191
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table98.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table98.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1192
testRunner.And("I save the CRF page", ((string)(null)), table98);
#line 1196
 testRunner.And("I take a screenshot");
#line 1197
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1198
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table99.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1199
testRunner.And("I save the CRF page", ((string)(null)), table99);
#line 1203
 testRunner.And("I take a screenshot");
#line 1204
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1205
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1206
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1207
 testRunner.And("I take a screenshot");
#line 1208
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\"");
#line 1209
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\"");
#line 1210
 testRunner.And("I save the CRF page");
#line 1211
 testRunner.And("I close the Query on Field \"Start Date\"");
#line 1212
 testRunner.And("I close the Query on Field \"End Date\"");
#line 1213
 testRunner.And("I save the CRF page");
#line 1214
 testRunner.And("I take a screenshot");
#line 1215
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table100.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table100.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1216
 testRunner.And("I enter data in CRF", ((string)(null)), table100);
#line 1220
 testRunner.And("I save the CRF page");
#line 1221
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1222
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"End Date\" fields");
#line 1223
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.15.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_15_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.15.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.15.2",
                        "Draft"});
#line 1229
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1231
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table101.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub115",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1232
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table101);
#line 1236
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.1 On a Cross Forms log form to log form.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_1OnACrossFormsLogFormToLogForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.1 On a Cross Forms log form to log form.", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.1",
                        "Draft"});
#line 1242
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table102.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table102.AddRow(new string[] {
                        "Subject Initials",
                        "sub116"});
#line 1245
    testRunner.And("I create a Subject", ((string)(null)), table102);
#line 1249
 testRunner.And("I select Folder \"Screening\"");
#line 1250
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1251
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table103.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table103.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table103.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
#line 1252
testRunner.And("I save the CRF page", ((string)(null)), table103);
#line 1257
 testRunner.And("I take a screenshot");
#line 1258
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1259
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table104.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table104.AddRow(new string[] {
                        "AE Number",
                        "101"});
#line 1260
testRunner.And("I save the CRF page", ((string)(null)), table104);
#line 1265
 testRunner.And("I take a screenshot");
#line 1266
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1267
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1268
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1269
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 1270
 testRunner.And("I take a screenshot");
#line 1271
 testRunner.And("I answer the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" field" +
                    "s");
#line 1272
 testRunner.And("I save the CRF page");
#line 1273
 testRunner.And("I close the queries on \"Start Date\", \"End Date\" and \"Original Axis Number\" fields" +
                    "");
#line 1274
 testRunner.And("I save the CRF page");
#line 1275
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table105.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table105.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table105.AddRow(new string[] {
                        "Original Axis Number",
                        "99"});
#line 1276
 testRunner.And("I enter data in CRF", ((string)(null)), table105);
#line 1281
 testRunner.And("I save the CRF page");
#line 1282
    testRunner.And("I verify the queries refire on \"Start Date\", \"End Date\" and \"Original Axis Number" +
                    "\" fields");
#line 1283
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.16.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_16_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.16.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.16.2",
                        "Draft"});
#line 1289
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1291
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table106.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub116",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
#line 1292
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table106);
#line 1297
   testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.1",
                        "Draft"});
#line 1303
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table107.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table107.AddRow(new string[] {
                        "Subject Initials",
                        "sub117"});
#line 1306
    testRunner.And("I create a Subject", ((string)(null)), table107);
#line 1310
 testRunner.And("I select Folder \"Screening\"");
#line 1311
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1312
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table108.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table108.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1313
testRunner.And("I save the CRF page", ((string)(null)), table108);
#line 1317
 testRunner.And("I take a screenshot");
#line 1318
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1319
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table109.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1320
testRunner.And("I save the CRF page", ((string)(null)), table109);
#line 1324
 testRunner.And("I take a screenshot");
#line 1325
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1326
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1327
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1328
 testRunner.And("I take a screenshot");
#line 1329
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table110.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table110.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1330
 testRunner.And("I enter data in CRF", ((string)(null)), table110);
#line 1334
 testRunner.And("I save the CRF page");
#line 1335
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1336
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1337
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.17.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_17_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.17.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.17.2",
                        "Draft"});
#line 1343
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1345
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "10 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table111.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub117",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1346
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table111);
#line 1350
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.1",
                        "Draft"});
#line 1356
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table112.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table112.AddRow(new string[] {
                        "Subject Initials",
                        "sub118"});
#line 1359
    testRunner.And("I create a Subject", ((string)(null)), table112);
#line 1363
 testRunner.And("I select Folder \"Screening\"");
#line 1364
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1365
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table113.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1366
testRunner.And("I save the CRF page", ((string)(null)), table113);
#line 1370
 testRunner.And("I take a screenshot");
#line 1371
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1372
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table114.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1373
testRunner.And("I save the CRF page", ((string)(null)), table114);
#line 1377
 testRunner.And("I take a screenshot");
#line 1378
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1379
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1380
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1381
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table115.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1382
 testRunner.And("I enter data in CRF", ((string)(null)), table115);
#line 1386
 testRunner.And("I save the CRF page");
#line 1387
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1388
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.18.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_18_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.18.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.18.2",
                        "Draft"});
#line 1394
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1396
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table116.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub118",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1397
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table116);
#line 1401
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_1OnACrossFormsLogFormToLogForm_FolderScreeningEnterAndSaveDataOnFormsConcomitantMedicationsAndAdverseEvents_QueriesFiredOnSecondLogFormModifyLogFieldsOnFirstLogFormToDifferentGoodDataNewValueResultsInSystemCloseOfEditCheckOnSecondLogForm_NavigateToFirstLogFormAndEnterNewValueInViolationOfEditCheck_QueriesRefiredOnSecondLogFormAndNoLogInTheDatabase()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_1.19.1 On a Cross Forms: log form to log form. Folder ""Screening"" enter and save data on forms ""Concomitant Medications"" and ""Adverse Events"". Queries fired on second log form, Modify log fields on first log form to different good data, new value results in system close of edit check on second log form. Navigate to first log form and enter new value in violation of edit check - queries refired on second log form and no log in the Database", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.1",
                        "Draft"});
#line 1407
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table117.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table117.AddRow(new string[] {
                        "Subject Initials",
                        "sub119"});
#line 1409
    testRunner.And("I create a Subject", ((string)(null)), table117);
#line 1413
 testRunner.And("I select Folder \"Screening\"");
#line 1414
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1415
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table118.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1416
testRunner.And("I save the CRF page", ((string)(null)), table118);
#line 1420
 testRunner.And("I take a screenshot");
#line 1421
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1422
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table119.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1423
testRunner.And("I save the CRF page", ((string)(null)), table119);
#line 1427
 testRunner.And("I take a screenshot");
#line 1428
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1429
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1430
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1431
 testRunner.And("I take a screenshot");
#line 1432
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Date Field 1",
                        "10 Jan 2000"});
            table120.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1433
 testRunner.And("I enter data in CRF", ((string)(null)), table120);
#line 1437
 testRunner.And("I save the CRF page");
#line 1438
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1439
    testRunner.And("I verify the queries closed automatically");
#line 1440
 testRunner.And("I take a screenshot");
#line 1441
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table121.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1442
 testRunner.And("I enter data in CRF", ((string)(null)), table121);
#line 1446
 testRunner.And("I save the CRF page");
#line 1447
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1448
    testRunner.And("I verify the queries refired on \"Start Date\" and \"End Date\" fields");
#line 1449
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.19.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_19_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.19.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.19.2",
                        "Draft"});
#line 1455
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1457
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "11 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table122.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub119",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "09 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1458
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table122);
#line 1462
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.1 On a Cross Forms log form to log form,")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_1OnACrossFormsLogFormToLogForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.1 On a Cross Forms log form to log form,", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.1",
                        "Draft"});
#line 1468
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table123.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table123.AddRow(new string[] {
                        "Subject Initials",
                        "sub120"});
#line 1473
    testRunner.And("I create a Subject", ((string)(null)), table123);
#line 1477
 testRunner.And("I select Folder \"Screening\"");
#line 1478
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1479
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table124.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
#line 1480
testRunner.And("I save the CRF page", ((string)(null)), table124);
#line 1484
 testRunner.And("I take a screenshot");
#line 1485
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 1486
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table125.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1487
testRunner.And("I save the CRF page", ((string)(null)), table125);
#line 1491
 testRunner.And("I take a screenshot");
#line 1492
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1493
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 1494
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 1495
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table126.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
#line 1496
 testRunner.And("I enter data in CRF", ((string)(null)), table126);
#line 1500
 testRunner.And("I save the CRF page");
#line 1501
    testRunner.And("I verify the queries closed automatically on \"Start Date\" and \"End Date\" fields");
#line 1502
 testRunner.And("I take a screenshot");
#line 1503
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Date Field 1",
                        "12 Jan 2000"});
            table127.AddRow(new string[] {
                        "End Date",
                        "08 Feb 2000"});
#line 1504
 testRunner.And("I enter data in CRF", ((string)(null)), table127);
#line 1508
 testRunner.And("I save the CRF page");
#line 1509
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1510
    testRunner.And("I verify the queries refired on \"Start Date\" and \"End Date\" fields");
#line 1511
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.20.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_20_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.20.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.20.2",
                        "Draft"});
#line 1517
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1519
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "Date Field 1",
                        "12 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table128.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub120",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Adverse Events",
                        "1",
                        "End Date",
                        "08 Feb 2000",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
#line 1520
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table128);
#line 1524
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
            "uire manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_1OnAVerifiesQueryFiringOnMixedFormWithRequireResponseAndRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.1 On a  Verifies query firing on Mixed Form with require response and req" +
                    "uire manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.1",
                        "Draft"});
#line 1530
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table129.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table129.AddRow(new string[] {
                        "Subject Initials",
                        "sub121"});
#line 1534
    testRunner.And("I create a Subject", ((string)(null)), table129);
#line 1538
 testRunner.And("I select Form \"Mixed Form\"");
#line 1539
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Standard 1",
                        "5"});
            table130.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table130.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 1540
testRunner.And("I save the CRF page", ((string)(null)), table130);
#line 1545
 testRunner.And("I take a screenshot");
#line 1546
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1547
 testRunner.And("I take a screenshot");
#line 1548
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 1549
 testRunner.And("I save the CRF page");
#line 1550
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 1551
 testRunner.And("I save the CRF page");
#line 1552
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table131.AddRow(new string[] {
                        "Standard 1",
                        "6"});
#line 1553
 testRunner.And("I enter data in CRF", ((string)(null)), table131);
#line 1556
 testRunner.And("I save the CRF page");
#line 1557
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1558
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.21.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_21_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.21.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.21.2",
                        "Draft"});
#line 1564
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1566
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table132.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub121",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "6",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1567
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table132);
#line 1570
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.1 On a")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_1OnA()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.1 On a", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.1",
                        "Draft"});
#line 1576
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table133.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum(Edit Check Study 3,prod,Subject Number)}"});
            table133.AddRow(new string[] {
                        "Subject Initials",
                        "sub122"});
#line 1581
    testRunner.And("I create a Subject", ((string)(null)), table133);
#line 1585
 testRunner.And("I select Form \"Mixed Form\"");
#line 1586
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table134.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table134.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1587
testRunner.And("I save the CRF page", ((string)(null)), table134);
#line 1592
 testRunner.And("I take a screenshot");
#line 1593
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1594
 testRunner.And("I take a screenshot");
#line 1595
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1596
 testRunner.And("I save the CRF page");
#line 1597
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 1598
 testRunner.And("I enter data in CRF", ((string)(null)), table135);
#line 1601
 testRunner.And("I save the CRF page");
#line 1602
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1603
 testRunner.And("I take a screenshot");
#line 1604
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table136.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "1",
                        "Log Field 1",
                        "5",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1605
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table136);
#line 1608
 testRunner.And("I take a screenshot");
#line 1610
 testRunner.And("I select Form \"Mixed Form\"");
#line 1611
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table137.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1612
 testRunner.And("I enter data in CRF", ((string)(null)), table137);
#line 1616
 testRunner.And("I take a screenshot");
#line 1617
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1618
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1619
 testRunner.And("I enter data in CRF", ((string)(null)), table138);
#line 1622
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1623
 testRunner.And("I save the CRF page");
#line 1624
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 1625
 testRunner.And("I enter data in CRF", ((string)(null)), table139);
#line 1628
 testRunner.And("I save the CRF page");
#line 1629
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1630
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.2", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.2",
                        "Draft"});
#line 1636
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1638
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table140.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "2",
                        "Log Field 1",
                        "4",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1639
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table140);
#line 1642
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.3", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.3",
                        "Draft"});
#line 1648
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1650
 testRunner.And("I select Form \"Mixed Form\"");
#line 1651
    testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
            table141.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 1652
 testRunner.And("I enter data in CRF", ((string)(null)), table141);
#line 1656
 testRunner.And("I take a screenshot");
#line 1657
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Log Field 1\"");
#line 1658
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Log Field 1",
                        "8"});
#line 1659
 testRunner.And("I enter data in CRF", ((string)(null)), table142);
#line 1662
 testRunner.And("I cancel the query on \"Log Field 1\" field");
#line 1663
 testRunner.And("I save the CRF page");
#line 1664
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Standard 1",
                        "10"});
#line 1665
 testRunner.And("I enter data in CRF", ((string)(null)), table143);
#line 1668
 testRunner.And("I save the CRF page");
#line 1669
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 1670
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_1.22.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "1")]
        public virtual void PB_1_22_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_1.22.4", new string[] {
                        "release_564_Patch11",
                        "PB_1.22.4",
                        "Draft"});
#line 1676
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1678
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table144.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub122",
                        "NULL",
                        "Mixed Form",
                        "3",
                        "Log Field 1",
                        "10",
                        "NULL",
                        "Mixed Form",
                        "0",
                        "Standard 1",
                        "8",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1679
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table144);
#line 1682
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
