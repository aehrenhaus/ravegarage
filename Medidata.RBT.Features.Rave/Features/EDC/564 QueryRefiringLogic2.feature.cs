// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _2Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564 QueryRefiringLogic2.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "2", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "2")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._2Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "CDM1",
                        "Edit Check Site 2",
                        "20001"});
#line 14
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line 18
 testRunner.And("Draft \"Draft 2\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 19
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 2\" in Environment \"Prod\"");
#line 20
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.1",
                        "Draft"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 29
    testRunner.And("I create a Subject", ((string)(null)), table2);
#line 33
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 34
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line 40
 testRunner.And("I take a screenshot");
#line 41
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table4.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table4.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 42
    testRunner.And("I enter data in CRF and save", ((string)(null)), table4);
#line 48
 testRunner.And("I open log line 1");
#line 49
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 50
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 51
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 52
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line 56
 testRunner.And("I open log line 1");
#line 57
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 58
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 59
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 61
 testRunner.When("I enter data in CRF", ((string)(null)), table6);
#line 65
 testRunner.And("I save the CRF page");
#line 66
 testRunner.And("I open log line 1");
#line 67
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 68
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 69
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.2",
                        "Draft"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 77
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 78
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table7);
#line 82
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.3",
                        "Draft"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 90
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table8.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table8.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 91
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table8);
#line 97
 testRunner.And("I open log line 2");
#line 98
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 99
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 100
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 101
 testRunner.And("I enter data in CRF and save", ((string)(null)), table9);
#line 105
 testRunner.And("I open log line 2");
#line 106
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 107
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 108
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 110
 testRunner.When("I enter data in CRF and save", ((string)(null)), table10);
#line 114
 testRunner.And("I open log line 2");
#line 115
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 116
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 117
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.4",
                        "Draft"});
#line 123
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 125
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 126
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table11);
#line 130
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_2.2.1 Verifies query firing between cross folders with no require response and no require manual close. Cross Folders: Standard form to log form, Folder ""Screening"" enter and save data on form ""Informed Consent"", Folder ""Week 1"" enter and save data on form ""Concomitant Medications"".")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_1VerifiesQueryFiringBetweenCrossFoldersWithNoRequireResponseAndNoRequireManualClose_CrossFoldersStandardFormToLogFormFolderScreeningEnterAndSaveDataOnFormInformedConsentFolderWeek1EnterAndSaveDataOnFormConcomitantMedications_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_2.2.1 Verifies query firing between cross folders with no require response and no require manual close. Cross Folders: Standard form to log form, Folder ""Screening"" enter and save data on form ""Informed Consent"", Folder ""Week 1"" enter and save data on form ""Concomitant Medications"".", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.1",
                        "Draft"});
#line 136
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table12.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 138
    testRunner.And("I create a Subject", ((string)(null)), table12);
#line 142
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 143
 testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 149
 testRunner.And("I take a screenshot");
#line 150
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table14.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 151
    testRunner.And("I enter data in CRF and save", ((string)(null)), table14);
#line 157
 testRunner.And("I open log line 1");
#line 158
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 159
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 160
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 161
 testRunner.And("I enter data in CRF and save", ((string)(null)), table15);
#line 166
 testRunner.And("I open log line 1");
#line 167
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 168
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 169
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table16.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 171
 testRunner.When("I enter data in CRF and save", ((string)(null)), table16);
#line 176
 testRunner.And("I open log line 1");
#line 177
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is not displayed on Field \"Start Date\"");
#line 178
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is not displayed on Field \"Current Axis Number\"");
#line 179
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.2",
                        "Draft"});
#line 185
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 187
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table17.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table17.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 188
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table17);
#line 192
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.3",
                        "Draft"});
#line 198
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 200
  testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 201
 testRunner.And("I select Form \"Concomitant Medications\" in folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 202
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table18);
#line 208
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 209
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 210
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 211
 testRunner.And("I enter data in CRF and save", ((string)(null)), table19);
#line 216
 testRunner.And("I open log line 2");
#line 217
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 218
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 219
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table20.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 221
 testRunner.When("I enter data in CRF and save", ((string)(null)), table20);
#line 226
 testRunner.And("I open log line 2");
#line 227
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is displayed on Field \"Start Date\"");
#line 228
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 229
 testRunner.And("I take a screenshot");
#line 230
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.4",
                        "Draft"});
#line 236
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 238
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table21.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table21.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 239
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table21);
#line 243
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
            "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_1OnACrossFormsLogFormToStandardFormFolderWeek1EnterAndSaveDataOnFormsConcomitantMedicationsAndInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
                    "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.1",
                        "Draft"});
#line 249
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table22.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 251
    testRunner.And("I create a Subject", ((string)(null)), table22);
#line 255
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table23.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 256
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line 262
 testRunner.And("I open log line 1");
#line 263
 testRunner.And("I verify Query with message \"Start Date can not be greater than End Date.\" withou" +
                    "t Requires Response is displayed on Field \"End Date\"");
#line 264
 testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" without Requires Response is displayed on Field \"C" +
                    "urrent Axis Number\"");
#line 265
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 266
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 270
 testRunner.And("I open log line 1");
#line 271
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 272
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 273
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table25.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 275
 testRunner.When("I enter data in CRF and save", ((string)(null)), table25);
#line 279
 testRunner.And("I open log line 1");
#line 280
 testRunner.Then("I verify Query with message \"Start Date can not be greater than End Date.\" is dis" +
                    "played on Field \"End Date\"");
#line 281
    testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" is displayed on Field \"Current Axis Number\"");
#line 282
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.2",
                        "Draft"});
#line 288
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 290
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 291
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table26);
#line 295
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.3",
                        "Draft"});
#line 301
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 303
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 304
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table27.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 305
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table27);
#line 311
 testRunner.And("I verify Query with message \"Start Date can not be greater than End Date.\" withou" +
                    "t Requires Response is displayed on Field \"End Date\"");
#line 312
 testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" without Requires Response is displayed on Field \"C" +
                    "urrent Axis Number\"");
#line 313
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 314
 testRunner.And("I enter data in CRF abd save", ((string)(null)), table28);
#line 318
 testRunner.And("I open log line 2");
#line 319
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 320
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 321
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table29.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 323
 testRunner.When("I enter data in CRF and save", ((string)(null)), table29);
#line 327
 testRunner.And("I open log line 2");
#line 328
 testRunner.Then("I verify Query with message \"Start Date can not be greater than End Date.\" is dis" +
                    "played on Field \"End Date\"");
#line 329
    testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" is displayed on Field \"Current Axis Number\"");
#line 330
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.4",
                        "Draft"});
#line 336
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 338
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 339
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table30);
#line 343
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.5",
                        "Draft"});
#line 348
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 350
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table31.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table31.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 351
    testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 357
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date.\" without Requires Response is displayed on Field \"End Date\"");
#line 358
 testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" without Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 359
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 360
 testRunner.And("I enter data in CRF and save", ((string)(null)), table32);
#line 364
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 365
 testRunner.And("I verify Field \"Current Distribution Number\" has NO Query");
#line 366
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table33.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 368
    testRunner.When("I enter data in CRF and save", ((string)(null)), table33);
#line 372
 testRunner.And("I save the CRF page");
#line 373
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date.\" is displayed on Field \"End Date\"");
#line 374
    testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" is displayed on Field \"Current Distribution " +
                    "Number\"");
#line 375
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.6",
                        "Draft"});
#line 381
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 383
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table34.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table34.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 384
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table34);
#line 388
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.1 Verifies query firing between cross forms in different folder with no re" +
            "quire response and no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_1VerifiesQueryFiringBetweenCrossFormsInDifferentFolderWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.1 Verifies query firing between cross forms in different folder with no re" +
                    "quire response and no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.1",
                        "Draft"});
#line 394
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table35.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 398
    testRunner.And("I create a Subject", ((string)(null)), table35);
#line 402
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table36.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 403
 testRunner.And("I enter data in CRF and save", ((string)(null)), table36);
#line 409
 testRunner.And("I take a screenshot");
#line 410
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table37.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 411
    testRunner.And("I enter data in CRF and save", ((string)(null)), table37);
#line 417
 testRunner.And("I take a screenshot");
#line 418
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 419
 testRunner.And("I open log line 1");
#line 420
 testRunner.And("I verify Query with message \"Date can not be less than.\" without Requires Respons" +
                    "e is displayed on Field \"Start Date\"");
#line 421
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" witho" +
                    "ut Requires Response is displayed on Field \"End Date\"");
#line 422
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" without Requires Response is displayed on F" +
                    "ield \"Original Axis Number\"");
#line 423
 testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " without Requires Response is displayed on Field \"Current Axis Number\"");
#line 424
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 425
 testRunner.And("I enter data in CRF and save", ((string)(null)), table38);
#line 431
 testRunner.And("I open log line 1");
#line 432
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 433
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 434
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 435
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 436
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table39.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table39.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table39.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 438
 testRunner.When("I enter data in CRF and save", ((string)(null)), table39);
#line 444
 testRunner.And("I open log line 1");
#line 445
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 446
    testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 447
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number" +
                    "\"");
#line 448
    testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " is displayed on Field \"Current Axis Number\"");
#line 449
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.2",
                        "Draft"});
#line 455
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 457
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 458
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table40);
#line 464
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.3",
                        "Draft"});
#line 470
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 472
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table41.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table41.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 473
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table41);
#line 479
 testRunner.And("I take a screenshot");
#line 480
    testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table42.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 481
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table42);
#line 487
 testRunner.And("I take a screenshot");
#line 488
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 489
 testRunner.And("I open log line 2");
#line 490
 testRunner.And("I verify Query with message \"Date can not be less than.\" without Requires Respons" +
                    "e is displayed on Field \"Start Date\"");
#line 491
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" witho" +
                    "ut Requires Response is displayed on Field \"End Date\"");
#line 492
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" without Requires Response is displayed on F" +
                    "ield \"Original Axis Number\"");
#line 493
 testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " without Requires Response is displayed on Field \"Current Axis Number\"");
#line 494
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table43.AddRow(new string[] {
                        "Numeric Field 1",
                        "202"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 495
    testRunner.And("I enter data in CRF and save", ((string)(null)), table43);
#line 501
 testRunner.And("I open log line 2");
#line 502
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 503
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 504
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 505
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 506
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table44.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table44.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table44.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table44.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 508
 testRunner.When("I enter data in CRF and save", ((string)(null)), table44);
#line 514
 testRunner.And("I open log line 2");
#line 515
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 516
    testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 517
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number" +
                    "\"");
#line 518
    testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " is displayed on Field \"Current Axis Number\"");
#line 519
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.4",
                        "Draft"});
#line 525
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 527
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 528
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table45);
#line 534
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.1  Verifies query firing between cross forms with no require response and " +
            "no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.1  Verifies query firing between cross forms with no require response and " +
                    "no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.1",
                        "Draft"});
#line 542
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table46.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 546
    testRunner.And("I create a Subject", ((string)(null)), table46);
#line 550
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table47.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 551
 testRunner.And("I enter data in CRF and save", ((string)(null)), table47);
#line 557
 testRunner.And("I take a screenshot");
#line 558
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table48.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table48.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table48.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 559
    testRunner.And("I enter data in CRF and save", ((string)(null)), table48);
#line 565
 testRunner.And("I open log line 1");
#line 566
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 567
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 568
 testRunner.And("I take a screenshot");
#line 569
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 570
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 571
 testRunner.And("I save the CRF page");
#line 572
 testRunner.And("I take a screenshot");
#line 573
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table49.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 574
 testRunner.And("I enter data in CRF and save", ((string)(null)), table49);
#line 578
 testRunner.And("I open log line 1");
#line 579
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 580
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 581
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table50.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 583
 testRunner.When("I enter data in CRF and save", ((string)(null)), table50);
#line 587
 testRunner.And("I open log line 1");
#line 588
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 589
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 590
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.2",
                        "Draft"});
#line 596
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 598
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table51.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table51.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 599
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table51);
#line 603
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.3",
                        "Draft"});
#line 609
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 611
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 612
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table52);
#line 618
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 619
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 620
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 621
 testRunner.And("I enter data in CRF", ((string)(null)), table53);
#line 625
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 626
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 627
 testRunner.And("I save the CRF page");
#line 628
 testRunner.And("I take a screenshot");
#line 629
 testRunner.And("I open log line 2");
#line 630
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 631
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 632
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table54.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table54.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 634
 testRunner.When("I enter data in CRF and save", ((string)(null)), table54);
#line 638
 testRunner.And("I open log line 2");
#line 639
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 640
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 641
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.4",
                        "Draft"});
#line 647
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 649
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table55.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table55.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 650
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table55);
#line 654
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.1", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.1",
                        "Draft"});
#line 660
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table56.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 664
    testRunner.And("I create a Subject", ((string)(null)), table56);
#line 668
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table57.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table57.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 669
 testRunner.And("I enter data in CRF and save", ((string)(null)), table57);
#line 675
 testRunner.And("I take a screenshot");
#line 676
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table58.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table58.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 677
    testRunner.And("I enter data in CRF and save", ((string)(null)), table58);
#line 683
 testRunner.And("I open log line 1");
#line 684
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 685
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 686
 testRunner.And("I take a screenshot");
#line 687
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' can not be greater than Start " +
                    "Date.\" on Field \"Start Date\"");
#line 688
 testRunner.And("I cancel the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\"");
#line 689
 testRunner.And("I save the CRF page");
#line 690
 testRunner.And("I take a screenshot");
#line 691
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table59.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table59.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table59.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 692
 testRunner.And("I enter data in CRF and save", ((string)(null)), table59);
#line 697
 testRunner.And("I open log line 1");
#line 698
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 699
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 700
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table60.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table60.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table60.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 702
 testRunner.When("I enter data in CRF", ((string)(null)), table60);
#line 707
 testRunner.And("I save the CRF page");
#line 708
 testRunner.And("I open log line 1");
#line 709
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is displayed on Field \"Start Date\"");
#line 710
    testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 711
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.2",
                        "Draft"});
#line 717
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 719
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table61.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table61.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 720
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table61);
#line 724
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.3",
                        "Draft"});
#line 730
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 732
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table62.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table62.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 733
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table62);
#line 739
 testRunner.And("I open log line 2");
#line 740
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 741
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 742
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table63.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table63.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 743
 testRunner.And("I enter data in CRF", ((string)(null)), table63);
#line 748
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' can not be greater than Start " +
                    "Date.\" on Field \"Start Date\"");
#line 749
 testRunner.And("I cancel the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\"");
#line 750
 testRunner.And("I save the CRF page");
#line 751
 testRunner.And("I take a screenshot");
#line 752
 testRunner.And("I open log line 2");
#line 753
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 754
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 755
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table64.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table64.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 756
 testRunner.And("I enter data in CRF and save", ((string)(null)), table64);
#line 761
 testRunner.And("I open log line 2");
#line 762
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is displayed on Field \"Start Date\"");
#line 763
    testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 764
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.4",
                        "Draft"});
#line 770
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 772
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table65.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table65.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 773
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table65);
#line 777
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.1  Verifies query firing between cross forms with no require response and " +
            "no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.1  Verifies query firing between cross forms with no require response and " +
                    "no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.1",
                        "Draft"});
#line 783
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table66.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table66.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 787
    testRunner.And("I create a Subject", ((string)(null)), table66);
#line 791
 testRunner.And("I select Folder \"Week 1\"");
#line 792
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 793
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 794
testRunner.And("I save the CRF page", ((string)(null)), table67);
#line 800
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 801
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 803
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 804
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 805
 testRunner.And("I take a screenshot");
#line 807
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 808
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 810
 testRunner.And("I cancel the queries on \"End Date\" and \"Current Axis Number\" fields");
#line 811
 testRunner.And("I save the CRF page");
#line 812
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 813
 testRunner.And("I enter data in CRF", ((string)(null)), table68);
#line 817
 testRunner.And("I save the CRF page");
#line 819
 testRunner.And("I open log line 1");
#line 820
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 821
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 823
 testRunner.And("I verify the queries did not fire on \"End Date\" and \"Current Axis Number\" fields");
#line 824
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table69.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table69.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 825
 testRunner.And("I enter data in CRF", ((string)(null)), table69);
#line 829
 testRunner.And("I save the CRF page");
#line 830
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 831
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 833
    testRunner.And("I verify the new queries did not fire on \"End Date\" and \"Current Axis Number\" fie" +
                    "lds");
#line 834
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.2",
                        "Draft"});
#line 840
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 842
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table70.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than Date Field 2.",
                        "{DateTime}"});
            table70.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 843
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table70);
#line 847
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.3",
                        "Draft"});
#line 853
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 855
 testRunner.And("I add a new log line to form \"Concomitant Medications\" within folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table71.AddRow(new string[] {
                        "Numeric Field 1",
                        "1999"});
            table71.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 856
    testRunner.And("I enter data in CRF and save", ((string)(null)), table71);
#line 862
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 863
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 865
 testRunner.And("I verify \"End Date\" field displays query opened with no require response on the s" +
                    "econd log line");
#line 866
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se on the second log line");
#line 867
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 868
 testRunner.And("I enter data in CRF", ((string)(null)), table72);
#line 873
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 874
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 876
 testRunner.And("I cancel the queries on the second log line on \"End Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 877
 testRunner.And("I save the CRF page");
#line 878
 testRunner.And("I take a screenshot");
#line 880
 testRunner.And("I open log line 1");
#line 881
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 882
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 884
 testRunner.And("I verify the queries did not fire on the second log line on \"End Date\" and \"Curre" +
                    "nt Axis Number\" fields");
#line 885
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 886
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line 890
 testRunner.And("I save the CRF page");
#line 891
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 892
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 894
 testRunner.And("I verify the new queries did fire on the second log line on \"End Date\" and \"Curre" +
                    "nt Axis Number\" fields");
#line 895
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.4",
                        "Draft"});
#line 901
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 903
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than Date Field 2.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 904
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 908
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.5", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.5",
                        "Draft"});
#line 914
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 916
 testRunner.And("I select Form \"Informed Consent\" within folder \"Week 1\"");
#line 917
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table75.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table75.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table75.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 918
testRunner.And("I save the CRF page", ((string)(null)), table75);
#line 924
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 925
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 927
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 928
 testRunner.And("I verify \"Current Distribution Number\" field displays query opened with no requir" +
                    "e response");
#line 929
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 930
 testRunner.And("I enter data in CRF", ((string)(null)), table76);
#line 935
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 936
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 938
 testRunner.And("I cancel the queries on \"End Date\" and \"Current Distribution Number\" fields");
#line 939
 testRunner.And("I save the CRF page");
#line 940
 testRunner.And("I take a screenshot");
#line 942
 testRunner.And("I open log line 1");
#line 943
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 944
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 946
 testRunner.And("I verify the new queries did not fire on \"End Date\" and \"Current Distribution Num" +
                    "ber\" fields");
#line 947
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 948
    testRunner.And("I enter data in CRF", ((string)(null)), table77);
#line 952
 testRunner.And("I save the CRF page");
#line 953
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 954
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 956
 testRunner.And("I verify the new queries did fire on \"End Date\" and \"Current Distribution Number\"" +
                    " fields");
#line 957
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.6", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.6",
                        "Draft"});
#line 963
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 965
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table78.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table78.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 966
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table78);
#line 970
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.1 Verifies query firing between cross forms with no require response and n" +
            "o require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.1 Verifies query firing between cross forms with no require response and n" +
                    "o require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.1",
                        "Draft"});
#line 976
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table79.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table79.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 980
    testRunner.And("I create a Subject", ((string)(null)), table79);
#line 984
 testRunner.And("I select Folder \"Screening\"");
#line 985
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 986
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table80.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table80.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table80.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 987
testRunner.And("I save the CRF page", ((string)(null)), table80);
#line 993
 testRunner.And("I take a screenshot");
#line 994
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 995
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table81.AddRow(new string[] {
                        "Date Field 2",
                        "09 Feb 2000"});
            table81.AddRow(new string[] {
                        "Numeric Field 1",
                        "101"});
            table81.AddRow(new string[] {
                        "Numeric Field 2",
                        "66"});
#line 996
testRunner.And("I save the CRF page", ((string)(null)), table81);
#line 1002
 testRunner.And("I take a screenshot");
#line 1003
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 1005
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1006
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1007
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1008
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1010
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 1011
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 1012
 testRunner.And("I verify \"Numeric Field 1\" field displays query opened with no require response");
#line 1013
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 1014
 testRunner.And("I take a screenshot");
#line 1016
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1017
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1018
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1019
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1021
 testRunner.And("I cancel the queries on \"Start Date\", \"End Date\", \"Numeric Field 1\" and \"Current " +
                    "Axis Number\" fields");
#line 1022
 testRunner.And("I save the CRF page");
#line 1023
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table82.AddRow(new string[] {
                        "Numeric Field 1",
                        "102"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 1024
 testRunner.And("I enter data in CRF", ((string)(null)), table82);
#line 1030
 testRunner.And("I save the CRF page");
#line 1032
 testRunner.And("I open log line 1");
#line 1033
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 1034
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 1035
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 1036
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 1038
 testRunner.And("I verify the queries did not fire on \"Start Date\", \"End Date\", \"Numeric Field 1\" " +
                    "and \"Current Axis Number\" fields");
#line 1039
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table83.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table83.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 1040
 testRunner.And("I enter data in CRF", ((string)(null)), table83);
#line 1046
 testRunner.And("I save the CRF page");
#line 1047
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1048
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1049
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1050
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1052
 testRunner.And("I verify the new queries did not fire on \"Start Date\", \"End Date\", \"Numeric Field" +
                    " 1\" and \"Current Axis Number\" fields");
#line 1053
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.2",
                        "Draft"});
#line 1059
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1061
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 1062
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table84);
#line 1068
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.3",
                        "Draft"});
#line 1074
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1076
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table85.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table85.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table85.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table85.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 1077
    testRunner.And("I add and save new log line, from the table below, from the table below", ((string)(null)), table85);
#line 1083
 testRunner.And("I take a screenshot");
#line 1084
    testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Date Field 1",
                        "11 Feb 2000"});
            table86.AddRow(new string[] {
                        "Date Field 2",
                        "09 Mar 2000"});
            table86.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table86.AddRow(new string[] {
                        "Numeric Field 2",
                        "77"});
#line 1085
    testRunner.And("I add and save new log line, from the table below, from the table below", ((string)(null)), table86);
#line 1091
 testRunner.And("I take a screenshot");
#line 1092
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 1093
 testRunner.And("I open log line 2");
#line 1094
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1095
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1096
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1097
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"\"" +
                    "");
#line 1099
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 1100
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 1101
 testRunner.And("I verify \"Numeric Field 1\" field displays query opened with no require response");
#line 1102
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 1103
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table87.AddRow(new string[] {
                        "Numeric Field 1",
                        "202"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 1104
 testRunner.And("I enter data in CRF", ((string)(null)), table87);
#line 1110
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1111
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1112
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1113
 testRunner.And("I cancel the Query \"{message}\" on Field \"{fieldName}\"");
#line 1116
 testRunner.And("I cancel the queries on the second log line on \"Start Date\", \"End Date\", \"Numeric" +
                    " Field 1\" and \"Current Axis Number\" fields");
#line 1117
 testRunner.And("I save the CRF page");
#line 1118
 testRunner.And("I take a screenshot");
#line 1120
 testRunner.And("I open log line 1");
#line 1121
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 1122
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 1123
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 1124
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 1127
 testRunner.And("I verify the queries did not fire on the second log line on \"Start Date\", \"End Da" +
                    "te\", \"Numeric Field 1\" and \"Current Axis Number\" fields");
#line 1128
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table88.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table88.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table88.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 1129
 testRunner.And("I enter data in CRF", ((string)(null)), table88);
#line 1135
 testRunner.And("I save the CRF page");
#line 1136
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1137
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1138
 testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1139
    testRunner.And("I verify Query with message \"\" is displayed on Field \"\"");
#line 1141
 testRunner.And("I verify the new queries did fire on the second log line on \"Start Date\", \"End Da" +
                    "te\", \"Numeric Field 1\" and \"Current Axis Number\" fields");
#line 1142
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.4",
                        "Draft"});
#line 1147
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1149
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 1150
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table89);
#line 1156
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
