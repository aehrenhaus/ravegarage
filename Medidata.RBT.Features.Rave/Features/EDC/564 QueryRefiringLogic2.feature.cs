// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _2Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564 QueryRefiringLogic2.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "2", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "2")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._2Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "CDM1",
                        "Edit Check Site 2",
                        "20001"});
#line 14
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line 18
 testRunner.And("Draft \"Draft 2\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 19
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 2\" in Environment \"Prod\"");
#line 20
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.1",
                        "Draft"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 29
    testRunner.Given("I create a Subject", ((string)(null)), table2);
#line 33
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 34
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line 40
 testRunner.And("I take a screenshot");
#line 41
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table4.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table4.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 42
    testRunner.And("I enter data in CRF and save", ((string)(null)), table4);
#line 48
 testRunner.And("I open log line 1");
#line 49
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 50
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 51
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 52
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line 56
 testRunner.And("I open log line 1");
#line 57
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 58
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 59
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 61
 testRunner.When("I enter data in CRF", ((string)(null)), table6);
#line 65
 testRunner.And("I save the CRF page");
#line 66
 testRunner.And("I open log line 1");
#line 67
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 68
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 69
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.2",
                        "Draft"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 77
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 78
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table7);
#line 82
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.3",
                        "Draft"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 90
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 91
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 92
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table8.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table8.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 93
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table8);
#line 99
 testRunner.And("I open log line 2");
#line 100
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 101
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 102
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 103
 testRunner.And("I enter data in CRF and save", ((string)(null)), table9);
#line 107
 testRunner.And("I open log line 2");
#line 108
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 109
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 110
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 112
 testRunner.When("I enter data in CRF and save", ((string)(null)), table10);
#line 116
 testRunner.And("I open log line 2");
#line 117
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 118
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 119
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.4",
                        "Draft"});
#line 125
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 127
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 128
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table11);
#line 132
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_2.2.1 Verifies query firing between cross folders with no require response and no require manual close. Cross Folders: Standard form to log form, Folder ""Screening"" enter and save data on form ""Informed Consent"", Folder ""Week 1"" enter and save data on form ""Concomitant Medications"".")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_1VerifiesQueryFiringBetweenCrossFoldersWithNoRequireResponseAndNoRequireManualClose_CrossFoldersStandardFormToLogFormFolderScreeningEnterAndSaveDataOnFormInformedConsentFolderWeek1EnterAndSaveDataOnFormConcomitantMedications_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_2.2.1 Verifies query firing between cross folders with no require response and no require manual close. Cross Folders: Standard form to log form, Folder ""Screening"" enter and save data on form ""Informed Consent"", Folder ""Week 1"" enter and save data on form ""Concomitant Medications"".", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.1",
                        "Draft"});
#line 138
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 140
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table12.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 141
    testRunner.And("I create a Subject", ((string)(null)), table12);
#line 145
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 146
 testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 152
 testRunner.And("I take a screenshot");
#line 153
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table14.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 154
    testRunner.And("I enter data in CRF and save", ((string)(null)), table14);
#line 160
 testRunner.And("I open log line 1");
#line 161
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 162
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 163
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 164
 testRunner.And("I enter data in CRF and save", ((string)(null)), table15);
#line 169
 testRunner.And("I open log line 1");
#line 170
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 171
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 172
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table16.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 174
 testRunner.When("I enter data in CRF and save", ((string)(null)), table16);
#line 179
 testRunner.And("I open log line 1");
#line 180
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is displayed on Field \"Start Date\"");
#line 181
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 182
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.2",
                        "Draft"});
#line 188
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 190
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table17.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table17.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 191
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table17);
#line 195
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.3",
                        "Draft"});
#line 201
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 203
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 204
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 205
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 206
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table18);
#line 212
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 213
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 214
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 215
 testRunner.And("I enter data in CRF and save", ((string)(null)), table19);
#line 220
 testRunner.And("I open log line 2");
#line 221
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 222
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 223
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table20.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 225
 testRunner.When("I enter data in CRF and save", ((string)(null)), table20);
#line 230
 testRunner.And("I open log line 2");
#line 231
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is displayed on Field \"Start Date\"");
#line 232
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 233
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.4",
                        "Draft"});
#line 239
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 241
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table21.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table21.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 242
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table21);
#line 246
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
            "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_1OnACrossFormsLogFormToStandardFormFolderWeek1EnterAndSaveDataOnFormsConcomitantMedicationsAndInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
                    "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.1",
                        "Draft"});
#line 252
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 254
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table22.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 255
    testRunner.And("I create a Subject", ((string)(null)), table22);
#line 259
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table23.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 260
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line 266
 testRunner.And("I open log line 1");
#line 267
 testRunner.And("I verify Query with message \"Start Date can not be greater than End Date.\" withou" +
                    "t Requires Response is displayed on Field \"End Date\"");
#line 268
 testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" without Requires Response is displayed on Field \"C" +
                    "urrent Axis Number\"");
#line 269
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 270
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 274
 testRunner.And("I open log line 1");
#line 275
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 276
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 277
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table25.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 279
 testRunner.When("I enter data in CRF and save", ((string)(null)), table25);
#line 283
 testRunner.And("I open log line 1");
#line 284
 testRunner.Then("I verify Query with message \"Start Date can not be greater than End Date.\" is dis" +
                    "played on Field \"End Date\"");
#line 285
    testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" is displayed on Field \"Current Axis Number\"");
#line 286
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.2",
                        "Draft"});
#line 292
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 294
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 295
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table26);
#line 299
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.3",
                        "Draft"});
#line 305
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 307
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 308
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 309
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table27.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 310
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table27);
#line 316
 testRunner.And("I verify Query with message \"Start Date can not be greater than End Date.\" withou" +
                    "t Requires Response is displayed on Field \"End Date\"");
#line 317
 testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" without Requires Response is displayed on Field \"C" +
                    "urrent Axis Number\"");
#line 318
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 319
 testRunner.And("I enter data in CRF and save", ((string)(null)), table28);
#line 323
 testRunner.And("I open log line 2");
#line 324
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 325
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 326
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table29.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 328
 testRunner.When("I enter data in CRF and save", ((string)(null)), table29);
#line 332
 testRunner.And("I open log line 2");
#line 333
 testRunner.Then("I verify Query with message \"Start Date can not be greater than End Date.\" is dis" +
                    "played on Field \"End Date\"");
#line 334
    testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" is displayed on Field \"Current Axis Number\"");
#line 335
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.4",
                        "Draft"});
#line 341
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 343
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 344
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table30);
#line 348
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.5",
                        "Draft"});
#line 353
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 355
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 356
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 357
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table31.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table31.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 358
    testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 364
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date.\" without Requires Response is displayed on Field \"End Date\"");
#line 365
 testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" without Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 366
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 367
 testRunner.And("I enter data in CRF and save", ((string)(null)), table32);
#line 371
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 372
 testRunner.And("I verify Field \"Current Distribution Number\" has NO Query");
#line 373
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table33.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 375
    testRunner.When("I enter data in CRF and save", ((string)(null)), table33);
#line 379
 testRunner.And("I save the CRF page");
#line 380
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date.\" is displayed on Field \"End Date\"");
#line 381
    testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" is displayed on Field \"Current Distribution " +
                    "Number\"");
#line 382
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.6",
                        "Draft"});
#line 388
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 390
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table34.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table34.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 391
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table34);
#line 395
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.1 Verifies query firing between cross forms in different folder with no re" +
            "quire response and no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_1VerifiesQueryFiringBetweenCrossFormsInDifferentFolderWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.1 Verifies query firing between cross forms in different folder with no re" +
                    "quire response and no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.1",
                        "Draft"});
#line 401
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 405
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table35.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 406
    testRunner.And("I create a Subject", ((string)(null)), table35);
#line 410
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table36.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 411
 testRunner.And("I enter data in CRF and save", ((string)(null)), table36);
#line 417
 testRunner.And("I take a screenshot");
#line 418
 testRunner.And("I select Form \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table37.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 419
    testRunner.And("I enter data in CRF and save", ((string)(null)), table37);
#line 425
 testRunner.And("I take a screenshot");
#line 426
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 427
 testRunner.And("I open log line 1");
#line 428
 testRunner.And("I verify Query with message \"Date can not be less than.\" without Requires Respons" +
                    "e is displayed on Field \"Start Date\"");
#line 429
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" witho" +
                    "ut Requires Response is displayed on Field \"End Date\"");
#line 430
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" without Requires Response is displayed on F" +
                    "ield \"Original Axis Number\"");
#line 431
 testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " without Requires Response is displayed on Field \"Current Axis Number\"");
#line 432
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 433
 testRunner.And("I enter data in CRF and save", ((string)(null)), table38);
#line 439
 testRunner.And("I open log line 1");
#line 440
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 441
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 442
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 443
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 444
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table39.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table39.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table39.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 446
 testRunner.When("I enter data in CRF and save", ((string)(null)), table39);
#line 452
 testRunner.And("I open log line 1");
#line 453
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 454
    testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 455
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number" +
                    "\"");
#line 456
    testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " is displayed on Field \"Current Axis Number\"");
#line 457
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.2",
                        "Draft"});
#line 463
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 465
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 466
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table40);
#line 472
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.3",
                        "Draft"});
#line 478
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 480
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 481
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 482
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table41.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table41.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 483
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table41);
#line 489
 testRunner.And("I take a screenshot");
#line 490
    testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table42.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 491
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table42);
#line 497
 testRunner.And("I take a screenshot");
#line 498
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 499
 testRunner.And("I open log line 2");
#line 500
 testRunner.And("I verify Query with message \"Date can not be less than.\" without Requires Respons" +
                    "e is displayed on Field \"Start Date\"");
#line 501
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" witho" +
                    "ut Requires Response is displayed on Field \"End Date\"");
#line 502
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" without Requires Response is displayed on F" +
                    "ield \"Original Axis Number\"");
#line 503
 testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " without Requires Response is displayed on Field \"Current Axis Number\"");
#line 504
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table43.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 505
    testRunner.And("I enter data in CRF and save", ((string)(null)), table43);
#line 511
 testRunner.And("I open log line 2");
#line 512
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 513
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 514
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 515
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 516
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table44.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table44.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table44.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table44.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 518
 testRunner.When("I enter data in CRF and save", ((string)(null)), table44);
#line 524
 testRunner.And("I open log line 2");
#line 525
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 526
    testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 527
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number" +
                    "\"");
#line 528
    testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " is displayed on Field \"Current Axis Number\"");
#line 529
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.4",
                        "Draft"});
#line 535
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 537
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 538
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table45);
#line 544
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.1  Verifies query firing between cross forms with no require response and " +
            "no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.1  Verifies query firing between cross forms with no require response and " +
                    "no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.1",
                        "Draft"});
#line 552
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 556
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table46.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 557
    testRunner.And("I create a Subject", ((string)(null)), table46);
#line 561
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table47.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 562
 testRunner.And("I enter data in CRF and save", ((string)(null)), table47);
#line 568
 testRunner.And("I take a screenshot");
#line 569
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table48.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table48.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table48.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 570
    testRunner.And("I enter data in CRF and save", ((string)(null)), table48);
#line 576
 testRunner.And("I open log line 1");
#line 577
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 578
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 579
 testRunner.And("I take a screenshot");
#line 580
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 581
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 582
 testRunner.And("I save the CRF page");
#line 583
 testRunner.And("I take a screenshot");
#line 584
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table49.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 585
 testRunner.And("I enter data in CRF and save", ((string)(null)), table49);
#line 589
 testRunner.And("I open log line 1");
#line 590
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 591
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 592
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table50.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 594
 testRunner.When("I enter data in CRF and save", ((string)(null)), table50);
#line 598
 testRunner.And("I open log line 1");
#line 599
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 600
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 601
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.2",
                        "Draft"});
#line 607
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 609
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table51.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table51.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 610
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table51);
#line 614
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.3",
                        "Draft"});
#line 620
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 622
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 623
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 624
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table52.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 625
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table52);
#line 631
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" without Requires Response is displayed on Field \"Start Date\"");
#line 632
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" without Requires Resp" +
                    "onse is displayed on Field \"Current Axis Number\"");
#line 633
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 634
 testRunner.And("I enter data in CRF", ((string)(null)), table53);
#line 638
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 639
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 640
 testRunner.And("I save the CRF page");
#line 641
 testRunner.And("I take a screenshot");
#line 642
 testRunner.And("I open log line 2");
#line 643
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 644
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 645
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table54.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table54.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 647
 testRunner.When("I enter data in CRF and save", ((string)(null)), table54);
#line 651
 testRunner.And("I open log line 2");
#line 652
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 653
    testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 654
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.4",
                        "Draft"});
#line 660
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 662
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table55.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table55.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 663
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table55);
#line 667
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.1", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.1",
                        "Draft"});
#line 673
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 677
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table56.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 678
    testRunner.And("I create a Subject", ((string)(null)), table56);
#line 682
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table57.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table57.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 683
 testRunner.And("I enter data in CRF and save", ((string)(null)), table57);
#line 689
 testRunner.And("I take a screenshot");
#line 690
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table58.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table58.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 691
    testRunner.And("I enter data in CRF and save", ((string)(null)), table58);
#line 697
 testRunner.And("I open log line 1");
#line 698
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 699
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 700
 testRunner.And("I take a screenshot");
#line 701
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' can not be greater than Start " +
                    "Date.\" on Field \"Start Date\"");
#line 702
 testRunner.And("I cancel the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\"");
#line 703
 testRunner.And("I save the CRF page");
#line 704
 testRunner.And("I take a screenshot");
#line 705
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table59.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table59.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table59.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 706
 testRunner.And("I enter data in CRF and save", ((string)(null)), table59);
#line 711
 testRunner.And("I open log line 1");
#line 712
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 713
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 714
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table60.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table60.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table60.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 716
 testRunner.When("I enter data in CRF", ((string)(null)), table60);
#line 721
 testRunner.And("I save the CRF page");
#line 722
 testRunner.And("I open log line 1");
#line 723
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is not displayed on Field \"Start Date\"");
#line 724
    testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is not displayed on Field \"Current Axis Number\"");
#line 725
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.2",
                        "Draft"});
#line 731
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 733
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table61.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table61.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 734
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table61);
#line 738
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.3",
                        "Draft"});
#line 744
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 746
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 747
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 748
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table62.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table62.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 749
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table62);
#line 755
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" without Requires Response is displayed on Field \"Start Date\"");
#line 756
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" without Requires Response is displayed on Field \"Current Axis Num" +
                    "ber\"");
#line 757
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table63.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table63.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 758
 testRunner.And("I enter data in CRF", ((string)(null)), table63);
#line 763
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' can not be greater than Start " +
                    "Date.\" on Field \"Start Date\"");
#line 764
 testRunner.And("I cancel the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\"");
#line 765
 testRunner.And("I save the CRF page");
#line 766
 testRunner.And("I take a screenshot");
#line 767
 testRunner.And("I open log line 2");
#line 768
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 769
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 770
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table64.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table64.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 771
 testRunner.And("I enter data in CRF and save", ((string)(null)), table64);
#line 776
 testRunner.And("I open log line 2");
#line 777
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an Start Date.\" is displayed on Field \"Start Date\"");
#line 778
    testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 779
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.4",
                        "Draft"});
#line 785
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 787
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table65.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than Start Date.",
                        "{DateTime}"});
            table65.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 788
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table65);
#line 792
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
            "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_1OnACrossFormsLogFormToStandardFormFolderWeek1EnterAndSaveDataOnFormsConcomitantMedicationsAndInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
                    "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.1",
                        "Draft"});
#line 798
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 800
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table66.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table66.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 801
    testRunner.And("I create a Subject", ((string)(null)), table66);
#line 805
 testRunner.And("I select Folder \"Week 1\"");
#line 806
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 807
 testRunner.And("I enter data in CRF and save", ((string)(null)), table67);
#line 813
 testRunner.And("I open log line 1");
#line 814
 testRunner.And("I verify Query with message \"Start Date can not be greater than End Date.\" withou" +
                    "t Requires Response is displayed on Field \"End Date\"");
#line 815
 testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" without Requires Response is displayed on Field \"C" +
                    "urrent Axis Number\"");
#line 816
 testRunner.And("I take a screenshot");
#line 817
 testRunner.And("I cancel the Query \"Start Date can not be greater than End Date.\" on Field \"End D" +
                    "ate\"");
#line 818
 testRunner.And("I cancel the Query \"\'Original Axis Number\' is Less Than \'Current Axis Number\' on " +
                    "first Number field.\" on Field \"Current Axis Number\"");
#line 819
 testRunner.And("I save the CRF page");
#line 820
 testRunner.And("I take a screenshot");
#line 821
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 822
 testRunner.And("I enter data in CRF and save", ((string)(null)), table68);
#line 826
 testRunner.And("I open log line 1");
#line 827
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 828
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 829
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table69.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table69.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 831
 testRunner.When("I enter data in CRF and save", ((string)(null)), table69);
#line 835
 testRunner.And("I open log line 1");
#line 836
 testRunner.Then("I verify Query with message \"Start Date can not be greater than End Date.\" is not" +
                    " displayed on Field \"End Date\"");
#line 837
    testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" is not displayed on Field \"Current Axis Number\"");
#line 838
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.2",
                        "Draft"});
#line 844
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 846
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table70.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table70.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 847
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table70);
#line 851
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.3",
                        "Draft"});
#line 857
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 859
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 860
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 861
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table71.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table71.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 862
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table71);
#line 868
 testRunner.And("I verify Query with message \"Start Date can not be greater than End Date.\" withou" +
                    "t Requires Response is displayed on Field \"End Date\"");
#line 869
 testRunner.And("I verify Query with message \"\" without Requires Response is displayed on Field \"C" +
                    "urrent Axis Number\"");
#line 870
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 871
 testRunner.And("I enter data in CRF", ((string)(null)), table72);
#line 875
 testRunner.And("I cancel the Query \"Start Date can not be greater than End Date.\" on Field \"End D" +
                    "ate\"");
#line 876
 testRunner.And("I cancel the Query \"\'Original Axis Number\' is Less Than \'Current Axis Number\' on " +
                    "first Number field.\" on Field \"Current Axis Number\"");
#line 877
 testRunner.And("I save the CRF page");
#line 878
 testRunner.And("I take a screenshot");
#line 879
 testRunner.And("I open log line 2");
#line 880
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 881
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 882
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 883
 testRunner.When("I enter data in CRF and save", ((string)(null)), table73);
#line 887
 testRunner.And("I open log line 2");
#line 888
 testRunner.Then("I verify Query with message \"Start Date can not be greater than End Date.\" is dis" +
                    "played on Field \"End Date\"");
#line 889
    testRunner.And("I verify Query with message \"\'Original Axis Number\' is Less Than \'Current Axis Nu" +
                    "mber\' on first Number field.\" is displayed on Field \"Current Axis Number\"");
#line 890
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.4",
                        "Draft"});
#line 897
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 899
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Start Date can not be greater than End Date.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field.",
                        "{DateTime}"});
#line 900
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 904
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.5", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.5",
                        "Draft"});
#line 910
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 912
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 913
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 914
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table75.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table75.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table75.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 915
 testRunner.And("I enter data in CRF and save", ((string)(null)), table75);
#line 921
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date.\" without Requires Response is displayed on Field \"End Date\"");
#line 922
 testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" without Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 923
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 924
 testRunner.And("I enter data in CRF", ((string)(null)), table76);
#line 928
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is not equal to Current Date.\"" +
                    " on Field \"End Date\"");
#line 929
 testRunner.And("I cancel the Query \"\'Original Distribution Number\' and \'Current Distribution Numb" +
                    "er\' fields are not equal.\" on Field \"Current Distribution Number\"");
#line 930
 testRunner.And("I save the CRF page");
#line 931
 testRunner.And("I take a screenshot");
#line 932
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 933
 testRunner.And("I verify Field \"Current Distribution Number\" has NO Query");
#line 934
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 936
    testRunner.When("I enter data in CRF", ((string)(null)), table77);
#line 940
 testRunner.And("I save the CRF page");
#line 941
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date.\" is displayed on Field \"End Date\"");
#line 942
    testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" is displayed on Field \"Current Distribution " +
                    "Number\"");
#line 943
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.6", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.6",
                        "Draft"});
#line 949
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 951
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table78.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is not equal to Current Date.",
                        "{DateTime}"});
            table78.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "\'Original Distribution Number\' and \'Current Distribution Number\' fields are not e" +
                            "qual.",
                        "{DateTime}"});
#line 952
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table78);
#line 956
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.1 Verifies query firing between cross forms with no require response and n" +
            "o require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.1 Verifies query firing between cross forms with no require response and n" +
                    "o require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.1",
                        "Draft"});
#line 962
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 966
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table79.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table79.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 967
    testRunner.And("I create a Subject", ((string)(null)), table79);
#line 971
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table80.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table80.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table80.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 972
 testRunner.And("I enter data in CRF and save", ((string)(null)), table80);
#line 978
 testRunner.And("I take a screenshot");
#line 979
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table81.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table81.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table81.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 980
    testRunner.And("I enter data in CRF and save", ((string)(null)), table81);
#line 986
 testRunner.And("I take a screenshot");
#line 987
    testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 988
 testRunner.And("I open log line 1");
#line 989
 testRunner.And("I verify Query with message \"Date can not be less than.\" without Requires Respons" +
                    "e is displayed on Field \"Start Date\"");
#line 990
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" witho" +
                    "ut Requires Response is displayed on Field \"End Date\"");
#line 991
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" without Requires Response is displayed on F" +
                    "ield \"Original Axis Number\"");
#line 992
 testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " without Requires Response is displayed on Field \"Current Axis Number\"");
#line 993
 testRunner.And("I take a screenshot");
#line 994
 testRunner.And("I cancel the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 995
 testRunner.And("I cancel the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\"");
#line 996
 testRunner.And("I cancel the Query \"\'Current Distribution Number\' is greater than or Equal to \'Cu" +
                    "rrent Axis Number\' on Log.\" on Field \"Original Axis Number\"");
#line 997
 testRunner.And("I cancel the Query \"\'AE Number\' and \'Current Axis Number\' cannot equal.\" on Field" +
                    " \"Current Axis Number\"");
#line 998
 testRunner.And("I save the CRF page");
#line 999
 testRunner.And("I take a screenshot");
#line 1000
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table82.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 1001
 testRunner.And("I enter data in CRF and save", ((string)(null)), table82);
#line 1007
 testRunner.And("I open log line 1");
#line 1008
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 1009
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 1010
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 1011
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 1012
 testRunner.And("I take a screenshot");
#line 1013
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table83.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table83.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 1014
 testRunner.And("I enter data in CRF and save", ((string)(null)), table83);
#line 1020
 testRunner.And("I open log line 1");
#line 1021
 testRunner.And("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 1022
    testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 1023
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" is not displayed on Field \"Original Axis Nu" +
                    "mber\"");
#line 1024
    testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " is not displayed on Field \"Current Axis Number\"");
#line 1025
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.2",
                        "Draft"});
#line 1031
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1033
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 1034
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table84);
#line 1040
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.3",
                        "Draft"});
#line 1046
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1048
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line 1049
    testRunner.And("I select a Subject \"SUB{Var(num1)}\"");
#line 1050
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 1051
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table85.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table85.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table85.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table85.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 1052
 testRunner.And("I enter data in CRF and save", ((string)(null)), table85);
#line 1058
 testRunner.And("I take a screenshot");
#line 1059
    testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line 1060
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table86.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table86.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table86.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 1061
 testRunner.And("I enter data in CRF and save", ((string)(null)), table86);
#line 1067
 testRunner.And("I take a screenshot");
#line 1068
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 1069
 testRunner.And("I open log line 2");
#line 1070
 testRunner.And("I verify Query with message \"Date can not be less than.\" without Requires Respons" +
                    "e is displayed on Field \"Start Date\"");
#line 1071
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" witho" +
                    "ut Requires Response is displayed on Field \"End Date\"");
#line 1072
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" without Requires Response is displayed on F" +
                    "ield \"Original Axis Number\"");
#line 1073
 testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " without Requires Response is displayed on Field \"Current Axis Number\"");
#line 1074
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table87.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 1075
 testRunner.And("I enter data in CRF", ((string)(null)), table87);
#line 1081
 testRunner.And("I cancel the Query \"Date can not be less than.\" on Field \"Start Date\"");
#line 1082
 testRunner.And("I cancel the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\"");
#line 1083
 testRunner.And("I cancel the Query \"\'Current Distribution Number\' is greater than or Equal to \'Cu" +
                    "rrent Axis Number\' on Log.\" on Field \"Original Axis Number\"");
#line 1084
 testRunner.And("I cancel the Query \"\'AE Number\' and \'Current Axis Number\' cannot equal.\" on Field" +
                    " \"Current Axis Number\"");
#line 1085
 testRunner.And("I save the CRF page");
#line 1086
 testRunner.And("I open log line 2");
#line 1087
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 1088
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 1089
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 1090
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 1091
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table88.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table88.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table88.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 1092
 testRunner.And("I enter data in CRF and save", ((string)(null)), table88);
#line 1098
 testRunner.And("I open log line 2");
#line 1099
 testRunner.And("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 1100
    testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 1101
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is greater than or Equ" +
                    "al to \'Current Axis Number\' on Log.\" is displayed on Field \"Original Axis Number" +
                    "\"");
#line 1102
    testRunner.And("I verify Query with message \"\'AE Number\' and \'Current Axis Number\' cannot equal.\"" +
                    " is displayed on Field \"Current Axis Number\"");
#line 1103
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.4",
                        "Draft"});
#line 1109
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1111
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 1112
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table89);
#line 1118
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
