// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _2Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564 QueryRefiringLogic2.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "2", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "2")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._2Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "cdm1",
                        "Edit Check Site 2",
                        "20001"});
#line 14
 testRunner.And("user \"User\"  has study \"Study\" has role \"Role\" has site \"Site\" in database \"<EDC>" +
                    "\", from the table below", ((string)(null)), table1);
#line 17
    testRunner.And("role \"cdm1\" has Query actions");
#line 18
 testRunner.And("Draft \"Draft 2\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 19
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 2\" in Environment \"Prod\"");
#line 20
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 2\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
            "ed and closed with the same data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_1OnACrossFormsStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.1 On a Cross Forms Standard form to log form, when a query has been answer" +
                    "ed and closed with the same data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.1",
                        "Draft"});
#line 26
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 29
    testRunner.And("I create a Subject", ((string)(null)), table2);
#line 33
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 34
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line 40
 testRunner.And("I take a screenshot");
#line 41
 testRunner.And("I select Form \"Concomitant Medications\" in folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table4.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table4.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table4.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 42
    testRunner.And("I enter data in CRF and save", ((string)(null)), table4);
#line 48
 testRunner.And("I open log line 1");
#line 49
 testRunner.And("I verify no Requires Response Query with message \"\'Date Informed Consent Signed\' " +
                    "is greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 50
 testRunner.And("I verify no Requires Response Query with message \"Informed Consent \'Current Distr" +
                    "ibution Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" " +
                    "is displayed on Field \"Start DateCurrent Axis Number\"");
#line 51
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 52
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line 56
 testRunner.And("I open log line 1");
#line 57
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 58
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 59
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 61
 testRunner.When("I enter data in CRF", ((string)(null)), table6);
#line 65
 testRunner.And("I save the CRF page");
#line 66
 testRunner.And("I open log line 1");
#line 67
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Start Date\"");
#line 68
    testRunner.And("I verify Query with message \"\" is displayed on Field \"Current Axis Number\"");
#line 69
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.2",
                        "Draft"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 77
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 78
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table7);
#line 82
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.3",
                        "Draft"});
#line 88
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 90
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table8.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table8.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 91
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table8);
#line 97
 testRunner.And("I open log line 2");
#line 98
 testRunner.And("I verify no Requires Response Query with message \"\'Date Informed Consent Signed\' " +
                    "is greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 99
 testRunner.And("I verify no Requires Response Query with message \"Informed Consent \'Current Distr" +
                    "ibution Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" " +
                    "is displayed on Field \"Start DateCurrent Axis Number\"");
#line 100
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 101
 testRunner.And("I enter data in CRF and save", ((string)(null)), table9);
#line 105
 testRunner.And("I open log line 2");
#line 106
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 107
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 108
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 109
 testRunner.And("I enter data in CRF and save", ((string)(null)), table10);
#line 113
 testRunner.And("I open log line 2");
#line 114
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Start Date\"");
#line 115
    testRunner.And("I verify Query with message \"\" is displayed on Field \"Current Axis Number\"");
#line 116
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.1.4",
                        "Draft"});
#line 122
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 124
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub201",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 125
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table11);
#line 129
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_2.2.1 Verifies query firing between cross folders with no require response and no require manual close. Cross Folders: Standard form to log form, Folder ""Screening"" enter and save data on form ""Informed Consent"", Folder ""Week 1"" enter and save data on form ""Concomitant Medications"".")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_1VerifiesQueryFiringBetweenCrossFoldersWithNoRequireResponseAndNoRequireManualClose_CrossFoldersStandardFormToLogFormFolderScreeningEnterAndSaveDataOnFormInformedConsentFolderWeek1EnterAndSaveDataOnFormConcomitantMedications_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_2.2.1 Verifies query firing between cross folders with no require response and no require manual close. Cross Folders: Standard form to log form, Folder ""Screening"" enter and save data on form ""Informed Consent"", Folder ""Week 1"" enter and save data on form ""Concomitant Medications"".", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.1",
                        "Draft"});
#line 135
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table12.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 137
    testRunner.And("I create a Subject", ((string)(null)), table12);
#line 141
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 142
 testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 148
 testRunner.And("I take a screenshot");
#line 149
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table14.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 150
    testRunner.And("I enter data in CRF and save", ((string)(null)), table14);
#line 156
 testRunner.And("I open log line 1");
#line 157
 testRunner.And("I verify no Requires Response Query with message \"\'Date Informed Consent Signed\' " +
                    "is greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 158
 testRunner.And("I verify no Requires Response Query with message \"Informed Consent \'Current Distr" +
                    "ibution Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" " +
                    "is displayed on Field \"Start DateCurrent Axis Number\"");
#line 159
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 160
 testRunner.And("I enter data in CRF and save", ((string)(null)), table15);
#line 165
 testRunner.And("I open log line 1");
#line 166
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 167
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 168
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table16.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 169
 testRunner.When("I enter data in CRF and save", ((string)(null)), table16);
#line 174
 testRunner.And("I open log line 1");
#line 175
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 176
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 177
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.2",
                        "Draft"});
#line 183
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 185
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table17.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table17.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 186
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table17);
#line 190
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.3",
                        "Draft"});
#line 196
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 198
  testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 199
 testRunner.And("I select Form \"Concomitant Medications\" in folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 200
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table18);
#line 206
 testRunner.And("I verify no Requires Response Query with message \"\'Date Informed Consent Signed\' " +
                    "is greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 207
 testRunner.And("I verify no Requires Response Query with message \"Informed Consent \'Current Distr" +
                    "ibution Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" " +
                    "is displayed on Field \"Start DateCurrent Axis Number\"");
#line 208
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 209
 testRunner.And("I enter data in CRF and save", ((string)(null)), table19);
#line 214
 testRunner.And("I open log line 2");
#line 215
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 216
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 217
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table20.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 218
 testRunner.When("I enter data in CRF and save", ((string)(null)), table20);
#line 223
 testRunner.And("I open log line 2");
#line 224
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 225
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 226
 testRunner.And("I take a screenshot");
#line 227
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.2.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_2_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.2.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.2.4",
                        "Draft"});
#line 233
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 235
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table21.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table21.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub202",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 236
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table21);
#line 240
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
            "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_1OnACrossFormsLogFormToStandardFormFolderWeek1EnterAndSaveDataOnFormsConcomitantMedicationsAndInformedConsent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.1 On a Cross Forms log form to Standard form, Folder \"Week 1\" enter and sa" +
                    "ve data on forms \"Concomitant Medications\" and \"Informed Consent\"", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.1",
                        "Draft"});
#line 246
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table22.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 248
    testRunner.And("I create a Subject", ((string)(null)), table22);
#line 252
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table23.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 253
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line 259
 testRunner.And("I open log line 1");
#line 260
 testRunner.And("I verify no Requires Response Query with message \"\" is displayed on Field \"End Da" +
                    "te\"");
#line 261
 testRunner.And("I verify no Requires Response Query with message \"\" is displayed on Field \"Curren" +
                    "t Axis Number\"");
#line 262
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 263
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 267
 testRunner.And("I open log line 1");
#line 268
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 269
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 270
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table25.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 271
 testRunner.And("I enter data in CRF and save", ((string)(null)), table25);
#line 275
 testRunner.And("I open log line 1");
#line 276
 testRunner.And("I verify Query with message \"\" is displayed on Field \"End Date\"");
#line 277
    testRunner.And("I verify Query with message \"\" is displayed on Field \"Current Axis Number\"");
#line 278
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.2",
                        "Draft"});
#line 284
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 286
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than Date Field 2.",
                        "{DateTime}"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 287
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table26);
#line 291
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.3",
                        "Draft"});
#line 297
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 299
 testRunner.And("I select a Subject \"sub{MaxSubjectNum(Edit Check Study 3,prod,Subject Number)}\"");
#line 300
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table27.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table27.AddRow(new string[] {
                        "Original Axis Number",
                        "1999"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 301
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table27);
#line 307
 testRunner.And("I verify no Requires Response Query with message \"\" is displayed on Field \"End Da" +
                    "te\"");
#line 308
 testRunner.And("I verify no Requires Response Query with message \"\" is displayed on Field \"Curren" +
                    "t Axis Number\"");
#line 309
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 310
 testRunner.And("I enter data in CRF abd save", ((string)(null)), table28);
#line 314
 testRunner.And("I open log line 2");
#line 315
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 316
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 317
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table29.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 318
 testRunner.And("I enter data in CRF and save", ((string)(null)), table29);
#line 322
 testRunner.And("I open log line 2");
#line 323
 testRunner.And("I verify Query with message \"\" is displayed on Field \"End Date\"");
#line 324
    testRunner.And("I verify Query with message \"\" is displayed on Field \"Current Axis Number\"");
#line 325
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.4",
                        "Draft"});
#line 331
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 333
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than Date Field 2.",
                        "{DateTime}"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 334
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table30);
#line 338
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.5", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.5",
                        "Draft"});
#line 343
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 345
 testRunner.And("I select Form \"Informed Consent\" within folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table31.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table31.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table31.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 346
    testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 352
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 353
 testRunner.And("I verify \"Current Distribution Number\" field displays query opened with no requir" +
                    "e response");
#line 354
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table32.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 355
 testRunner.And("I enter data in CRF", ((string)(null)), table32);
#line 359
 testRunner.And("I save the CRF page");
#line 360
 testRunner.And("I verify the queries closed automatically on \"End Date\" and \"Current Distribution" +
                    " Number\" fields");
#line 361
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table33.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 362
    testRunner.And("I enter data in CRF", ((string)(null)), table33);
#line 366
 testRunner.And("I save the CRF page");
#line 367
 testRunner.And("I verify queries refire on \"End Date\" and \"Current Distribution Number\" fields");
#line 368
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.3.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_3_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.3.6", new string[] {
                        "release_564_Patch11",
                        "PB_2.3.6",
                        "Draft"});
#line 374
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 376
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table34.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table34.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub203",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 377
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table34);
#line 381
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.1 Verifies query firing between cross forms in different folder with no re" +
            "quire response and no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_1VerifiesQueryFiringBetweenCrossFormsInDifferentFolderWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.1 Verifies query firing between cross forms in different folder with no re" +
                    "quire response and no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.1",
                        "Draft"});
#line 387
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table35.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
#line 391
    testRunner.And("I create a Subject", ((string)(null)), table35);
#line 395
 testRunner.And("I select Folder \"Screening\"");
#line 396
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table36.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 397
 testRunner.And("I enter data in CRF and save", ((string)(null)), table36);
#line 403
 testRunner.And("I take a screenshot");
#line 404
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table37.AddRow(new string[] {
                        "Date Field 2",
                        "09 Feb 2000"});
            table37.AddRow(new string[] {
                        "Numeric Field 1",
                        "101"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 405
    testRunner.And("I enter data in CRF and save", ((string)(null)), table37);
#line 411
 testRunner.And("I take a screenshot");
#line 412
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 413
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 414
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 415
 testRunner.And("I verify \"Original Axis Number\" field displays query opened with no require respo" +
                    "nse");
#line 416
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 417
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table38.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 418
 testRunner.And("I enter data in CRF", ((string)(null)), table38);
#line 424
 testRunner.And("I save the CRF page");
#line 425
 testRunner.And("I verify the queries closed automatically on \"Start Date\", \"End Date\", \"Original " +
                    "Axis Number\" and \"Current Axis Number\" fields");
#line 426
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table39.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table39.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table39.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 427
 testRunner.And("I enter data in CRF", ((string)(null)), table39);
#line 433
 testRunner.And("I save the CRF page");
#line 434
 testRunner.And("I verify queries refire on \"Start Date\", \"End Date\", \"Numeric Field 1\" and \"Curre" +
                    "nt Axis Number\" fields");
#line 435
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.2",
                        "Draft"});
#line 441
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 443
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table40.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 444
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table40);
#line 450
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.3",
                        "Draft"});
#line 456
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 458
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table41.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table41.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table41.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 459
    testRunner.And("I add and save new log line, from the table below, from the table below", ((string)(null)), table41);
#line 465
 testRunner.And("I take a screenshot");
#line 466
    testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Date Field 1",
                        "11 Feb 2000"});
            table42.AddRow(new string[] {
                        "Date Field 2",
                        "09 Mar 2000"});
            table42.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table42.AddRow(new string[] {
                        "Numeric Field 2",
                        "77"});
#line 467
    testRunner.And("I add and save new log line, from the table below, from the table below", ((string)(null)), table42);
#line 473
 testRunner.And("I take a screenshot");
#line 474
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 475
 testRunner.And("I open log line 2");
#line 476
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 477
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 478
 testRunner.And("I verify \"Numeric Field 1\" field displays query opened with no require response");
#line 479
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 480
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table43.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table43.AddRow(new string[] {
                        "Numeric Field 1",
                        "202"});
            table43.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 481
    testRunner.And("I enter data in CRF", ((string)(null)), table43);
#line 487
 testRunner.And("I save the CRF page");
#line 488
 testRunner.And("I verify the queries closed automatically on the second log line on \"Start Date\"," +
                    " \"End Date\", \"Numeric Field 1\" and \"Current Axis Number\" fields");
#line 489
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table44.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table44.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table44.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table44.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 490
 testRunner.And("I enter data in CRF", ((string)(null)), table44);
#line 496
 testRunner.And("I save the CRF page");
#line 497
 testRunner.And("I verify queries refire on the second log line on \"Start Date\", \"End Date\", \"Nume" +
                    "ric Field 1\" and \"Current Axis Number\" fields");
#line 498
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.4.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_4_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.4.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.4.4",
                        "Draft"});
#line 504
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 506
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table45.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub204",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 507
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table45);
#line 513
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.1  Verifies query firing between cross forms with no require response and " +
            "no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.1  Verifies query firing between cross forms with no require response and " +
                    "no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.1",
                        "Draft"});
#line 521
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table46.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table46.AddRow(new string[] {
                        "Subject Initials",
                        "sub205"});
#line 525
    testRunner.And("I create a Subject", ((string)(null)), table46);
#line 529
 testRunner.And("I select Folder \"Screening\"");
#line 530
 testRunner.And("I select Form \"Informed Consent\"");
#line 531
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table47.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table47.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table47.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 532
testRunner.And("I save the CRF page", ((string)(null)), table47);
#line 538
 testRunner.And("I take a screenshot");
#line 539
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line 540
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table48.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table48.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table48.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 541
testRunner.And("I save the CRF page", ((string)(null)), table48);
#line 547
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 548
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 549
 testRunner.And("I take a screenshot");
#line 550
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields.");
#line 551
 testRunner.And("I save the CRF page");
#line 552
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table49.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 553
 testRunner.And("I enter data in CRF", ((string)(null)), table49);
#line 557
 testRunner.And("I save the CRF page");
#line 558
    testRunner.And("I verify the queries did not fire on \"Start Date\" and \"Current Axis Number\" field" +
                    "s.");
#line 559
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table50.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 560
 testRunner.And("I enter data in CRF", ((string)(null)), table50);
#line 564
 testRunner.And("I save the CRF page");
#line 565
 testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"Current Axis Number\" f" +
                    "ields.");
#line 566
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.2",
                        "Draft"});
#line 572
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 574
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table51.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table51.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 575
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table51);
#line 579
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.3",
                        "Draft"});
#line 585
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 587
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table52.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table52.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table52.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 588
    testRunner.And("I enter data in CRF on a new log line and save and reopen\t    |Field             " +
                    "|Data        |", ((string)(null)), table52);
#line 593
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response on the" +
                    " second log line");
#line 594
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se on the second log line");
#line 595
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table53.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 596
 testRunner.And("I enter data in CRF", ((string)(null)), table53);
#line 600
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields.");
#line 601
 testRunner.And("I save the CRF page");
#line 602
 testRunner.And("I take a screenshot");
#line 603
 testRunner.And("I verify the queries did not fire on the second log line on \"Start Date\" and \"Cur" +
                    "rent Axis Number\" fields.");
#line 604
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table54.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table54.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 605
 testRunner.And("I enter data in CRF", ((string)(null)), table54);
#line 609
 testRunner.And("I save the CRF page");
#line 610
 testRunner.And("I verify that new queries did fire on the second log line on \"Start Date\" and \"Cu" +
                    "rrent Axis Number\" fields.");
#line 611
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.5.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_5_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.5.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.5.4",
                        "Draft"});
#line 617
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 619
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table55.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date Informed Consent Signed is greater. Please revise.",
                        "{DateTime}"});
            table55.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub205",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 620
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table55);
#line 624
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.1", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.1",
                        "Draft"});
#line 630
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table56.AddRow(new string[] {
                        "Subject Initials",
                        "sub206"});
#line 636
    testRunner.And("I create a Subject", ((string)(null)), table56);
#line 640
 testRunner.And("I select Folder \"Screening\"");
#line 641
 testRunner.And("I select Form \"Informed Consent\"");
#line 642
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table57.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table57.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table57.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 643
testRunner.And("I save the CRF page", ((string)(null)), table57);
#line 649
 testRunner.And("I take a screenshot");
#line 650
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Week 1\"");
#line 651
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table58.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table58.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table58.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 652
testRunner.And("I save the CRF page", ((string)(null)), table58);
#line 658
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 659
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 660
 testRunner.And("I take a screenshot");
#line 661
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields.");
#line 662
 testRunner.And("I save the CRF page");
#line 663
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table59.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table59.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table59.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 664
 testRunner.And("I enter data in CRF", ((string)(null)), table59);
#line 669
 testRunner.And("I save the CRF page");
#line 670
 testRunner.And("I verify the queries did not fire on \"Start Date\" and \"Current Axis Number\" field" +
                    "s.");
#line 671
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table60.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table60.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table60.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 672
 testRunner.And("I enter data in CRF", ((string)(null)), table60);
#line 677
 testRunner.And("I save the CRF page");
#line 678
    testRunner.And("I verify the new queries did not fire on \"Start Date\" and \"Current Axis Number\" f" +
                    "ields.");
#line 679
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.2",
                        "Draft"});
#line 685
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 687
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table61.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table61.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 688
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table61);
#line 692
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.3",
                        "Draft"});
#line 698
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 700
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table62.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table62.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table62.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 701
    testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table62);
#line 707
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response on the" +
                    " second log line");
#line 708
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se on the second log line");
#line 709
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table63.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table63.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 710
 testRunner.And("I enter data in CRF", ((string)(null)), table63);
#line 715
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields on the seco" +
                    "nd log line");
#line 716
 testRunner.And("I save the CRF page");
#line 717
 testRunner.And("I take a screenshot");
#line 718
    testRunner.And("I verify the queries did not fire on the second log line on \"Start Date\" and \"Cur" +
                    "rent Axis Number\" fields.");
#line 719
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table64.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table64.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 720
 testRunner.And("I enter data in CRF", ((string)(null)), table64);
#line 725
 testRunner.And("I save the CRF page");
#line 726
 testRunner.And("I verify the new queries did fire on the second log line on \"Start Date\" and \"Cur" +
                    "rent Axis Number\" fields.");
#line 727
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.6.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_6_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.6.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.6.4",
                        "Draft"});
#line 733
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 735
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table65.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table65.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub206",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 736
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table65);
#line 740
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.1  Verifies query firing between cross forms with no require response and " +
            "no require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.1  Verifies query firing between cross forms with no require response and " +
                    "no require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.1",
                        "Draft"});
#line 746
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table66.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table66.AddRow(new string[] {
                        "Subject Initials",
                        "sub207"});
#line 750
    testRunner.And("I create a Subject", ((string)(null)), table66);
#line 754
 testRunner.And("I select Folder \"Week 1\"");
#line 755
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 756
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table67.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table67.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table67.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 757
testRunner.And("I save the CRF page", ((string)(null)), table67);
#line 763
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 764
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 765
 testRunner.And("I take a screenshot");
#line 766
 testRunner.And("I cancel the queries on \"End Date\" and \"Current Axis Number\" fields");
#line 767
 testRunner.And("I save the CRF page");
#line 768
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table68.AddRow(new string[] {
                        "Current Axis Number",
                        "100"});
#line 769
 testRunner.And("I enter data in CRF", ((string)(null)), table68);
#line 773
 testRunner.And("I save the CRF page");
#line 774
 testRunner.And("I verify the queries did not fire on \"End Date\" and \"Current Axis Number\" fields");
#line 775
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table69.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table69.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 776
 testRunner.And("I enter data in CRF", ((string)(null)), table69);
#line 780
 testRunner.And("I save the CRF page");
#line 781
    testRunner.And("I verify the new queries did not fire on \"End Date\" and \"Current Axis Number\" fie" +
                    "lds");
#line 782
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.2",
                        "Draft"});
#line 788
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 790
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table70.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than Date Field 2.",
                        "{DateTime}"});
            table70.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "101",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 791
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table70);
#line 795
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.3",
                        "Draft"});
#line 801
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 803
 testRunner.And("I add a new log line to form \"Concomitant Medications\" within folder \"Week 1\"");
#line 804
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Start Date",
                        "15 Feb 2000"});
            table71.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table71.AddRow(new string[] {
                        "Numeric Field 1",
                        "1999"});
            table71.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 805
testRunner.And("I save the CRF page", ((string)(null)), table71);
#line 811
 testRunner.And("I verify \"End Date\" field displays query opened with no require response on the s" +
                    "econd log line");
#line 812
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se on the second log line");
#line 813
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "End Date",
                        "15 Feb 2000"});
            table72.AddRow(new string[] {
                        "Current Axis Number",
                        "1999"});
#line 814
 testRunner.And("I enter data in CRF", ((string)(null)), table72);
#line 818
 testRunner.And("I cancel the queries on the second log line on \"End Date\" and \"Current Axis Numbe" +
                    "r\" fields");
#line 819
 testRunner.And("I save the CRF page");
#line 820
 testRunner.And("I take a screenshot");
#line 821
 testRunner.And("I verify the queries did not fire on the second log line on \"End Date\" and \"Curre" +
                    "nt Axis Number\" fields");
#line 822
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "End Date",
                        "14 Feb 2000"});
            table73.AddRow(new string[] {
                        "Current Axis Number",
                        "2000"});
#line 823
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line 827
 testRunner.And("I save the CRF page");
#line 828
 testRunner.And("I verify the new queries did fire on the second log line on \"End Date\" and \"Curre" +
                    "nt Axis Number\" fields");
#line 829
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.4",
                        "Draft"});
#line 835
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 837
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table74.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "14 Feb 2000",
                        "*Greater Than Log same form",
                        "Marking Group 1",
                        "Date Field 1 can not be greater than Date Field 2.",
                        "{DateTime}"});
            table74.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "2000",
                        "*Is Less Than Log same form",
                        "Marking Group 1",
                        "Date is Less Than Date on first Number field.",
                        "{DateTime}"});
#line 838
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table74);
#line 842
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.5", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.5",
                        "Draft"});
#line 848
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 850
 testRunner.And("I select Form \"Informed Consent\" within folder \"Week 1\"");
#line 851
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table75.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table75.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table75.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 852
testRunner.And("I save the CRF page", ((string)(null)), table75);
#line 858
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 859
 testRunner.And("I verify \"Current Distribution Number\" field displays query opened with no requir" +
                    "e response");
#line 860
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table76.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 861
 testRunner.And("I enter data in CRF", ((string)(null)), table76);
#line 865
 testRunner.And("I cancel the queries on \"End Date\" and \"Current Distribution Number\" fields");
#line 866
 testRunner.And("I save the CRF page");
#line 867
 testRunner.And("I take a screenshot");
#line 868
 testRunner.And("I verify the new queries did not fire on \"End Date\" and \"Current Distribution Num" +
                    "ber\" fields");
#line 869
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table77.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 870
    testRunner.And("I enter data in CRF", ((string)(null)), table77);
#line 874
 testRunner.And("I save the CRF page");
#line 875
 testRunner.And("I verify the new queries did fire on \"End Date\" and \"Current Distribution Number\"" +
                    " fields");
#line 876
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.7.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_7_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.7.6", new string[] {
                        "release_564_Patch11",
                        "PB_2.7.6",
                        "Draft"});
#line 882
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 884
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table78.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table78.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub207",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 885
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table78);
#line 889
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.1 Verifies query firing between cross forms with no require response and n" +
            "o require manual close.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_1VerifiesQueryFiringBetweenCrossFormsWithNoRequireResponseAndNoRequireManualClose_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.1 Verifies query firing between cross forms with no require response and n" +
                    "o require manual close.", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.1",
                        "Draft"});
#line 895
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table79.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table79.AddRow(new string[] {
                        "Subject Initials",
                        "sub208"});
#line 899
    testRunner.And("I create a Subject", ((string)(null)), table79);
#line 903
 testRunner.And("I select Folder \"Screening\"");
#line 904
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 905
 testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table80.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table80.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table80.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 906
testRunner.And("I save the CRF page", ((string)(null)), table80);
#line 912
 testRunner.And("I take a screenshot");
#line 913
 testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line 914
    testRunner.And("I enter data in CRF");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table81.AddRow(new string[] {
                        "Date Field 2",
                        "09 Feb 2000"});
            table81.AddRow(new string[] {
                        "Numeric Field 1",
                        "101"});
            table81.AddRow(new string[] {
                        "Numeric Field 2",
                        "66"});
#line 915
testRunner.And("I save the CRF page", ((string)(null)), table81);
#line 921
 testRunner.And("I take a screenshot");
#line 922
    testRunner.And("I select Form \"Concomitant Medications\"");
#line 923
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 924
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 925
 testRunner.And("I verify \"Numeric Field 1\" field displays query opened with no require response");
#line 926
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 927
 testRunner.And("I take a screenshot");
#line 928
 testRunner.And("I cancel the queries on \"Start Date\", \"End Date\", \"Numeric Field 1\" and \"Current " +
                    "Axis Number\" fields");
#line 929
 testRunner.And("I save the CRF page");
#line 930
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table82.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table82.AddRow(new string[] {
                        "Numeric Field 1",
                        "102"});
            table82.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 931
 testRunner.And("I enter data in CRF", ((string)(null)), table82);
#line 937
 testRunner.And("I save the CRF page");
#line 938
 testRunner.And("I verify the queries did not fire on \"Start Date\", \"End Date\", \"Numeric Field 1\" " +
                    "and \"Current Axis Number\" fields");
#line 939
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table83.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table83.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table83.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 940
 testRunner.And("I enter data in CRF", ((string)(null)), table83);
#line 946
 testRunner.And("I save the CRF page");
#line 947
 testRunner.And("I verify the new queries did not fire on \"Start Date\", \"End Date\", \"Numeric Field" +
                    " 1\" and \"Current Axis Number\" fields");
#line 948
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.2", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.2",
                        "Draft"});
#line 954
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 956
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table84.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 957
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table84);
#line 963
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.3", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.3",
                        "Draft"});
#line 969
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 971
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table85.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table85.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table85.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table85.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 972
    testRunner.And("I add and save new log line, from the table below, from the table below", ((string)(null)), table85);
#line 978
 testRunner.And("I take a screenshot");
#line 979
    testRunner.And("I select Form \"Adverse Events\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Date Field 1",
                        "11 Feb 2000"});
            table86.AddRow(new string[] {
                        "Date Field 2",
                        "09 Mar 2000"});
            table86.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table86.AddRow(new string[] {
                        "Numeric Field 2",
                        "77"});
#line 980
    testRunner.And("I add and save new log line, from the table below, from the table below", ((string)(null)), table86);
#line 986
 testRunner.And("I take a screenshot");
#line 987
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 988
 testRunner.And("I open log line 2");
#line 989
 testRunner.And("I verify \"Start Date\" field displays query opened with no require response");
#line 990
 testRunner.And("I verify \"End Date\" field displays query opened with no require response");
#line 991
 testRunner.And("I verify \"Numeric Field 1\" field displays query opened with no require response");
#line 992
 testRunner.And("I verify \"Current Axis Number\" field displays query opened with no require respon" +
                    "se");
#line 993
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table87.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table87.AddRow(new string[] {
                        "Numeric Field 1",
                        "202"});
            table87.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 994
 testRunner.And("I enter data in CRF", ((string)(null)), table87);
#line 1000
 testRunner.And("I cancel the queries on the second log line on \"Start Date\", \"End Date\", \"Numeric" +
                    " Field 1\" and \"Current Axis Number\" fields");
#line 1001
 testRunner.And("I save the CRF page");
#line 1002
 testRunner.And("I take a screenshot");
#line 1003
 testRunner.And("I verify the queries did not fire on the second log line on \"Start Date\", \"End Da" +
                    "te\", \"Numeric Field 1\" and \"Current Axis Number\" fields");
#line 1004
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table88.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table88.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table88.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 1005
 testRunner.And("I enter data in CRF", ((string)(null)), table88);
#line 1011
 testRunner.And("I save the CRF page");
#line 1012
 testRunner.And("I verify the new queries did fire on the second log line on \"Start Date\", \"End Da" +
                    "te\", \"Numeric Field 1\" and \"Current Axis Number\" fields");
#line 1013
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_2.8.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "2")]
        public virtual void PB_2_8_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_2.8.4", new string[] {
                        "release_564_Patch11",
                        "PB_2.8.4",
                        "Draft"});
#line 1018
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 1020
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table89.AddRow(new string[] {
                        "Edit Check Study 3",
                        "20001",
                        "Edit Check Site 2",
                        "PROD",
                        "sub208",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 1021
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table89);
#line 1027
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
