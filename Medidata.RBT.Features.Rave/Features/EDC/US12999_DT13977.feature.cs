// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DT13977IfDatapointWithClinicalSignificanceIsEditedAgainToBeANDCodeClinicalSignificanceDoesNotGetRemovedFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US12999_DT13977.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DT 13977 If Datapoint with Clinical Significance is edited again to be a ND code," +
                    " Clinical Significance does not get removed", "As a Rave user\r\nGiven I enter a lab value that is out of range\r\nAnd I provide cli" +
                    "nical significance information\r\nWhen I change the lab value to be a valid missin" +
                    "g code value\r\nThen I should not see the clinical significance information", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "DT 13977 If Datapoint with Clinical Significance is edited again to be a ND code," +
                            " Clinical Significance does not get removed")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.DT13977IfDatapointWithClinicalSignificanceIsEditedAgainToBeANDCodeClinicalSignificanceDoesNotGetRemovedFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 10
#line 11
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Project",
                        "Environment",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "defuser",
                        "US12999_DT13977_SJ",
                        "Prod",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 12
 testRunner.And("following Project assignments exist", ((string)(null)), table1);
#line 15
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line 16
 testRunner.And("Role \"cdm1\" has Missing Code \"ND\"");
#line 17
 testRunner.And("Project \"US12999_DT13977_SJ\" has Draft \"<Draft1>\"");
#line 18
 testRunner.And("I publish and push CRF Version \"CRF Version<RANDOMNUMBER>\" of Draft \"<Draft1>\" to" +
                    " site \"Site 1\" in Project \"DT13977 SJ \" for Enviroment \"Prod\"");
#line 19
 testRunner.And("the Local Lab \"US15417_DT13905_LocalLab\" exists");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Project",
                        "Environment",
                        "Site",
                        "Lab"});
            table2.AddRow(new string[] {
                        "US12999_DT13977_SJ",
                        "Prod",
                        "Site 1",
                        "US15417_DT13905_LocalLab"});
#line 20
 testRunner.And("the following Lab assignment exists", ((string)(null)), table2);
#line 23
 testRunner.And("Lab analyte fields should have \"Prompt for Clinical Significance\" checked in Arch" +
                    "itect");
#line 24
 testRunner.And("I select Study \"US12999_DT13977_SJ\" and Site \"Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("As an EDC user, when I change an out of range value to be a missing code, then I " +
            "should still see the clinical significance information.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13977 If Datapoint with Clinical Significance is edited again to be a ND code," +
            " Clinical Significance does not get removed")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-DT13977-01")]
        public virtual void AsAnEDCUserWhenIChangeAnOutOfRangeValueToBeAMissingCodeThenIShouldStillSeeTheClinicalSignificanceInformation_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an EDC user, when I change an out of range value to be a missing code, then I " +
                    "should still see the clinical significance information.", new string[] {
                        "PB-DT13977-01"});
#line 28
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table3.AddRow(new string[] {
                        "Subject number",
                        "{RndNum<num1>(3)}"});
            table3.AddRow(new string[] {
                        "Age",
                        "20"});
            table3.AddRow(new string[] {
                        "Sex",
                        "MaleREGAQT"});
            table3.AddRow(new string[] {
                        "Pregancy Status",
                        "NoREGAQT"});
            table3.AddRow(new string[] {
                        "Subject Date",
                        "01 Feb 2011"});
#line 29
 testRunner.When("I create a Subject", ((string)(null)), table3);
#line 38
 testRunner.And("I take a screenshot");
#line 39
 testRunner.And("I select Form \"Hematology\"");
#line 41
 testRunner.And("I choose \"US15417_DT13905_LocalLab\" for \"Lab\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data",
                        "Unit"});
            table4.AddRow(new string[] {
                        "WBC",
                        "30",
                        "10^9/L"});
#line 42
 testRunner.And("I enter data in CRF and save", ((string)(null)), table4);
#line 46
 testRunner.And("I choose \"Code 1REG_ECPV11\" for \"Clinical Significance\"");
#line 47
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data",
                        "Unit"});
            table5.AddRow(new string[] {
                        "WBC",
                        "ND",
                        "10^9/L"});
#line 48
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Clinical Significance prompt",
                        "Code 1REG_ECPV11"});
#line 51
 testRunner.Then("I should verify Clinical Significance does not exist in CRF for field \"WBC\"", ((string)(null)), table6);
#line 54
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
