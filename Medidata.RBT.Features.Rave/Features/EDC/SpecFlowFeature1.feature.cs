// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QueryRefiringLogicFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SpecFlowFeature1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Query Refiring Logic", "As a Rave user\r\nWhen I manually close a query or cancel, the query should not re-" +
                    "fire if the exact same data is entered into the system\r\nSo that I don\'t have to " +
                    "re-enter the exact same response", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Query Refiring Logic")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.QueryRefiringLogicFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 6
#line 7
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "Defuser",
                        "Standard Study",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 8
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 11
 testRunner.And("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A.", new string[] {
                        "PB-US12940-01A"});
#line 18
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table2.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 20
 testRunner.And("I create a Subject", ((string)(null)), table2);
#line 25
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 26
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table4.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 29
    testRunner.And("I verify Query is displayed", ((string)(null)), table4);
#line 32
 testRunner.And("I take a screenshot");
#line 33
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line 34
 testRunner.And("I save the CRF page");
#line 35
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 36
 testRunner.And("I save the CRF page");
#line 37
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 38
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 39
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line 42
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 43
 testRunner.And("I enter data in CRF and save", ((string)(null)), table6);
#line 46
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table7.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 47
 testRunner.And("I verify Query is not displayed", ((string)(null)), table7);
#line 50
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "PB-US12940-01B"});
#line 53
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table8.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table8.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 54
    testRunner.And("I create a Subject", ((string)(null)), table8);
#line 59
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 60
 testRunner.And("I enter data in CRF and save", ((string)(null)), table9);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table10.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 63
    testRunner.And("I verify Query is displayed", ((string)(null)), table10);
#line 66
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 67
 testRunner.And("I enter data in CRF and save", ((string)(null)), table11);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table12.AddRow(new string[] {
                        "Age 2"});
#line 70
 testRunner.And("I verify Query is not displayed", ((string)(null)), table12);
#line 73
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 74
 testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table14.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 77
    testRunner.And("I verify Query is displayed", ((string)(null)), table14);
#line 80
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "PB-US12940-01C"});
#line 83
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table15.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table15.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table15.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 84
    testRunner.And("I create a Subject", ((string)(null)), table15);
#line 89
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 90
 testRunner.And("I enter data in CRF and save", ((string)(null)), table16);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table17.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 93
    testRunner.And("I verify Query is displayed", ((string)(null)), table17);
#line 96
 testRunner.And("I take a screenshot");
#line 97
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 98
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table18.AddRow(new string[] {
                        "Age 3"});
#line 99
 testRunner.And("I verify Query is not displayed", ((string)(null)), table18);
#line 102
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 103
 testRunner.And("I enter data in CRF and save", ((string)(null)), table19);
#line 106
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 107
 testRunner.And("I enter data in CRF and save", ((string)(null)), table20);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table21.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 110
 testRunner.And("I verify Query is not displayed", ((string)(null)), table21);
#line 113
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "PB-US12940-01D"});
#line 116
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table22.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table22.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 117
 testRunner.And("I create a Subject", ((string)(null)), table22);
#line 122
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 123
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table24.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 126
    testRunner.And("I verify Query is displayed", ((string)(null)), table24);
#line 129
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 130
 testRunner.And("I enter data in CRF and save", ((string)(null)), table25);
#line 133
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 134
 testRunner.And("I save the CRF page");
#line 135
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 136
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 137
 testRunner.And("I enter data in CRF and save", ((string)(null)), table26);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table27.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 140
   testRunner.And("I verify Query is displayed", ((string)(null)), table27);
#line 143
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A.", new string[] {
                        "PB-US12940-02A"});
#line 146
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table28.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table28.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 148
 testRunner.And("I create a Subject", ((string)(null)), table28);
#line 153
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 154
 testRunner.And("I enter data in CRF and save", ((string)(null)), table29);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table30.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 157
    testRunner.And("I verify Query is displayed", ((string)(null)), table30);
#line 160
 testRunner.And("I take a screenshot");
#line 161
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line 162
 testRunner.And("I save the CRF page");
#line 163
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 164
 testRunner.And("I save the CRF page");
#line 165
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 166
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 167
 testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 170
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "Age 1",
                        "16"});
#line 171
 testRunner.And("I enter data in CRF and save", ((string)(null)), table32);
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table33.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 174
 testRunner.And("I verify Query is displayed", ((string)(null)), table33);
#line 177
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "PB-US12940-02B"});
#line 180
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table34.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 181
    testRunner.And("I create a Subject", ((string)(null)), table34);
#line 186
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 187
 testRunner.And("I enter data in CRF and save", ((string)(null)), table35);
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table36.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 190
    testRunner.And("I verify Query is displayed", ((string)(null)), table36);
#line 193
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 194
 testRunner.And("I enter data in CRF and save", ((string)(null)), table37);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table38.AddRow(new string[] {
                        "Age 2"});
#line 197
 testRunner.And("I verify Query is not displayed", ((string)(null)), table38);
#line 200
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Age 2",
                        "16"});
#line 201
 testRunner.And("I enter data in CRF and save", ((string)(null)), table39);
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table40.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 204
    testRunner.And("I verify Query is displayed", ((string)(null)), table40);
#line 207
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "PB-US12940-02C"});
#line 210
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table41.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table41.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 211
    testRunner.And("I create a Subject", ((string)(null)), table41);
#line 216
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 217
 testRunner.And("I enter data in CRF and save", ((string)(null)), table42);
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table43.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 220
    testRunner.And("I verify Query is displayed", ((string)(null)), table43);
#line 223
 testRunner.And("I take a screenshot");
#line 224
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 225
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table44.AddRow(new string[] {
                        "Age 3"});
#line 226
 testRunner.And("I verify Query is not displayed", ((string)(null)), table44);
#line 229
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table45.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 230
 testRunner.And("I enter data in CRF and save", ((string)(null)), table45);
#line 233
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Age 3",
                        "16"});
#line 234
 testRunner.And("I enter data in CRF and save", ((string)(null)), table46);
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table47.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 237
    testRunner.And("I verify Query is displayed", ((string)(null)), table47);
#line 240
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "PB-US12940-02D"});
#line 243
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table48.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table48.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 244
 testRunner.And("I create a Subject", ((string)(null)), table48);
#line 249
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 250
 testRunner.And("I enter data in CRF and save", ((string)(null)), table49);
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table50.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 253
    testRunner.And("I verify Query is displayed", ((string)(null)), table50);
#line 256
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 257
 testRunner.And("I enter data in CRF and save", ((string)(null)), table51);
#line 260
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 261
 testRunner.And("I save the CRF page");
#line 262
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 263
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table52.AddRow(new string[] {
                        "Age 4",
                        "16"});
#line 264
 testRunner.And("I enter data in CRF and save", ((string)(null)), table52);
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table53.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 267
   testRunner.And("I verify Query is displayed", ((string)(null)), table53);
#line 270
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToGoodDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.", new string[] {
                        "PB-US12940-03A"});
#line 273
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table54.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table54.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table54.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 274
 testRunner.And("I create a Subject", ((string)(null)), table54);
#line 279
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 280
 testRunner.And("I enter data in CRF and save", ((string)(null)), table55);
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table56.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 283
    testRunner.And("I verify Query is displayed", ((string)(null)), table56);
#line 286
 testRunner.And("I take a screenshot");
#line 287
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 288
 testRunner.And("I enter data in CRF and save", ((string)(null)), table57);
#line 291
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 292
 testRunner.And("I save the CRF page");
#line 293
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 294
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 295
 testRunner.And("I enter data in CRF and save", ((string)(null)), table58);
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table59.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 298
 testRunner.And("I verify Query is displayed", ((string)(null)), table59);
#line 301
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToGoodDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "PB-US12940-03B"});
#line 304
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table60.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table60.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table60.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 305
    testRunner.And("I create a Subject", ((string)(null)), table60);
#line 310
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 311
 testRunner.And("I enter data in CRF and save", ((string)(null)), table61);
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table62.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 314
    testRunner.And("I verify Query is displayed", ((string)(null)), table62);
#line 317
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 318
 testRunner.And("I enter data in CRF and save", ((string)(null)), table63);
#line 321
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table64.AddRow(new string[] {
                        "Age 2"});
#line 322
 testRunner.And("I verify Query is not displayed", ((string)(null)), table64);
#line 325
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table65.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 326
 testRunner.And("I enter data in CRF and save", ((string)(null)), table65);
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table66.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 329
    testRunner.And("I verify Query is displayed", ((string)(null)), table66);
#line 332
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToGoodDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "PB-US12940-03C"});
#line 335
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table67.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table67.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table67.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 336
    testRunner.And("I create a Subject", ((string)(null)), table67);
#line 341
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 342
 testRunner.And("I enter data in CRF and save", ((string)(null)), table68);
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table69.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 345
    testRunner.And("I verify Query is displayed", ((string)(null)), table69);
#line 348
 testRunner.And("I take a screenshot");
#line 349
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table70.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 350
 testRunner.And("I enter data in CRF and save", ((string)(null)), table70);
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table71.AddRow(new string[] {
                        "Age 3"});
#line 353
 testRunner.And("I verify Query is not displayed", ((string)(null)), table71);
#line 356
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 357
 testRunner.And("I enter data in CRF and save", ((string)(null)), table72);
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table73.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 360
    testRunner.And("I verify Query is displayed", ((string)(null)), table73);
#line 363
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Refiring Logic")]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToGoodDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "PB-US12940-03D"});
#line 366
this.ScenarioSetup(scenarioInfo);
#line 6
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table74.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table74.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table74.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 367
 testRunner.And("I create a Subject", ((string)(null)), table74);
#line 372
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 373
 testRunner.And("I enter data in CRF and save", ((string)(null)), table75);
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table76.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 376
    testRunner.And("I verify Query is displayed", ((string)(null)), table76);
#line 379
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 380
 testRunner.And("I enter data in CRF and save", ((string)(null)), table77);
#line 383
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 384
 testRunner.And("I save the CRF page");
#line 385
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 386
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 387
 testRunner.And("I enter data in CRF and save", ((string)(null)), table78);
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table79.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 390
   testRunner.And("I verify Query is displayed", ((string)(null)), table79);
#line 393
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
