// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _3Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic3.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "3", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "3")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._3Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "CDM1",
                        "Edit Check Site 3",
                        "30001"});
#line 14
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Edit Check",
                        "Folder",
                        "Form",
                        "Field",
                        "Query Message"});
            table2.AddRow(new string[] {
                        "*Greater Than Log same form",
                        "Week 1",
                        "Concomitant Medications",
                        "End Date",
                        "Start Date can not be greater than End Date."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Cross Folder",
                        "Week 1",
                        "Concomitant Medications",
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise."});
            table2.AddRow(new string[] {
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Original Axis Number",
                        "Numeric Field is greater than or Equal to Numeric Field on Log."});
            table2.AddRow(new string[] {
                        "*Is Less Than Log same form",
                        "Week 1",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "Date is Less Than Date on first Number field."});
            table2.AddRow(new string[] {
                        "*Is Less Than Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "End Date",
                        "Date is Less Than Date on the first log form."});
            table2.AddRow(new string[] {
                        "*Is Less Than To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Start Date",
                        "Date can not be less than."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Cross Folder",
                        "Week 1",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "Numeric Field 2 is not equal Numeric Field 2."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "Numeric 2 can not equal each other."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Screening",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Same form",
                        "Week 1",
                        "Informed Consent",
                        "Current Distribution Number",
                        "Numeric fields are not equal."});
            table2.AddRow(new string[] {
                        "*Greater Than or Equal To Open Query Log same form",
                        "Week 1",
                        "Informed Consent",
                        "End Date",
                        "\'Date Informed Consent Signed\' is not equal to \'Current Date\'."});
#line 18
 testRunner.And("Study \"Edit Check Study 3\" has Draft \"Draft 1\" includes Edit Checks from the tabl" +
                    "e below", ((string)(null)), table2);
#line 32
 testRunner.And("Draft \"Draft 1\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 33
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 3\" in Environment \"Prod\"");
#line 34
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.1 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that originally opened" +
            " the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_1OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.1 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that originally opened" +
                    " the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.1",
                        "Draft"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 42
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table3.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 43
  testRunner.And("I create a Subject", ((string)(null)), table3);
#line 48
  testRunner.And("I select Folder \"Screening\"");
#line 49
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table4.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table4.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 50
  testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 56
 testRunner.And("I save the CRF page");
#line 57
 testRunner.And("I take a screenshot");
#line 58
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table5.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 59
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 65
 testRunner.And("I save the CRF page");
#line 66
 testRunner.And("I open log line 1");
#line 67
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 68
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 69
 testRunner.And("I take a screenshot");
#line 70
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \".\"");
#line 71
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \".\"");
#line 72
 testRunner.And("I save the CRF page");
#line 73
 testRunner.And("I take a screenshot");
#line 79
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 80
 testRunner.When("I enter data in CRF", ((string)(null)), table6);
#line 84
 testRunner.And("I save the CRF page");
#line 85
 testRunner.And("I open log line 1");
#line 86
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 87
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 88
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.2 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_2OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.2 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.2",
                        "Draft"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 97
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table7.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 98
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table7);
#line 102
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.3 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the different data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_3OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.3 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the different data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.3",
                        "Draft"});
#line 108
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 110
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line 111
 testRunner.Given("I select a Subject \"sub{Var(num1)}\"");
#line 112
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 113
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table8.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table8.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 114
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 120
 testRunner.And("I save the CRF page");
#line 121
 testRunner.And("I open log line 2");
#line 122
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" with Requires Response is displayed on Field \"Start Date\"");
#line 123
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" with Requires Respons" +
                    "e is displayed on Field \"Current Axis Number\"");
#line 124
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 125
 testRunner.And("I enter data in CRF", ((string)(null)), table9);
#line 129
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \".\"");
#line 130
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \".\"");
#line 131
 testRunner.And("I save the CRF page");
#line 132
 testRunner.And("I take a screenshot");
#line 133
 testRunner.And("I open log line 2");
#line 134
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 135
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 136
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 138
 testRunner.When("I enter data in CRF", ((string)(null)), table10);
#line 142
 testRunner.And("I save the CRF page");
#line 143
 testRunner.And("I open log line 2");
#line 144
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 145
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 146
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.4 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that originally opened" +
            " the query, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_4OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.4 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that originally opened" +
                    " the query, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.4",
                        "Draft"});
#line 152
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 154
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 155
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table11);
#line 159
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.1 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_1OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.1 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.1",
                        "Draft"});
#line 165
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 167
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num2>(Edit Check Study 3,prod,Subject Number)}"});
            table12.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 168
  testRunner.And("I create a Subject", ((string)(null)), table12);
#line 172
  testRunner.And("I select Folder \"Screening\"");
#line 173
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table13.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table13.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table13.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 174
  testRunner.And("I enter data in CRF", ((string)(null)), table13);
#line 180
 testRunner.And("I save the CRF page");
#line 181
 testRunner.And("I take a screenshot");
#line 182
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table14.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 183
 testRunner.And("I enter data in CRF", ((string)(null)), table14);
#line 189
 testRunner.And("I save the CRF page");
#line 190
 testRunner.And("I open log line 1");
#line 191
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 192
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 193
 testRunner.And("I take a screenshot");
#line 194
 testRunner.And("I open log line 1");
#line 195
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\" with \"{answer}\"");
#line 196
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\" with \"{answer}\"");
#line 197
 testRunner.And("I save the CRF page");
#line 198
 testRunner.And("I take a screenshot");
#line 201
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 202
 testRunner.When("I enter data in CRF", ((string)(null)), table15);
#line 206
 testRunner.And("I save the CRF page");
#line 207
 testRunner.Then("I verify Query with message \"\" is not displayed on Field \"Start Date\"");
#line 208
 testRunner.And("I verify Query with message \"\" is not displayed on Field \"Current Axis Number\"");
#line 209
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.2 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_2OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.2 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.2",
                        "Draft"});
#line 215
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 217
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table16.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Assessment Date 1",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "{DateTime}"});
            table16.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 2",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 218
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table16);
#line 222
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.3 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the different data and I enter the same data that originally" +
            " opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_3OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.3 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the different data and I enter the same data that originally" +
                    " opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.3",
                        "Draft"});
#line 228
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 230
 testRunner.Given("I select a Subject \"sub{Var(num2)}\"");
#line 231
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line 232
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 233
 testRunner.And("I enter data in CRF", ((string)(null)), table17);
#line 239
 testRunner.And("I save the CRF page");
#line 240
 testRunner.And("I open log line 2");
#line 241
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 242
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 243
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 244
 testRunner.And("I enter data in CRF", ((string)(null)), table18);
#line 249
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\" with \"{answer}\"");
#line 250
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\" with \"{answer}\"");
#line 251
 testRunner.And("I save the CRF page");
#line 252
 testRunner.And("I take a screenshot");
#line 253
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 254
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 255
 testRunner.And("I take a screenshot");
#line 259
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 261
 testRunner.When("I enter data in CRF", ((string)(null)), table19);
#line 265
 testRunner.And("I save the CRF page");
#line 266
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Start Date\"");
#line 267
 testRunner.And("I verify Query with message \"\" is displayed on Field \"Current Axis Number\"");
#line 268
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.4 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_4OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.4 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.4",
                        "Draft"});
#line 274
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 276
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table20.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "{DateTime}"});
            table20.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 2",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 277
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table20);
#line 281
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.1 On a Cross Forms log form to Standard form, When a query has been answer" +
            "ed and closed with the different data and I enter the same data that originally " +
            "opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_1OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.1 On a Cross Forms log form to Standard form, When a query has been answer" +
                    "ed and closed with the different data and I enter the same data that originally " +
                    "opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.1",
                        "Draft"});
#line 287
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 289
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num3>(Edit Check Study 3,prod,Subject Number)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 290
  testRunner.And("I create a Subject", ((string)(null)), table21);
#line 294
 testRunner.And("I select Folder \"Week 1\"");
#line 295
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table22.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 296
 testRunner.And("I enter data in CRF", ((string)(null)), table22);
#line 302
 testRunner.And("I save the CRF page");
#line 303
 testRunner.And("I take a screenshot");
#line 304
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table23.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table23.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table23.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 305
 testRunner.And("I enter data in CRF", ((string)(null)), table23);
#line 311
 testRunner.And("I save the CRF page");
#line 312
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 313
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 314
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 315
 testRunner.And("I enter data in CRF", ((string)(null)), table24);
#line 319
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\" with \"{answer}\"");
#line 320
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Distribution Number\" with \"{answ" +
                    "er}\"");
#line 321
 testRunner.And("I save the CRF page");
#line 322
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 323
 testRunner.And("I verify Field \"Current Distribution Numberv\" has NO Query");
#line 324
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table25.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 328
 testRunner.When("I enter data in CRF", ((string)(null)), table25);
#line 332
 testRunner.And("I save the CRF page");
#line 333
 testRunner.Then("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 334
 testRunner.Then("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Distribution Number\"");
#line 335
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.2 On a Cross Forms log form to Standard form, When a query has been answer" +
            "ed and closed with the different data and I enter the same data that originally " +
            "opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_2OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.2 On a Cross Forms log form to Standard form, When a query has been answer" +
                    "ed and closed with the different data and I enter the same data that originally " +
                    "opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.2",
                        "Draft"});
#line 341
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 343
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is not equal to \'Current Date\'.",
                        "{DateTime}"});
            table26.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Numeric Field 2",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 344
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table26);
#line 348
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.1 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the same data and I enter the same data that originally opened the" +
            " query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_1OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.1 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the same data and I enter the same data that originally opened the" +
                    " query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.1",
                        "Draft"});
#line 354
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 356
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num4>(Edit Check Study 3,prod,Subject Number)}"});
            table27.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 357
  testRunner.And("I create a Subject", ((string)(null)), table27);
#line 361
 testRunner.And("I select Folder \"Screening\"");
#line 362
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table28.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table28.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table28.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 363
 testRunner.And("I enter data in CRF", ((string)(null)), table28);
#line 369
 testRunner.And("I save the CRF page");
#line 370
 testRunner.And("I take a screenshot");
#line 371
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table29.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table29.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table29.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 372
 testRunner.And("I enter data in CRF", ((string)(null)), table29);
#line 378
 testRunner.And("I save the CRF page");
#line 379
 testRunner.And("I take a screenshot");
#line 380
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 381
 testRunner.And("I open log line 1");
#line 382
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 383
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 384
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 385
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 2\"");
#line 386
 testRunner.And("I take a screenshot");
#line 387
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\" with \"{answer}\"");
#line 388
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\" with \"{answer}\"");
#line 389
 testRunner.And("I answer the Query \"{message}\" on Field \"Original Axis Number\" with \"{answer}\"");
#line 390
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 2\" with \"{answer}\"");
#line 391
 testRunner.And("I save the CRF page");
#line 392
 testRunner.And("I take a screenshot");
#line 393
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table30.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table30.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 394
 testRunner.And("I enter data in CRF", ((string)(null)), table30);
#line 400
 testRunner.And("I save the CRF page");
#line 401
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 402
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 403
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 404
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 405
 testRunner.And("I take a screenshot");
#line 412
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table31.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table31.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table31.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 413
 testRunner.When("I enter data in CRF", ((string)(null)), table31);
#line 419
 testRunner.And("I save the CRF page");
#line 420
 testRunner.Then("I verify Query with message \"\" is not displayed on Field \"Start Date\"");
#line 421
 testRunner.And("I verify Requires Response Query with message \"\" is not displayed on Field \"End D" +
                    "ate\"");
#line 422
 testRunner.And("I verify Requires Response Query with message \"\" is not displayed on Field \"Origi" +
                    "nal Axis Number\"");
#line 423
 testRunner.And("I verify Requires Response Query with message \"\" is not displayed on Field \"Curre" +
                    "nt Axis Number\"");
#line 424
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.2 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the same data and I enter the same data that originally opened the" +
            " query, then queries are displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_2OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.2 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the same data and I enter the same data that originally opened the" +
                    " query, then queries are displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.2",
                        "Draft"});
#line 430
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 432
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table32.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Assessment Date 1",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table32.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Assessment Date 2",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table32.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table32.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 2",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 433
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table32);
#line 439
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.3 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the different data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_3OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.3 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the different data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.3",
                        "Draft"});
#line 447
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 449
 testRunner.Given("I select a Subject \"sub{Var(num4)}\"");
#line 450
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 451
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table33.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table33.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table33.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 452
 testRunner.And("I enter data in CRF", ((string)(null)), table33);
#line 458
 testRunner.And("I save the CRF page");
#line 459
 testRunner.And("I take a screenshot");
#line 460
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line 461
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table34.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table34.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table34.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table34.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 462
 testRunner.And("I enter data in CRF", ((string)(null)), table34);
#line 468
 testRunner.And("I save the CRF page");
#line 469
 testRunner.And("I take a screenshot");
#line 470
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 471
 testRunner.And("I open log line 2");
#line 472
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Start Date\"");
#line 473
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"End Date\"");
#line 474
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Original Axis Number\"");
#line 475
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Current Axis Number\"");
#line 476
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 477
 testRunner.And("I enter data in CRF", ((string)(null)), table35);
#line 483
 testRunner.And("I answer the Query \"{message}\" on Field \"Start Date\" with \"{answer}\"");
#line 484
 testRunner.And("I answer the Query \"{message}\" on Field \"End Date\" with \"{answer}\"");
#line 485
 testRunner.And("I answer the Query \"{message}\" on Field \"Original Axis Number\" with \"{answer}\"");
#line 486
 testRunner.And("I answer the Query \"{message}\" on Field \"Current Axis Number\" with \"{answer}\"");
#line 487
 testRunner.And("I save the CRF page");
#line 488
 testRunner.And("I open log line 2");
#line 489
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 490
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 491
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 492
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 493
 testRunner.And("I take a screenshot");
#line 503
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table36.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table36.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table36.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 504
 testRunner.When("I enter data in CRF", ((string)(null)), table36);
#line 510
 testRunner.And("I save the CRF page");
#line 511
 testRunner.And("I open log line 2");
#line 512
 testRunner.Then("I verify Query with message \"\" is displayed on Field \"Start Date\"");
#line 513
 testRunner.And("I verify Query with message \"\" is displayed on Field \"End Date\"");
#line 514
 testRunner.And("I verify Query with message \"\" is displayed on Field \"Original Axis Number\"");
#line 515
 testRunner.And("I verify Query with message \"\" is displayed on Field \"Current Axis Number\"");
#line 516
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.4 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the different data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_4OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.4 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the different data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.4",
                        "Draft"});
#line 522
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 524
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table37.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Assessment Date 1",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table37.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Assessment Date 2",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table37.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table37.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Numeric Field 2",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 525
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table37);
#line 531
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
