// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _3Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic3.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "3", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "3")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._3Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "CDM1",
                        "Edit Check Site 3",
                        "30001"});
#line 14
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Edit Check",
                        "Folder",
                        "Form",
                        "Field",
                        "Query Message"});
            table2.AddRow(new string[] {
                        "*Greater Than Log same form",
                        "Week 1",
                        "Concomitant Medications",
                        "End Date",
                        "Start Date can not be greater than End Date."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Cross Folder",
                        "Week 1",
                        "Concomitant Medications",
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise."});
            table2.AddRow(new string[] {
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Original Axis Number",
                        "\'AE Number\' is greater than or Equal to \'Original Axis Number\' on Log."});
            table2.AddRow(new string[] {
                        "*Is Less Than Log same form",
                        "Week 1",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field."});
            table2.AddRow(new string[] {
                        "*Is Less Than Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "End Date",
                        "Date is Less Than Date on the first log form."});
            table2.AddRow(new string[] {
                        "*Is Less Than To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Start Date",
                        "Date can not be less than."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Cross Folder",
                        "Week 1",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "\'Duration\' and \'Current Axis Number\' cannot equal."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Screening",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Same form",
                        "Week 1",
                        "Informed Consent",
                        "Current Distribution Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Greater Than or Equal To Open Query Log same form",
                        "Week 1",
                        "Informed Consent",
                        "End Date",
                        "\'Date Informed Consent Signed\' is not equal to \'Current Date\'."});
#line 18
 testRunner.And("Study \"Edit Check Study 3\" has Draft \"Draft 1\" includes Edit Checks from the tabl" +
                    "e below", ((string)(null)), table2);
#line 32
 testRunner.And("Draft \"Draft 3\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 33
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 3\" in Environment \"Prod\"");
#line 34
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.1 As an EDC user, On a Cross Form Standard form to log form, When a query " +
            "has been answered and closed with the same data and I enter the same data that o" +
            "riginally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_1AsAnEDCUserOnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.1 As an EDC user, On a Cross Form Standard form to log form, When a query " +
                    "has been answered and closed with the same data and I enter the same data that o" +
                    "riginally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.1",
                        "Draft"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 42
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table3.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 43
  testRunner.And("I create a Subject", ((string)(null)), table3);
#line 47
  testRunner.And("I select Folder \"Screening\"");
#line 48
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table4.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table4.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 49
  testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 55
 testRunner.And("I save the CRF page");
#line 56
 testRunner.And("I take a screenshot");
#line 57
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table5.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 58
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 64
 testRunner.And("I save the CRF page");
#line 65
 testRunner.And("I open log line 1");
#line 66
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 67
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 68
 testRunner.And("I take a screenshot");
#line 69
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"answered query\"");
#line 70
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"answered query\"");
#line 71
 testRunner.And("I save the CRF page");
#line 72
 testRunner.And("I take a screenshot");
#line 78
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 79
 testRunner.When("I enter data in CRF", ((string)(null)), table6);
#line 83
 testRunner.And("I save the CRF page");
#line 84
 testRunner.And("I open log line 1");
#line 85
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 86
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 87
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.2 As an EDC user, On a Cross Form Standard form to log form, When a query " +
            "has been answered and closed with the different data and I enter the same data t" +
            "hat")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_2AsAnEDCUserOnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.2 As an EDC user, On a Cross Form Standard form to log form, When a query " +
                    "has been answered and closed with the different data and I enter the same data t" +
                    "hat", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.2",
                        "Draft"});
#line 93
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 96
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line 97
 testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 98
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 99
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 100
 testRunner.And("I enter data in CRF", ((string)(null)), table7);
#line 106
 testRunner.And("I save the CRF page");
#line 107
 testRunner.And("I open log line 2");
#line 108
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 109
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 110
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 111
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 115
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"answered query\"");
#line 116
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"answered query\"");
#line 117
 testRunner.And("I save the CRF page");
#line 118
 testRunner.And("I take a screenshot");
#line 119
 testRunner.And("I open log line 2");
#line 120
 testRunner.And("I verify Field \"Start Date\" has no Query");
#line 121
 testRunner.And("I verify Field \"Current Axis Number\" has no Query");
#line 122
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 124
 testRunner.When("I enter data in CRF", ((string)(null)), table9);
#line 128
 testRunner.And("I save the CRF page");
#line 129
 testRunner.And("I open log line 2");
#line 130
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 131
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 132
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.1 As an EDC user, On a Cross Folder Standard form to log form, When a quer" +
            "y has been answered and closed with the same data and I enter the same data that" +
            " originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_1AsAnEDCUserOnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.1 As an EDC user, On a Cross Folder Standard form to log form, When a quer" +
                    "y has been answered and closed with the same data and I enter the same data that" +
                    " originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.1",
                        "Draft"});
#line 138
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 140
  testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table10.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table10.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 141
  testRunner.And("I create a Subject", ((string)(null)), table10);
#line 145
  testRunner.And("I select Folder \"Screening\"");
#line 146
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table11.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table11.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table11.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 147
  testRunner.And("I enter data in CRF", ((string)(null)), table11);
#line 153
 testRunner.And("I save the CRF page");
#line 154
 testRunner.And("I take a screenshot");
#line 155
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table12.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table12.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 156
 testRunner.And("I enter data in CRF", ((string)(null)), table12);
#line 162
 testRunner.And("I save the CRF page");
#line 163
 testRunner.And("I open log line 1");
#line 164
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 165
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 166
 testRunner.And("I take a screenshot");
#line 167
 testRunner.And("I open log line 1");
#line 168
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"answered query\"");
#line 169
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"answered query\"");
#line 170
 testRunner.And("I save the CRF page");
#line 171
 testRunner.And("I take a screenshot");
#line 173
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 174
 testRunner.When("I enter data in CRF", ((string)(null)), table13);
#line 178
 testRunner.And("I save the CRF page");
#line 179
 testRunner.And("I open log line 1");
#line 180
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an.\" is not displayed on Field \"Start Date\"");
#line 181
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is not displayed on Field \"Current Axis Number\"");
#line 182
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.2 As an EDC user, On a Cross Folder Standard form to log form, When a quer" +
            "y has been answered and closed with the different data and I enter the same data" +
            " that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_2AsAnEDCUserOnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.2 As an EDC user, On a Cross Folder Standard form to log form, When a quer" +
                    "y has been answered and closed with the different data and I enter the same data" +
                    " that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.2",
                        "Draft"});
#line 188
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 190
 testRunner.Given("I select a Subject \"sub{Var(num1)}\"");
#line 191
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line 192
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table14.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 193
 testRunner.And("I enter data in CRF", ((string)(null)), table14);
#line 199
 testRunner.And("I save the CRF page");
#line 200
 testRunner.And("I open log line 2");
#line 201
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' can" +
                    " not be greater than.\" is displayed on Field \"Start Date\"");
#line 202
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is n" +
                    "ot equal \'Current Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 203
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 204
 testRunner.And("I enter data in CRF", ((string)(null)), table15);
#line 209
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"answered query\"");
#line 210
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"answered query\"");
#line 211
 testRunner.And("I save the CRF page");
#line 212
 testRunner.And("I take a screenshot");
#line 213
 testRunner.And("I open log line 2");
#line 214
 testRunner.And("I verify Field \"Start Date\" has no Query");
#line 215
 testRunner.And("I verify Field \"Current Axis Number\" has no Query");
#line 216
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 221
 testRunner.When("I enter data in CRF", ((string)(null)), table16);
#line 225
 testRunner.And("I save the CRF page");
#line 226
 testRunner.And("I open log line 2");
#line 227
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an.\" is displayed on Field \"Start Date\"");
#line 228
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 229
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.1 As an EDC user, On a Cross Forms log form to Standard form, When a query" +
            " has been answered and closed with the different data and I enter the same data " +
            "that originally opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_1AsAnEDCUserOnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.1 As an EDC user, On a Cross Forms log form to Standard form, When a query" +
                    " has been answered and closed with the different data and I enter the same data " +
                    "that originally opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.1",
                        "Draft"});
#line 235
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 237
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table17.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 238
 testRunner.And("I create a Subject", ((string)(null)), table17);
#line 242
 testRunner.And("I select Folder \"Week 1\"");
#line 243
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 244
 testRunner.And("I enter data in CRF", ((string)(null)), table18);
#line 250
 testRunner.And("I save the CRF page");
#line 251
 testRunner.And("I take a screenshot");
#line 252
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table19.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table19.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table19.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 253
 testRunner.And("I enter data in CRF", ((string)(null)), table19);
#line 259
 testRunner.And("I save the CRF page");
#line 260
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date\" is displayed on Field \"End Date\"");
#line 261
 testRunner.And("I verify Requires Response Query with message \"\'Original Distribution Number\' and" +
                    " \'Current Distribution Number\' fields are not equal.\" is displayed on Field \"Cur" +
                    "rent Distribution Number\"");
#line 262
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table20.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 263
 testRunner.And("I enter data in CRF", ((string)(null)), table20);
#line 267
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is not equal to Current Date\" " +
                    "on Field \"End Date\" with \"answered query\"");
#line 268
 testRunner.And("I answer the Query \"\'Original Distribution Number\' and \'Current Distribution Numb" +
                    "er\' fields are not equal.\" on Field \"Current Distribution Number\" with \"answered" +
                    " query\"");
#line 269
 testRunner.And("I save the CRF page");
#line 270
 testRunner.And("I verify Field \"End Date\" has no Query");
#line 271
 testRunner.And("I verify Field \"Current Distribution Number\" has no Query");
#line 272
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table21.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 276
 testRunner.When("I enter data in CRF", ((string)(null)), table21);
#line 280
 testRunner.And("I save the CRF page");
#line 281
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "not equal to Current Date\" is displayed on Field \"End Date\"");
#line 282
 testRunner.Then("I verify Requires Response Query with message \"\'Original Distribution Number\' and" +
                    " \'Current Distribution Number\' fields are not equal.\" is displayed on Field \"Cur" +
                    "rent Distribution Number\"");
#line 283
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.1 As an EDC user, On a Cross Forms log form to log form, When a query has " +
            "been answered and closed with the same data and I enter the same data that origi" +
            "nally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_1AsAnEDCUserOnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.1 As an EDC user, On a Cross Forms log form to log form, When a query has " +
                    "been answered and closed with the same data and I enter the same data that origi" +
                    "nally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.1",
                        "Draft"});
#line 289
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 291
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table22.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table22.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 292
 testRunner.And("I create a Subject", ((string)(null)), table22);
#line 296
 testRunner.And("I select Folder \"Screening\"");
#line 297
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table23.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table23.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 298
 testRunner.And("I enter data in CRF", ((string)(null)), table23);
#line 304
 testRunner.And("I save the CRF page");
#line 305
 testRunner.And("I take a screenshot");
#line 306
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table24.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table24.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table24.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 307
 testRunner.And("I enter data in CRF", ((string)(null)), table24);
#line 313
 testRunner.And("I save the CRF page");
#line 314
 testRunner.And("I take a screenshot");
#line 315
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 316
 testRunner.And("I open log line 1");
#line 317
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 318
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 319
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 320
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 321
 testRunner.And("I take a screenshot");
#line 322
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"answe" +
                    "red query\"");
#line 323
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"answered query\"");
#line 324
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"answered query\"");
#line 325
 testRunner.And("I answer the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field " +
                    "\"Current Axis Number\" with \"answered query\"");
#line 326
 testRunner.And("I save the CRF page");
#line 327
 testRunner.And("I take a screenshot");
#line 328
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table25.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table25.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table25.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 329
 testRunner.And("I enter data in CRF", ((string)(null)), table25);
#line 335
 testRunner.And("I save the CRF page");
#line 336
 testRunner.And("I open log line 1");
#line 337
 testRunner.And("I verify Field \"Start Date\" has no Query");
#line 338
 testRunner.And("I verify Field \"End Date\" has no Query");
#line 339
 testRunner.And("I verify Field \"Original Axis Number\" has no Query");
#line 340
 testRunner.And("I verify Field \"Current Axis Number\" has no Query");
#line 341
 testRunner.And("I take a screenshot");
#line 348
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table26.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table26.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table26.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 349
 testRunner.When("I enter data in CRF", ((string)(null)), table26);
#line 355
 testRunner.And("I save the CRF page");
#line 356
 testRunner.And("I open log line 1");
#line 357
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 358
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is no" +
                    "t displayed on Field \"End Date\"");
#line 359
 testRunner.And("I verify Query with message \"\'AE Number\' is greater than or Equal to \'Original Ax" +
                    "is Number\' on Log.\" is not displayed on Field \"Original Axis Number\"");
#line 360
 testRunner.And("I verify Query with message \"\'Duration\' and \'Current Axis Number\' cannot equal.\" " +
                    "is not displayed on Field \"Current Axis Number\"");
#line 361
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.2 As an EDC user, On a Cross Forms log form to log form, When a query has " +
            "been answered and closed with the different data and I enter the same data that " +
            "originally opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_2AsAnEDCUserOnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.2 As an EDC user, On a Cross Forms log form to log form, When a query has " +
                    "been answered and closed with the different data and I enter the same data that " +
                    "originally opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.2",
                        "Draft"});
#line 369
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 371
 testRunner.Given("I select a Subject \"sub{Var(num1)}\"");
#line 372
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 373
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table27.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table27.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 374
 testRunner.And("I enter data in CRF", ((string)(null)), table27);
#line 380
 testRunner.And("I save the CRF page");
#line 381
 testRunner.And("I take a screenshot");
#line 382
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line 383
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table28.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table28.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table28.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 384
 testRunner.And("I enter data in CRF", ((string)(null)), table28);
#line 390
 testRunner.And("I save the CRF page");
#line 391
 testRunner.And("I take a screenshot");
#line 392
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 393
 testRunner.And("I open log line 2");
#line 394
 testRunner.And("I verify Requires Response Query with message \"Date can not be less than.\" is dis" +
                    "played on Field \"Start Date\"");
#line 395
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is displayed on Field \"End Date\"");
#line 396
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' is greater than or Equ" +
                    "al to \'Original Axis Number\' on Log.\" is displayed on Field \"Original Axis Numbe" +
                    "r\"");
#line 397
 testRunner.And("I verify Requires Response Query with message \"\'Duration\' and \'Current Axis Numbe" +
                    "r\' cannot equal.\" is displayed on Field \"Current Axis Number\"");
#line 398
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table29.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table29.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table29.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 399
 testRunner.And("I enter data in CRF", ((string)(null)), table29);
#line 405
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"answe" +
                    "red query\"");
#line 406
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"answered query\"");
#line 407
 testRunner.And("I answer the Query \"\'AE Number\' is greater than or Equal to \'Original Axis Number" +
                    "\' on Log.\" on Field \"Original Axis Number\" with \"answered query\"");
#line 408
 testRunner.And("I answer the Query \"\'Duration\' and \'Current Axis Number\' cannot equal.\" on Field " +
                    "\"Current Axis Number\" with \"answered query\"");
#line 409
 testRunner.And("I save the CRF page");
#line 410
 testRunner.And("I open log line 2");
#line 411
 testRunner.And("I verify Field \"Start Date\" has no Query");
#line 412
 testRunner.And("I verify Field \"End Date\" has no Query");
#line 413
 testRunner.And("I verify Field \"Original Axis Number\" has no Query");
#line 414
 testRunner.And("I verify Field \"Current Axis Number\" has no Query");
#line 415
 testRunner.And("I take a screenshot");
#line 425
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table30.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table30.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table30.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 426
 testRunner.When("I enter data in CRF", ((string)(null)), table30);
#line 432
 testRunner.And("I save the CRF page");
#line 433
 testRunner.And("I open log line 2");
#line 434
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 435
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 436
 testRunner.And("I verify Query with message \"\'AE Number\' is greater than or Equal to \'Original Ax" +
                    "is Number\' on Log.\" is displayed on Field \"Original Axis Number\"");
#line 437
 testRunner.And("I verify Query with message \"\'Duration\' and \'Current Axis Number\' cannot equal.\" " +
                    "is displayed on Field \"Current Axis Number\"");
#line 438
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
