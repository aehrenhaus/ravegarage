// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _3Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic3.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "3", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "3")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._3Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "CDM1",
                        "Edit Check Site 3",
                        "30001"});
#line 14
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Edit Check",
                        "Folder",
                        "Form",
                        "Field",
                        "Query Message"});
            table2.AddRow(new string[] {
                        "*Greater Than Log same form",
                        "Week 1",
                        "Concomitant Medications",
                        "End Date",
                        "Start Date can not be greater than End Date."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Cross Folder",
                        "Week 1",
                        "Concomitant Medications",
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise."});
            table2.AddRow(new string[] {
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Original Axis Number",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log."});
            table2.AddRow(new string[] {
                        "*Is Less Than Log same form",
                        "Week 1",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "\'Original Axis Number\' is Less Than \'Current Axis Number\' on first Number field."});
            table2.AddRow(new string[] {
                        "*Is Less Than Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "End Date",
                        "Date is Less Than Date on the first log form."});
            table2.AddRow(new string[] {
                        "*Is Less Than To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Start Date",
                        "Date can not be less than."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Cross Folder",
                        "Week 1",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Screening",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Screening",
                        "Concomitant Medications",
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Same form",
                        "Week 1",
                        "Informed Consent",
                        "Current Distribution Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'."});
            table2.AddRow(new string[] {
                        "*Greater Than or Equal To Open Query Log same form",
                        "Week 1",
                        "Informed Consent",
                        "End Date",
                        "\'Date Informed Consent Signed\' is not equal to \'Current Date\'."});
#line 18
 testRunner.And("Study \"Edit Check Study 3\" has Draft \"Draft 1\" includes Edit Checks from the tabl" +
                    "e below", ((string)(null)), table2);
#line 32
 testRunner.And("Draft \"Draft 3\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 33
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 3\" in Environment \"Prod\"");
#line 34
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.1 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that originally opened" +
            " the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_1OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.1 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that originally opened" +
                    " the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.1",
                        "Draft"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 42
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table3.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 43
  testRunner.And("I create a Subject", ((string)(null)), table3);
#line 47
  testRunner.And("I select Folder \"Screening\"");
#line 48
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table4.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table4.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 49
  testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 55
 testRunner.And("I save the CRF page");
#line 56
 testRunner.And("I take a screenshot");
#line 57
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table5.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table5.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 58
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 64
 testRunner.And("I save the CRF page");
#line 65
 testRunner.And("I open log line 1");
#line 66
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 67
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 68
 testRunner.And("I take a screenshot");
#line 69
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 70
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 71
 testRunner.And("I save the CRF page");
#line 72
 testRunner.And("I take a screenshot");
#line 79
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 80
 testRunner.When("I enter data in CRF", ((string)(null)), table6);
#line 84
 testRunner.And("I save the CRF page");
#line 85
 testRunner.And("I open log line 1");
#line 86
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is not displayed on Field \"Start Date\"");
#line 87
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is not displayed on F" +
                    "ield \"Current Axis Number\"");
#line 88
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.2 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_2OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.2 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.2",
                        "Draft"});
#line 94
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 97
  testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 3,prod,Subject Number)}"});
            table7.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 98
  testRunner.And("I create a Subject", ((string)(null)), table7);
#line 102
  testRunner.And("I select Folder \"Screening\"");
#line 103
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table8.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table8.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 104
  testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 110
 testRunner.And("I save the CRF page");
#line 111
 testRunner.And("I take a screenshot");
#line 112
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table9.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table9.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 113
 testRunner.And("I enter data in CRF", ((string)(null)), table9);
#line 119
 testRunner.And("I save the CRF page");
#line 120
 testRunner.And("I open log line 1");
#line 121
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 122
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 123
 testRunner.And("I take a screenshot");
#line 124
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 125
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 126
 testRunner.And("I save the CRF page");
#line 127
 testRunner.And("I take a screenshot");
#line 134
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 135
 testRunner.When("I enter data in CRF", ((string)(null)), table10);
#line 139
 testRunner.And("I save the CRF page");
#line 140
 testRunner.And("I open log line 1");
#line 142
    testRunner.When("I verify the log message for query not opening event for Project \"Edit Check Stud" +
                    "y 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table11.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 143
    testRunner.Then("I should see SQL result", ((string)(null)), table11);
#line 147
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.3 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the different data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_3OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.3 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the different data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.3",
                        "Draft"});
#line 153
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 156
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line 157
 testRunner.Given("I select a Subject \"sub{Var(num1)}\"");
#line 158
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 159
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table12.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table12.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 160
 testRunner.And("I enter data in CRF", ((string)(null)), table12);
#line 166
 testRunner.And("I save the CRF page");
#line 167
 testRunner.And("I open log line 2");
#line 168
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" with Requires Response is displayed on Field \"Start Date\"");
#line 169
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" with Requires Respons" +
                    "e is displayed on Field \"Current Axis Number\"");
#line 170
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 171
 testRunner.And("I enter data in CRF", ((string)(null)), table13);
#line 175
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 176
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 177
 testRunner.And("I save the CRF page");
#line 178
 testRunner.And("I take a screenshot");
#line 179
 testRunner.And("I open log line 2");
#line 180
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 181
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 182
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 184
 testRunner.When("I enter data in CRF", ((string)(null)), table14);
#line 188
 testRunner.And("I save the CRF page");
#line 189
 testRunner.And("I open log line 2");
#line 190
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 191
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 192
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.4 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that originally opened" +
            " the query, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_4OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.4 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that originally opened" +
                    " the query, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.4",
                        "Draft"});
#line 198
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 200
    testRunner.When("I verify the log messages for queries");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table15.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "{DateTime}"});
            table15.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "{DateTime}"});
#line 201
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table15);
#line 205
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.1 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_1OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.1 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.1",
                        "Draft"});
#line 211
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 213
  testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table16.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num2>(Edit Check Study 3,prod,Subject Number)}"});
            table16.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 214
  testRunner.And("I create a Subject", ((string)(null)), table16);
#line 218
  testRunner.And("I select Folder \"Screening\"");
#line 219
  testRunner.And("I select Form \"Informed Consent\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "10 Jan 2000"});
            table17.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table17.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table17.AddRow(new string[] {
                        "Current Distribution Number",
                        "200"});
#line 220
  testRunner.And("I enter data in CRF", ((string)(null)), table17);
#line 226
 testRunner.And("I save the CRF page");
#line 227
 testRunner.And("I take a screenshot");
#line 228
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "11 Feb 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 229
 testRunner.And("I enter data in CRF", ((string)(null)), table18);
#line 235
 testRunner.And("I save the CRF page");
#line 236
 testRunner.And("I open log line 1");
#line 237
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an.\" with Requires Response is displayed on Field \"Start Date\"");
#line 238
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" with Requires Response is displayed on Field \"Current Axis Number" +
                    "\"");
#line 239
 testRunner.And("I take a screenshot");
#line 240
 testRunner.And("I open log line 1");
#line 241
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"{answer}\"");
#line 242
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"{answer}\"");
#line 243
 testRunner.And("I save the CRF page");
#line 244
 testRunner.And("I take a screenshot");
#line 247
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "99"});
#line 248
 testRunner.When("I enter data in CRF", ((string)(null)), table19);
#line 252
 testRunner.And("I save the CRF page");
#line 253
 testRunner.And("I open log line 1");
#line 254
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an.\" is not displayed on Field \"Start Date\"");
#line 255
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is not displayed on Field \"Current Axis Number\"");
#line 256
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.2 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_2OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.2 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.2",
                        "Draft"});
#line 262
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 264
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table20.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "{DateTime}"});
            table20.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "Week 1",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 265
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table20);
#line 269
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.3 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the different data and I enter the same data that originally" +
            " opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_3OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.3 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the different data and I enter the same data that originally" +
                    " opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.3",
                        "Draft"});
#line 275
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 277
 testRunner.Given("I select a Subject \"sub{Var(num2)}\"");
#line 278
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Week 1\"");
#line 279
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table21.AddRow(new string[] {
                        "End Date",
                        "12 Feb 2000"});
            table21.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table21.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 280
 testRunner.And("I enter data in CRF", ((string)(null)), table21);
#line 286
 testRunner.And("I save the CRF page");
#line 287
 testRunner.And("I open log line 2");
#line 288
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an.\" with Requires Response is displayed on Field \"Start Date\"");
#line 289
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" with Requires Response is displayed on Field \"Current Axis Number" +
                    "\"");
#line 290
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Number",
                        "201"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "200"});
#line 291
 testRunner.And("I enter data in CRF", ((string)(null)), table22);
#line 296
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' can not be greater than.\" on F" +
                    "ield \"Start Date\" with \"{answer}\"");
#line 297
 testRunner.And("I answer the Query \"\'Current Distribution Number\' is not equal \'Current Axis Numb" +
                    "er\'.\" on Field \"Current Axis Number\" with \"{answer}\"");
#line 298
 testRunner.And("I save the CRF page");
#line 299
 testRunner.And("I take a screenshot");
#line 300
 testRunner.And("I open log line 2");
#line 301
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 302
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 303
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "98"});
#line 308
 testRunner.When("I enter data in CRF", ((string)(null)), table23);
#line 312
 testRunner.And("I save the CRF page");
#line 313
 testRunner.And("I open log line 2");
#line 314
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' can not be greater th" +
                    "an.\" is displayed on Field \"Start Date\"");
#line 315
 testRunner.And("I verify Query with message \"\'Current Distribution Number\' is not equal \'Current " +
                    "Axis Number\'.\" is displayed on Field \"Current Axis Number\"");
#line 316
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.4 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_4OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.4 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.4",
                        "Draft"});
#line 322
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 324
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table24.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "{DateTime}"});
            table24.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "Week 1",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "{DateTime}"});
#line 325
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table24);
#line 329
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.1 On a Cross Forms log form to Standard form, When a query has been answer" +
            "ed and closed with the different data and I enter the same data that originally " +
            "opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_1OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.1 On a Cross Forms log form to Standard form, When a query has been answer" +
                    "ed and closed with the different data and I enter the same data that originally " +
                    "opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.1",
                        "Draft"});
#line 335
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 337
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table25.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num3>(Edit Check Study 3,prod,Subject Number)}"});
            table25.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 338
 testRunner.And("I create a Subject", ((string)(null)), table25);
#line 342
 testRunner.And("I select Folder \"Week 1\"");
#line 343
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "12 Jan 2000"});
            table26.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table26.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table26.AddRow(new string[] {
                        "Current Axis Number",
                        "101"});
#line 344
 testRunner.And("I enter data in CRF", ((string)(null)), table26);
#line 350
 testRunner.And("I save the CRF page");
#line 351
 testRunner.And("I take a screenshot");
#line 352
 testRunner.And("I select Form \"Informed Consent\" in Folder \"Week 1\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "12 Jan 2000"});
            table27.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table27.AddRow(new string[] {
                        "Original Distribution Number",
                        "100"});
            table27.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 353
 testRunner.And("I enter data in CRF", ((string)(null)), table27);
#line 359
 testRunner.And("I save the CRF page");
#line 360
 testRunner.And("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date\" with Requires Response is displayed on Field \"End Date\"");
#line 361
 testRunner.And("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" with Requires Response is displayed on Field" +
                    " \"Current Distribution Number\"");
#line 362
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "End Date",
                        "13 Jan 2000"});
            table28.AddRow(new string[] {
                        "Current Distribution Number",
                        "100"});
#line 363
 testRunner.And("I enter data in CRF", ((string)(null)), table28);
#line 367
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is not equal to Current Date\" " +
                    "on Field \"End Date\" with \"{answer}\"");
#line 368
 testRunner.And("I answer the Query \"\'Original Distribution Number\' and \'Current Distribution Numb" +
                    "er\' fields are not equal.\" on Field \"Current Distribution Number\" with \"{answer}" +
                    "\"");
#line 369
 testRunner.And("I save the CRF page");
#line 370
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 371
 testRunner.And("I verify Field \"Current Distribution Number\" has NO Query");
#line 372
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table29.AddRow(new string[] {
                        "Current Distribution Number",
                        "101"});
#line 377
 testRunner.When("I enter data in CRF", ((string)(null)), table29);
#line 381
 testRunner.And("I save the CRF page");
#line 382
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is not equal to Curre" +
                    "nt Date\" with Requires Response is displayed on Field \"End Date\"");
#line 383
 testRunner.Then("I verify Query with message \"\'Original Distribution Number\' and \'Current Distribu" +
                    "tion Number\' fields are not equal.\" with Requires Response is displayed on Field" +
                    " \"Current Distribution Number\"");
#line 384
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.2 On a Cross Forms log form to Standard form, When a query has been answer" +
            "ed and closed with the different data and I enter the same data that originally " +
            "opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_2OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.2 On a Cross Forms log form to Standard form, When a query has been answer" +
                    "ed and closed with the different data and I enter the same data that originally " +
                    "opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.2",
                        "Draft"});
#line 390
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 392
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "End Date",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "\'Date Informed Consent Signed\' is not equal to \'Current Date\'.",
                        "{DateTime}"});
            table30.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "Week 1",
                        "Informed Consent",
                        "0",
                        "Current Distribution Number",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "\'Original Distribution Number\' and \'Current Distribution Number\' fields are not e" +
                            "qual.\'",
                        "{DateTime}"});
#line 393
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table30);
#line 397
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.1 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the same data and I enter the same data that originally opened the" +
            " query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_1OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.1 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the same data and I enter the same data that originally opened the" +
                    " query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.1",
                        "Draft"});
#line 403
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 405
 testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 3\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num4>(Edit Check Study 3,prod,Subject Number)}"});
            table31.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 406
 testRunner.And("I create a Subject", ((string)(null)), table31);
#line 410
 testRunner.And("I select Folder \"Screening\"");
#line 411
 testRunner.And("I select Form \"Concomitant Medications\"");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table32.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table32.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table32.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 412
 testRunner.And("I enter data in CRF", ((string)(null)), table32);
#line 418
 testRunner.And("I save the CRF page");
#line 419
 testRunner.And("I take a screenshot");
#line 420
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table33.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table33.AddRow(new string[] {
                        "AE Number",
                        "101"});
            table33.AddRow(new string[] {
                        "Duration",
                        "66"});
#line 421
 testRunner.And("I enter data in CRF", ((string)(null)), table33);
#line 427
 testRunner.And("I save the CRF page");
#line 428
 testRunner.And("I take a screenshot");
#line 429
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 430
 testRunner.And("I open log line 1");
#line 431
 testRunner.And("I verify Query with message \"Date can not be less than.\" with Requires Response i" +
                    "s displayed on Field \"Start Date\"");
#line 432
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" with " +
                    "Requires Response is displayed on Field \"End Date\"");
#line 435
 testRunner.And("I take a screenshot");
#line 436
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"{answ" +
                    "er}\"");
#line 437
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"{answer}\"");
#line 440
 testRunner.And("I save the CRF page");
#line 441
 testRunner.And("I take a screenshot");
#line 442
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table34.AddRow(new string[] {
                        "Start Date",
                        "11 Jan 2000"});
            table34.AddRow(new string[] {
                        "End Date",
                        "09 Feb 2000"});
            table34.AddRow(new string[] {
                        "Original Axis Number",
                        "102"});
            table34.AddRow(new string[] {
                        "Current Axis Number",
                        "65"});
#line 443
 testRunner.And("I enter data in CRF", ((string)(null)), table34);
#line 449
 testRunner.And("I save the CRF page");
#line 450
 testRunner.And("I open log line 1");
#line 451
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 452
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 453
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 454
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 455
 testRunner.And("I take a screenshot");
#line 462
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "10 Jan 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "10 Feb 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "100"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "66"});
#line 463
 testRunner.When("I enter data in CRF", ((string)(null)), table35);
#line 469
 testRunner.And("I save the CRF page");
#line 470
 testRunner.And("I open log line 1");
#line 471
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is not displayed on Fiel" +
                    "d \"Start Date\"");
#line 472
 testRunner.And("I verify Requires Response Query with message \"Date is Less Than Date on the firs" +
                    "t log form.\" is not displayed on Field \"End Date\"");
#line 473
 testRunner.And("I verify Requires Response Query with message \"\'Current Distribution Number\' is g" +
                    "reater than or Equal to \'Current Axis Number\' on Log.\" is not displayed on Field" +
                    " \"Original Axis Number\"");
#line 474
 testRunner.And("I verify Requires Response Query with message \"\'AE Number\' and \'Current Axis Numb" +
                    "er\' cannot equal.\" is not displayed on Field \"Current Axis Number\"");
#line 475
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.2 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the same data and I enter the same data that originally opened the" +
            " query, then queries are displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_2OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.2 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the same data and I enter the same data that originally opened the" +
                    " query, then queries are displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.2",
                        "Draft"});
#line 481
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 483
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table36.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table36.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "End Date",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table36.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Original Axis Number",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table36.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 484
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table36);
#line 490
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.3 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the different data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_3OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.3 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the different data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.3",
                        "Draft"});
#line 498
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 500
 testRunner.Given("I select a Subject \"sub{Var(num4)}\"");
#line 501
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 502
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table37.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table37.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 503
 testRunner.And("I enter data in CRF", ((string)(null)), table37);
#line 509
 testRunner.And("I save the CRF page");
#line 510
 testRunner.And("I take a screenshot");
#line 511
 testRunner.And("I select Form \"Adverse Events\" in Folder \"Screening\"");
#line 512
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table38.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table38.AddRow(new string[] {
                        "AE Number",
                        "201"});
            table38.AddRow(new string[] {
                        "Duration",
                        "77"});
#line 513
 testRunner.And("I enter data in CRF", ((string)(null)), table38);
#line 519
 testRunner.And("I save the CRF page");
#line 520
 testRunner.And("I take a screenshot");
#line 521
 testRunner.And("I select Form \"Concomitant Medications\"");
#line 522
 testRunner.And("I open log line 2");
#line 523
 testRunner.And("I verify Query with message \"Date can not be less than.\" with Requires Response i" +
                    "s displayed on Field \"Start Date\"");
#line 524
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" with " +
                    "Requires Response is displayed on Field \"End Date\"");
#line 527
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Start Date",
                        "11 Feb 2000"});
            table39.AddRow(new string[] {
                        "End Date",
                        "09 Mar 2000"});
            table39.AddRow(new string[] {
                        "Original Axis Number",
                        "202"});
            table39.AddRow(new string[] {
                        "Current Axis Number",
                        "76"});
#line 528
 testRunner.And("I enter data in CRF", ((string)(null)), table39);
#line 534
 testRunner.And("I answer the Query \"Date can not be less than.\" on Field \"Start Date\" with \"{answ" +
                    "er}\"");
#line 535
 testRunner.And("I answer the Query \"Date is Less Than Date on the first log form.\" on Field \"End " +
                    "Date\" with \"{answer}\"");
#line 538
 testRunner.And("I save the CRF page");
#line 539
 testRunner.And("I open log line 2");
#line 540
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 541
 testRunner.And("I verify Field \"End Date\" has NO Query");
#line 542
 testRunner.And("I verify Field \"Original Axis Number\" has NO Query");
#line 543
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 544
 testRunner.And("I take a screenshot");
#line 554
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Start Date",
                        "10 Feb 2000"});
            table40.AddRow(new string[] {
                        "End Date",
                        "10 Mar 2000"});
            table40.AddRow(new string[] {
                        "Original Axis Number",
                        "200"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "77"});
#line 555
 testRunner.When("I enter data in CRF", ((string)(null)), table40);
#line 561
 testRunner.And("I save the CRF page");
#line 562
 testRunner.And("I open log line 2");
#line 563
 testRunner.Then("I verify Query with message \"Date can not be less than.\" is displayed on Field \"S" +
                    "tart Date\"");
#line 564
 testRunner.And("I verify Query with message \"Date is Less Than Date on the first log form.\" is di" +
                    "splayed on Field \"End Date\"");
#line 567
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.4 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the different data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_4OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.4 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the different data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.4",
                        "Draft"});
#line 573
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 575
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table41.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table41.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "End Date",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table41.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Original Axis Number",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'Current Distribution Number\' is greater than or Equal to \'Current Axis Number\' o" +
                            "n Log.",
                        "{DateTime}"});
            table41.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "\'AE Number\' and \'Current Axis Number\' cannot equal.",
                        "{DateTime}"});
#line 576
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table41);
#line 582
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
