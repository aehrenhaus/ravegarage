// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _3Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic3.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "3", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "3")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._3Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 3",
                        "CDM1",
                        "Edit Check Site 3",
                        "30001"});
#line 14
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Edit Check",
                        "Folder",
                        "Form",
                        "Field",
                        "Query Message"});
            table2.AddRow(new string[] {
                        "*Greater Than Log same form",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Assessment Date 2",
                        "Date Field 1 can not be greater than Date Field 2."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Cross Folder",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Assessment Date 1",
                        "Date 1 can not be greater than."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Assessment Date 1",
                        "Informed Consent Date 1 is greater. Please revise."});
            table2.AddRow(new string[] {
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Numeric Field 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log."});
            table2.AddRow(new string[] {
                        "*Is Less Than Log same form",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Date is Less Than Date on first Number field."});
            table2.AddRow(new string[] {
                        "*Is Less Than Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Assessment Date 2",
                        "Date is Less Than Date on the first log form."});
            table2.AddRow(new string[] {
                        "*Is Less Than To Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Assessment Date 1",
                        "Date can not be less than."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Cross Folder",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Numeric Field 2 is not equal Numeric Field 2."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Numeric 2 can not equal each other."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2"});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Same form",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "Numeric Field 2",
                        "Numeric fields are not equal."});
            table2.AddRow(new string[] {
                        "*Greater Than or Equal To Open Query Log same form",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "Informed Consent Date 2",
                        "Dates are not equal."});
#line 18
 testRunner.And("Study \"Edit Check Study 3\" has Draft \"Draft 1\" includes Edit Checks from the tabl" +
                    "e below", ((string)(null)), table2);
#line 33
 testRunner.And("Draft \"Draft 1\" in Study \"Edit Check Study 3\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 34
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 3\" has been pushed to Sit" +
                    "e \"Edit Check Site 3\" in Environment \"Prod\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.1 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that originally opened" +
            " the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_1OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.1 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that originally opened" +
                    " the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.1",
                        "Draft"});
#line 40
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 47
  testRunner.Given("I create a Subject with name: \"sub\", number: \"{nextNumberInStudy(Edit Check Study" +
                    " 3,prod,Subject Number)}\"");
#line 48
  testRunner.And("I select Folder \"Test A Single Edit\"");
#line 49
  testRunner.And("I select Form \"Informed Consent Date Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Informed Consent Date 1",
                        "09 Jan 2000"});
            table3.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "10 Jan 2000"});
            table3.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table3.AddRow(new string[] {
                        "Numeric Field 2",
                        "19"});
#line 50
  testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 56
 testRunner.And("I save the CRF page");
#line 57
 testRunner.And("I take a screenshot");
#line 58
 testRunner.And("I select Form \"Assessment Date Log2\" in Folder \"Test A Single Edit\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table4.AddRow(new string[] {
                        "Assessment Date 2",
                        "11 Jan 2000"});
            table4.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table4.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 59
 testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 65
 testRunner.And("I save the CRF page");
#line 66
 testRunner.And("I verify Query with message \"Informed Consent Date 1 is greater. Please revise.\" " +
                    "with Requires Response is displayed on Field \"Assessment Date 1\"");
#line 67
 testRunner.And("I verify Query with message \"Informed Consent numeric field 2 is not equal to ass" +
                    "essment numeric field 2\" with Requires Response is displayed on Field \"Numeric F" +
                    "ield 2\"");
#line 68
 testRunner.And("I take a screenshot");
#line 69
 testRunner.And("I answer the Query \"Informed Consent Date 1 is greater. Please revise.\" on Field " +
                    "\"Assessment Date 1\" with \".\"");
#line 70
 testRunner.And("I answer the Query \"Informed Consent numeric field 2 is not equal to assessment n" +
                    "umeric field 2\" on Field \"Numeric Field 2\" with \".\"");
#line 71
 testRunner.And("I save the CRF page");
#line 72
 testRunner.And("I take a screenshot");
#line 77
 testRunner.And("I am on CRF page \"Assessment Date Log2\" in Folder \"Test A Single Edit\" in Subject" +
                    " \"SUB301\" in Site \"Edit Check Site 3\" in Study \"Edit Check Study 3\"");
#line 78
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 79
 testRunner.When("I enter data in CRF", ((string)(null)), table5);
#line 83
 testRunner.And("I save the CRF page");
#line 84
    testRunner.Then("the Query with message \"Informed Consent Date 1 is greater. Please revise.\" is no" +
                    "t displayed on Field \"Assessment Date 1\" on log line 1");
#line 85
 testRunner.And("the Query with message \"Informed Consent numeric field 2 is not equal to assessme" +
                    "nt numeric field 2\" is not displayed on Field \"Numeric Field 2\" on log line 1");
#line 86
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.2 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_2OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.2 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.2",
                        "Draft"});
#line 92
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 95
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 96
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table6);
#line 100
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.3 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the different data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_3OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.3 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the different data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.3",
                        "Draft"});
#line 106
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 109
 testRunner.Given("I select a Subject \"{subjectName}\"");
#line 110
 testRunner.And("I select Form \"Assessment Date Log2\" in Folder \"Test A Single Edit\"");
#line 111
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Assessment Date 1",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "Assessment Date 2",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table7.AddRow(new string[] {
                        "Numeric Field 2",
                        "18"});
#line 112
 testRunner.And("I enter data in CRF", ((string)(null)), table7);
#line 118
 testRunner.And("I save the CRF page");
#line 119
 testRunner.And("I open log line 2");
#line 120
 testRunner.And("I verify Query with message \"Informed Consent Date 1 is greater. Please revise.\" " +
                    "with Requires Response is displayed on Field \"Assessment Date 1\"");
#line 121
 testRunner.And("I verify Query with message \"Informed Consent numeric field 2 is not equal to ass" +
                    "essment numeric field 2\" with Requires Response is displayed on Field \"Numeric F" +
                    "ield 2\"");
#line 122
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Assessment Date 1",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Numeric Field 2",
                        "19"});
#line 123
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 127
 testRunner.And("I answer the Query \"Informed Consent Date 1 is greater. Please revise.\" on Field " +
                    "\"Assessment Date 1\" with \".\"");
#line 128
 testRunner.And("I answer the Query \"Informed Consent numeric field 2 is not equal to assessment n" +
                    "umeric field 2\" on Field \"Numeric Field 2\" with \".\"");
#line 129
 testRunner.And("I save the CRF page");
#line 130
 testRunner.And("I take a screenshot");
#line 131
 testRunner.And("I open log line 2");
#line 132
 testRunner.And("I verify Field \"Assessment Date 1\" has NO Query");
#line 133
 testRunner.And("I verify Field \"Numeric Field 2\" has NO Query");
#line 134
 testRunner.And("I take a screenshot");
#line 138
 testRunner.And("I am on CRF page \"Assessment Date Log2\" in Folder \"Test A Single Edit\" in Subject" +
                    " \"SUB301\" in Site \"Edit Check Site 3\" in Study \"Edit Check Study 3\"");
#line 139
 testRunner.And("I edit log line 2");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Assessment Date 1",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 140
 testRunner.When("I enter data in CRF", ((string)(null)), table9);
#line 144
 testRunner.And("I save the CRF page");
#line 145
 testRunner.And("I open log line 2");
#line 146
 testRunner.Then("the Query with message \"Informed Consent Date 1 is greater. Please revise.\" is di" +
                    "splayed on Field \"Assessment Date 1\"");
#line 147
 testRunner.And("the Query with message \"Informed Consent numeric field 2 is not equal to assessme" +
                    "nt numeric field 2\" is displayed on Field \"Numeric Field 2\"");
#line 148
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.1.4 On a Cross Form Standard form to log form, When a query has been answere" +
            "d and closed with the same data and I enter the same data that originally opened" +
            " the query, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_1_4OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.1.4 On a Cross Form Standard form to log form, When a query has been answere" +
                    "d and closed with the same data and I enter the same data that originally opened" +
                    " the query, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.4",
                        "Draft"});
#line 154
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 156
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 157
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table10);
#line 161
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.1 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_1OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.1 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.1",
                        "Draft"});
#line 167
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 170
  testRunner.Given("I create a Subject with name: \"sub\", number: \"{nextNumberInStudy(Edit Check Study" +
                    " 3,prod,Subject Number)}\"");
#line 171
  testRunner.And("I select Folder \"Test A Single Edit\"");
#line 172
  testRunner.And("I select Form \"Informed Consent Date Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Informed Consent Date 1",
                        "10 Jan 2000"});
            table11.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "10 Feb 2000"});
            table11.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table11.AddRow(new string[] {
                        "Numeric Field 2",
                        "200"});
#line 173
  testRunner.And("I enter data in CRF", ((string)(null)), table11);
#line 179
 testRunner.And("I save the CRF page");
#line 180
 testRunner.And("I take a screenshot");
#line 181
 testRunner.And("I select Form \"Assessment Date Log2\" in Folder \"Test B Single Derivation\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Assessment Date 1",
                        "09 Jan 2000"});
            table12.AddRow(new string[] {
                        "Assessment Date 2",
                        "11 Feb 2000"});
            table12.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table12.AddRow(new string[] {
                        "Numeric Field 2",
                        "99"});
#line 182
 testRunner.And("I enter data in CRF", ((string)(null)), table12);
#line 188
 testRunner.And("I save the CRF page");
#line 189
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Assessment Date 1\"");
#line 190
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 2\"");
#line 191
 testRunner.And("I take a screenshot");
#line 192
 testRunner.And("I open log line 1");
#line 193
 testRunner.And("I answer the Query \"{message}\" on Field \"Assessment Date 1\" with \"{answer}\"");
#line 194
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 2\" with \"{answer}\"");
#line 195
 testRunner.And("I save the CRF page");
#line 196
 testRunner.And("I take a screenshot");
#line 200
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Assessment Date 1",
                        "09 Jan 2000"});
            table13.AddRow(new string[] {
                        "Numeric Field 2",
                        "99"});
#line 201
 testRunner.When("I enter data in CRF", ((string)(null)), table13);
#line 205
 testRunner.And("I save the CRF page");
#line 206
 testRunner.Then("the Query with message \"\" is not displayed on Field \"Assessment Date 1\"");
#line 207
 testRunner.And("the Query with message \"\" is not displayed on Field \"Numeric Field 2\"");
#line 208
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.2 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_2OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.2 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.2",
                        "Draft"});
#line 214
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 216
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table14.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "09 Jan 2000",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table14.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "99",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 217
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table14);
#line 221
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.3 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the different data and I enter the same data that originally" +
            " opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_3OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.3 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the different data and I enter the same data that originally" +
                    " opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.3",
                        "Draft"});
#line 227
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 229
 testRunner.Given("I select a Subject \"{subjectName}\"");
#line 230
 testRunner.And("I select Form \"Assessment Date Log2\" in Folder \"Test B Single Derivation\"");
#line 231
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table15.AddRow(new string[] {
                        "Assessment Date 2",
                        "12 Feb 2000"});
            table15.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table15.AddRow(new string[] {
                        "Numeric Field 2",
                        "98"});
#line 232
 testRunner.And("I enter data in CRF", ((string)(null)), table15);
#line 238
 testRunner.And("I save the CRF page");
#line 239
 testRunner.And("I open log line 2");
#line 240
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Assessment Date 1\"");
#line 241
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 2\"");
#line 242
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Assessment Date 1",
                        "10 Jan 2000"});
            table16.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table16.AddRow(new string[] {
                        "Numeric Field 2",
                        "200"});
#line 243
 testRunner.And("I enter data in CRF", ((string)(null)), table16);
#line 248
 testRunner.And("I answer the Query \"{message}\" on Field \"Assessment Date 1\" with \"{answer}\"");
#line 249
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 2\" with \"{answer}\"");
#line 250
 testRunner.And("I save the CRF page");
#line 251
 testRunner.And("I take a screenshot");
#line 252
 testRunner.And("I verify Field \"Assessment Date 1\" has NO Query");
#line 253
 testRunner.And("I verify Field \"Numeric Field 2\" has NO Query");
#line 254
 testRunner.And("I take a screenshot");
#line 258
 testRunner.And("I add a new log line");
#line 259
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table17.AddRow(new string[] {
                        "Numeric Field 2",
                        "98"});
#line 260
 testRunner.When("I enter data in CRF", ((string)(null)), table17);
#line 264
 testRunner.And("I save the CRF page");
#line 265
 testRunner.Then("the Query with message \"\" is displayed on Field \"Assessment Date 1\"");
#line 266
 testRunner.And("the Query with message \"\" is displayed on Field \"Numeric Field 2\"");
#line 267
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.2.4 On a Cross Folder Standard form to log form, When a query has been answe" +
            "red and closed with the same data and I enter the same data that originally open" +
            "ed the query, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_2_4OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.2.4 On a Cross Folder Standard form to log form, When a query has been answe" +
                    "red and closed with the same data and I enter the same data that originally open" +
                    "ed the query, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.4",
                        "Draft"});
#line 273
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 275
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table18.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table18.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "98",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 276
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table18);
#line 280
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.1 On a Cross Forms log form to Standard form, When a query has been answer" +
            "ed and closed with the different data and I enter the same data that originally " +
            "opened the query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_1OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.1 On a Cross Forms log form to Standard form, When a query has been answer" +
                    "ed and closed with the different data and I enter the same data that originally " +
                    "opened the query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.1",
                        "Draft"});
#line 286
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 288
 testRunner.Given("I create a Subject with name: \"sub\", number: \"{nextNumberInStudy(Edit Check Study" +
                    " 3,prod,Subject Number)}\"");
#line 289
 testRunner.And("I select Folder \"Test B Single Derivation\"");
#line 290
 testRunner.And("I select Form \"Assessment Date Log2\"");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Assessment Date 1",
                        "12 Jan 2000"});
            table19.AddRow(new string[] {
                        "Assessment Date 2",
                        "11 Jan 2000"});
            table19.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table19.AddRow(new string[] {
                        "Numeric Field 2",
                        "101"});
#line 291
 testRunner.And("I enter data in CRF", ((string)(null)), table19);
#line 297
 testRunner.And("I save the CRF page");
#line 298
 testRunner.And("I take a screenshot");
#line 299
 testRunner.And("I select Form \"Informed Consent Date Form 1\" in Folder \"Test B Single Derivation\"" +
                    "");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Informed Consent Date 1",
                        "12 Jan 2000"});
            table20.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "11 Jan 2000"});
            table20.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table20.AddRow(new string[] {
                        "Numeric Field 2",
                        "101"});
#line 300
 testRunner.And("I enter data in CRF", ((string)(null)), table20);
#line 306
 testRunner.And("I save the CRF page");
#line 307
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Informed Consent Date 2\"");
#line 308
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 2\"");
#line 309
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "13 Jan 2000"});
            table21.AddRow(new string[] {
                        "Numeric Field 2",
                        "100"});
#line 310
 testRunner.And("I enter data in CRF", ((string)(null)), table21);
#line 314
 testRunner.And("I answer the Query \"{message}\" on Field \"Informed Consent Date 2\" with \"{answer}\"" +
                    "");
#line 315
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 2\" with \"{answer}\"");
#line 316
 testRunner.And("I save the CRF page");
#line 317
 testRunner.And("I verify Field \"Informed Consent Date 2\" has NO Query");
#line 318
 testRunner.And("I verify Field \"Numeric Field 2\" has NO Query");
#line 319
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "11 Jan 2000"});
            table22.AddRow(new string[] {
                        "Numeric Field 2",
                        "101"});
#line 323
 testRunner.When("I enter data in CRF", ((string)(null)), table22);
#line 327
 testRunner.And("I save the CRF page");
#line 328
 testRunner.Then("the Query with message \"\" is displayed on Field \"Informed Consent Date 2\"");
#line 329
 testRunner.And("the Query with message \"\" is displayed on Field  \"Numeric Field 2\"");
#line 330
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.3.2 On a Cross Forms log form to Standard form, When a query has been answer" +
            "ed and closed with the different data and I enter the same data that originally " +
            "opened the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_3_2OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.3.2 On a Cross Forms log form to Standard form, When a query has been answer" +
                    "ed and closed with the different data and I enter the same data that originally " +
                    "opened the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.2",
                        "Draft"});
#line 336
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 338
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table23.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Informed Consent Date 2",
                        "11 Jan 2000",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Informed Consent Date 2",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table23.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Numeric Field 2",
                        "101",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Numeric Field 2",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 339
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table23);
#line 343
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.1 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the same data and I enter the same data that originally opened the" +
            " query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_1OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.1 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the same data and I enter the same data that originally opened the" +
                    " query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.1",
                        "Draft"});
#line 349
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 351
 testRunner.Given("I create a Subject with name: \"sub\", number: \"{nextNumberInStudy(Edit Check Study" +
                    " 3,prod,Subject Number)}\"");
#line 352
 testRunner.And("I select Folder \"Test A Single Edit\"");
#line 353
 testRunner.And("I select Form \"Assessment Date Log2\"");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Assessment Date 1",
                        "10 Jan 2000"});
            table24.AddRow(new string[] {
                        "Assessment Date 2",
                        "10 Feb 2000"});
            table24.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table24.AddRow(new string[] {
                        "Numeric Field 2",
                        "66"});
#line 354
 testRunner.And("I enter data in CRF", ((string)(null)), table24);
#line 360
 testRunner.And("I take a screenshot");
#line 361
 testRunner.And("I select Form \"Assessment Date Log3\" in Folder \"Test A Single Edit\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "Date Field 1",
                        "11 Jan 2000"});
            table25.AddRow(new string[] {
                        "Date Field 2",
                        "09 Feb 2000"});
            table25.AddRow(new string[] {
                        "Numeric Field 1",
                        "101"});
            table25.AddRow(new string[] {
                        "Numeric Field 2",
                        "66"});
#line 362
 testRunner.And("I enter data in CRF", ((string)(null)), table25);
#line 368
 testRunner.And("I take a screenshot");
#line 369
 testRunner.And("I select Form \"\"Assessment Date Log2\"");
#line 370
 testRunner.And("I open log line 1");
#line 371
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Assessment Date 1\"\"");
#line 372
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Assessment Date 2\"");
#line 373
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 1\"");
#line 374
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 2\"");
#line 375
 testRunner.And("I take a screenshot");
#line 376
 testRunner.And("I answer the Query \"{message}\" on Field \"Assessment Date 1\" with \"{answer}\"");
#line 377
 testRunner.And("I answer the Query \"{message}\" on Field \"Assessment Date 2\" with \"{answer}\"");
#line 378
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 1\" with \"{answer}\"");
#line 379
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 2\" with \"{answer}\"");
#line 380
 testRunner.And("I save the CRF page");
#line 381
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Assessment Date 1",
                        "11 Jan 2000"});
            table26.AddRow(new string[] {
                        "Assessment Date 2",
                        "09 Feb 2000"});
            table26.AddRow(new string[] {
                        "Numeric Field 1",
                        "102"});
            table26.AddRow(new string[] {
                        "Numeric Field 2",
                        "65"});
#line 382
 testRunner.And("I enter data in CRF", ((string)(null)), table26);
#line 388
 testRunner.And("I save the CRF page");
#line 389
 testRunner.And("I verify Field \"Assessment Date 1\" has NO Query");
#line 390
 testRunner.And("I verify Field \"Assessment Date 2\" has NO Query");
#line 391
 testRunner.And("I verify Field \"Numeric Field 1\" has NO Query");
#line 392
 testRunner.And("I verify Field \"Numeric Field 2\" has NO Query");
#line 393
 testRunner.And("I take a screenshot");
#line 400
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Assessment Date 1",
                        "10 Jan 2000"});
            table27.AddRow(new string[] {
                        "Assessment Date 2",
                        "10 Feb 2000"});
            table27.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table27.AddRow(new string[] {
                        "Numeric Field 2",
                        "66"});
#line 401
 testRunner.When("I enter data in CRF", ((string)(null)), table27);
#line 407
 testRunner.And("I save the CRF page");
#line 408
 testRunner.Then("the Query with message \"\" is not displayed on Field \"Assessment Date 1\"");
#line 409
 testRunner.And("the Query with message \"\" is not displayed on Field \"Assessment Date 2\"");
#line 410
 testRunner.And("the Query with message \"\" is not displayed on Field \"Numeric Field 1\"");
#line 411
 testRunner.And("the Query with message \"\" is not displayed on Field \"Numeric Field 2\"");
#line 412
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.2 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the same data and I enter the same data that originally opened the" +
            " query, then queries are displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_2OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.2 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the same data and I enter the same data that originally opened the" +
                    " query, then queries are displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.2",
                        "Draft"});
#line 418
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 420
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table28.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "10 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table28.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 2",
                        "10 Feb 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 2",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table28.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table28.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "66",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 421
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table28);
#line 427
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.3 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the different data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_3OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.3 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the different data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.3",
                        "Draft"});
#line 435
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 437
 testRunner.Given("I select a Subject \"{subjectName}\"");
#line 438
 testRunner.And("I select Form \"Assessment Date Log2\" in Folder \"Test A Single Edit\"");
#line 439
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Assessment Date 1",
                        "10 Feb 2000"});
            table29.AddRow(new string[] {
                        "Assessment Date 2",
                        "10 Mar 2000"});
            table29.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table29.AddRow(new string[] {
                        "Numeric Field 2",
                        "77"});
#line 440
 testRunner.And("I enter data in CRF", ((string)(null)), table29);
#line 446
 testRunner.And("I save the CRF page");
#line 447
 testRunner.And("I take a screenshot");
#line 448
 testRunner.And("I select Form \"Assessment Date Log3\" in Folder \"Test A Single Edit\"");
#line 449
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Date Field 1",
                        "11 Feb 2000"});
            table30.AddRow(new string[] {
                        "Date Field 2",
                        "09 Mar 2000"});
            table30.AddRow(new string[] {
                        "Numeric Field 1",
                        "201"});
            table30.AddRow(new string[] {
                        "Numeric Field 2",
                        "77"});
#line 450
 testRunner.And("I enter data in CRF", ((string)(null)), table30);
#line 456
 testRunner.And("I take a screenshot");
#line 457
 testRunner.And("I select Form \"\"Assessment Date Log2\"");
#line 458
 testRunner.And("I open log line 2");
#line 459
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Assessment Date 1\"\"");
#line 460
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Assessment Date 2\"");
#line 461
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 1\"");
#line 462
 testRunner.And("I verify Query with message \"{message}\" with Requires Response is displayed on Fi" +
                    "eld \"Numeric Field 2\"");
#line 463
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Assessment Date 1",
                        "11 Feb 2000"});
            table31.AddRow(new string[] {
                        "Assessment Date 2",
                        "09 Mar 2000"});
            table31.AddRow(new string[] {
                        "Numeric Field 1",
                        "202"});
            table31.AddRow(new string[] {
                        "Numeric Field 2",
                        "76"});
#line 464
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 470
 testRunner.And("I answer the Query \"{message}\" on Field \"Assessment Date 1\" with \"{answer}\"");
#line 471
 testRunner.And("I answer the Query \"{message}\" on Field \"Assessment Date 2\" with \"{answer}\"");
#line 472
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 1\" with \"{answer}\"");
#line 473
 testRunner.And("I answer the Query \"{message}\" on Field \"Numeric Field 2\" with \"{answer}\"");
#line 474
 testRunner.And("I save the CRF page");
#line 475
 testRunner.And("I verify Field \"Assessment Date 1\" has NO Query");
#line 476
 testRunner.And("I verify Field \"Assessment Date 2\" has NO Query");
#line 477
 testRunner.And("I verify Field \"Numeric Field 1\" has NO Query");
#line 478
 testRunner.And("I verify Field \"Numeric Field 2\" has NO Query");
#line 479
 testRunner.And("I take a screenshot");
#line 489
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "Assessment Date 1",
                        "10 Feb 2000"});
            table32.AddRow(new string[] {
                        "Assessment Date 2",
                        "10 Mar 2000"});
            table32.AddRow(new string[] {
                        "Numeric Field 1",
                        "200"});
            table32.AddRow(new string[] {
                        "Numeric Field 2",
                        "77"});
#line 490
 testRunner.When("I enter data in CRF", ((string)(null)), table32);
#line 496
 testRunner.And("I save the CRF page");
#line 497
 testRunner.Then("the Query with message \"\" is displayed on Field \"Assessment Date 1\"");
#line 498
 testRunner.And("the Query with message \"\" is displayed on Field \"Assessment Date 2\"");
#line 499
 testRunner.And("the Query with message \"\" is displayed on Field \"Numeric Field 1\"");
#line 500
 testRunner.And("the Query with message \"\" is displayed on Field \"Numeric Field 2\"");
#line 501
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_3.4.4 On a Cross Forms log form to log form, When a query has been answered an" +
            "d closed with the different data and I enter the same data that originally opene" +
            "d the query, then queries are not displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void PB_3_4_4OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_3.4.4 On a Cross Forms log form to log form, When a query has been answered an" +
                    "d closed with the different data and I enter the same data that originally opene" +
                    "d the query, then queries are not displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.4",
                        "Draft"});
#line 507
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line 509
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table33.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "10 Feb 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 2",
                        "10 Mar 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 2",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table33.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "77",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 510
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table33);
#line 516
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
