// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class US17415_DT14115Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US17415_DT14115.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US17415_DT14115", @"When a non-visible (View Restricted) field, that does not require signature, on a form with other fields that do require signature and have already been signed, is made visible (View Restriction is removed), then the signature on the visible fields should not break.
As a Rave Administrator
When I have a form that has visible and non-visible fields
And the visible fields require signature
And the non-visible fields do not require signature
And the visible fields are signed
When the non-visible fields are made visible
Then the signature on the visible fields is not broken", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "US17415_DT14115")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.US17415_DT14115Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 13
#line 15
 testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB_US17415_01 As an Investigator, when I sign the \"Adverse Events\" form, the for" +
            "m level signature does not break when the \"Added 1 For Extra Review\" field is ma" +
            "de visible.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US17415_DT14115")]
        public virtual void PB_US17415_01AsAnInvestigatorWhenISignTheAdverseEventsFormTheFormLevelSignatureDoesNotBreakWhenTheAdded1ForExtraReviewFieldIsMadeVisible_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB_US17415_01 As an Investigator, when I sign the \"Adverse Events\" form, the for" +
                    "m level signature does not break when the \"Added 1 For Extra Review\" field is ma" +
                    "de visible.", new string[] {
                        "release_564_2012.1.0",
                        "PB_US17415_01",
                        "Draft"});
#line 75
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line 77
 testRunner.And("I select Study \"**US17415_DT14115\" and Site \"Site 01\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data",
                        "Control Type"});
            table1.AddRow(new string[] {
                        "Subject Name",
                        "SUB",
                        "textbox"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}",
                        "textbox"});
#line 78
 testRunner.And("I create a Subject", ((string)(null)), table1);
#line 82
 testRunner.And("I select link \"Adverse Events\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data",
                        "Control Type"});
            table2.AddRow(new string[] {
                        "AE Number",
                        "01JAN2012",
                        "textbox"});
            table2.AddRow(new string[] {
                        "Description of Adverse Events",
                        "Cramps",
                        "textbox"});
            table2.AddRow(new string[] {
                        "Ready for Extra Review",
                        "False",
                        "checkbox"});
#line 83
 testRunner.And("I enter data in CRF and save", ((string)(null)), table2);
#line 88
 testRunner.And("I click button \"Sign and Save\"");
#line 90
 testRunner.And("I sign the form with username \"defuser\" and password \"password\"");
#line 91
 testRunner.And("I take a screenshot");
#line 92
 testRunner.And("I open log line 1 for edit");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field Label",
                        "Data",
                        "Control Type"});
            table3.AddRow(new string[] {
                        "Ready for Extra Review",
                        "True",
                        "checkbox"});
#line 93
 testRunner.When("I enter data in CRF and save", ((string)(null)), table3);
#line 97
 testRunner.And("I open log line 1 for edit");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field Label",
                        "Control Type"});
            table4.AddRow(new string[] {
                        "Added 1 For Extra Review",
                        "textbox"});
            table4.AddRow(new string[] {
                        "Added 2 For Extra Review",
                        "textbox"});
#line 99
 testRunner.And("I should see", ((string)(null)), table4);
#line 103
 testRunner.And("I take a screenshot");
#line 104
 testRunner.And("I click audit on Field \"Ready for Extra Review\"");
#line 109
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB_US17415_02 As an Investigator, when I sign the \"Demographics\" form, the form " +
            "level signature does not break when the ICDTAGE field is made visible.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US17415_DT14115")]
        public virtual void PB_US17415_02AsAnInvestigatorWhenISignTheDemographicsFormTheFormLevelSignatureDoesNotBreakWhenTheICDTAGEFieldIsMadeVisible_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB_US17415_02 As an Investigator, when I sign the \"Demographics\" form, the form " +
                    "level signature does not break when the ICDTAGE field is made visible.", new string[] {
                        "release_564_2012.1.0",
                        "PB_US17415_02",
                        "Draft"});
#line 115
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line 117
 testRunner.And("I select Study \"**US17415_DT14115\" and Site \"Site 01\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data",
                        "Control Type"});
            table5.AddRow(new string[] {
                        "Subject Name",
                        "SUB",
                        "textbox"});
            table5.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}",
                        "textbox"});
#line 118
 testRunner.And("I create a Subject", ((string)(null)), table5);
#line 122
 testRunner.And("I note down \"crfversion\" to \"ver#\"");
#line 123
 testRunner.And("I select link \"Demographics\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field Label",
                        "Data",
                        "Control Type"});
            table6.AddRow(new string[] {
                        "Gender",
                        "Male",
                        "dropdownlist"});
            table6.AddRow(new string[] {
                        "Ethnicity",
                        "Asian",
                        "dropdownlist"});
            table6.AddRow(new string[] {
                        "Country",
                        "Canada",
                        "dropdownlist"});
            table6.AddRow(new string[] {
                        "Informed Consent Date",
                        "12 JUL 2012",
                        "dateTime"});
#line 124
 testRunner.And("I enter data in CRF and save", ((string)(null)), table6);
#line 130
 testRunner.And("I take a screenshot");
#line 131
 testRunner.And("I click button \"Sign and Save\"");
#line 134
 testRunner.And("I take a screenshot");
#line 136
 testRunner.And("I navigate to \"Home\"");
#line 137
 testRunner.And("I navigate to \"Architect\"");
#line 138
 testRunner.And("I select link \"**US17415_DT14115\" in \"Active Projects\"");
#line 139
 testRunner.And("I select link \"Target Draft\" in \"CRF Drafts\"");
#line 140
 testRunner.And("I publish CRF Version \"Target{RndNum<TV#>(3)}\"");
#line 141
 testRunner.And("I note down \"crfversion\" to \"newversion#\"");
#line 142
 testRunner.And("I select Study \"**US17415_DT14115\" in \"Header\"");
#line 143
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 144
 testRunner.And("I choose \"V1 ({Var(ver#)})\" from \"Source CRF\"");
#line 145
 testRunner.And("I choose \"{Var(newversion#)}\" from \"Target CRF\"");
#line 146
 testRunner.And("I click button \"Create Plan\"");
#line 147
 testRunner.And("I take a screenshot");
#line 148
 testRunner.And("I navigate to \"Execute Plan\"");
#line 149
 testRunner.And("I migrate all Subjects");
#line 150
 testRunner.And("I select link \"Migration Results\"");
#line 151
 testRunner.And("I verify Job Status is set to Complete");
#line 152
 testRunner.And("I take a screenshot");
#line 153
 testRunner.And("I navigate to \"Home\"");
#line 154
 testRunner.And("I select Study \"**US17415_DT14115\" and Site \"Site 01\"");
#line 155
 testRunner.And("I select link \"Demographics\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field Label",
                        "Control Type"});
            table7.AddRow(new string[] {
                        "Derived Age",
                        "Text"});
#line 157
 testRunner.And("I should see", ((string)(null)), table7);
#line 160
 testRunner.And("I take a screenshot");
#line 161
 testRunner.And("I click audit on Field \"Gender\"");
#line 166
 testRunner.And("I take a screenshot");
#line 167
 testRunner.And("I select Form \"Demographics\" in \"Header\"");
#line 168
 testRunner.And("I click audit on Field \"Ethnicity\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table8.AddRow(new string[] {
                        "Signature",
                        ""});
#line 169
 testRunner.And("I verify Audits exist", ((string)(null)), table8);
#line 172
 testRunner.And("I take a screenshot");
#line 173
 testRunner.And("I select Form \"Demographics\" in \"Header\"");
#line 174
 testRunner.And("I click audit on Field \"Country\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table9.AddRow(new string[] {
                        "Signature",
                        ""});
#line 175
 testRunner.And("I verify Audits exist", ((string)(null)), table9);
#line 178
 testRunner.And("I take a screenshot");
#line 179
 testRunner.And("I select Form \"Demographics\" in \"Header\"");
#line 180
 testRunner.And("I click audit on Field \"Informed Consent Date\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table10.AddRow(new string[] {
                        "Signature",
                        ""});
#line 181
 testRunner.And("I verify Audits exist", ((string)(null)), table10);
#line 184
 testRunner.And("I take a screenshot");
#line 185
 testRunner.And("I select Form \"Demographics\" in \"Header\"");
#line 186
 testRunner.And("I click audit on Field \"Derived Age\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table11.AddRow(new string[] {
                        "Signature",
                        ""});
#line 187
 testRunner.And("I verify Audits exist", ((string)(null)), table11);
#line 190
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB_US17415_03 As an Investigator, when I sign the \"Test Demographics\" form, the " +
            "form level signature does not break when the ICDTAGE field is made visible.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "US17415_DT14115")]
        public virtual void PB_US17415_03AsAnInvestigatorWhenISignTheTestDemographicsFormTheFormLevelSignatureDoesNotBreakWhenTheICDTAGEFieldIsMadeVisible_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB_US17415_03 As an Investigator, when I sign the \"Test Demographics\" form, the " +
                    "form level signature does not break when the ICDTAGE field is made visible.", new string[] {
                        "release_564_2012.1.0",
                        "PB_US17415_03",
                        "Draft"});
#line 196
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line 198
 testRunner.And("I select Study \"**US17415_DT14115\" and Site \"Site 01\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data",
                        "Control Type"});
            table12.AddRow(new string[] {
                        "Subject Name",
                        "SUB",
                        "textbox"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}",
                        "textbox"});
#line 199
 testRunner.And("I create a Subject", ((string)(null)), table12);
#line 203
 testRunner.And("I note down \"crfversion\" to \"ver1#\"");
#line 204
 testRunner.And("I select link \"Test Demographics\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field Label",
                        "Data",
                        "Control Type"});
            table13.AddRow(new string[] {
                        "Gender",
                        "Male",
                        "dropdownlist"});
            table13.AddRow(new string[] {
                        "Ethnicity",
                        "Asian",
                        "dropdownlist"});
            table13.AddRow(new string[] {
                        "Country",
                        "Canada",
                        "dropdownlist"});
            table13.AddRow(new string[] {
                        "Informed Consent Date",
                        "12 JUL 2012",
                        "dateTime"});
#line 205
 testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line 211
 testRunner.And("I take a screenshot");
#line 212
 testRunner.And("I click button \"Sign and Save\"");
#line 215
 testRunner.And("I take a screenshot");
#line 217
 testRunner.And("I navigate to \"Home\"");
#line 218
 testRunner.And("I navigate to \"Architect\"");
#line 219
 testRunner.And("I select link \"**US17415_DT14115\" in \"Active Projects\"");
#line 220
 testRunner.And("I select link \"Target Draft\" in \"CRF Drafts\"");
#line 221
 testRunner.And("I publish CRF Version \"Target1{RndNum<TV#>(3)}\"");
#line 222
 testRunner.And("I note down \"crfversion\" to \"newversion1#\"");
#line 223
 testRunner.And("I select Study \"**US17415_DT14115\" in \"Header\"");
#line 224
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 225
 testRunner.And("I choose \"V1 ({Var(ver1#)})\" from \"Source CRF\"");
#line 226
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Target CRF\"");
#line 227
 testRunner.And("I click button \"Create Plan\"");
#line 228
 testRunner.And("I take a screenshot");
#line 229
 testRunner.And("I navigate to \"Execute Plan\"");
#line 230
 testRunner.And("I migrate all Subjects");
#line 231
 testRunner.And("I select link \"Migration Results\"");
#line 232
 testRunner.And("I verify Job Status is set to Complete");
#line 233
 testRunner.And("I take a screenshot");
#line 234
 testRunner.And("I navigate to \"Home\"");
#line 235
 testRunner.And("I select Study \"**US17415_DT14115\" and Site \"Site 01\"");
#line 236
 testRunner.And("I select link \"Test Demographics\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field Label",
                        "Control Type"});
            table14.AddRow(new string[] {
                        "Derived Age",
                        "Text"});
#line 238
 testRunner.And("I should see", ((string)(null)), table14);
#line 241
 testRunner.And("I take a screenshot");
#line 242
 testRunner.And("I click audit on Field \"Gender\"");
#line 247
 testRunner.And("I take a screenshot");
#line 248
 testRunner.And("I select Form \" Test Demographics\" in \"Header\"");
#line 249
 testRunner.And("I click audit on Field \"Ethnicity\"");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table15.AddRow(new string[] {
                        "Signature",
                        ""});
#line 250
 testRunner.And("I verify Audits exist", ((string)(null)), table15);
#line 253
 testRunner.And("I take a screenshot");
#line 254
 testRunner.And("I select Form \"Test Demographics\" in \"Header\"");
#line 255
 testRunner.And("I click audit on Field \"Country\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table16.AddRow(new string[] {
                        "Signature",
                        ""});
#line 256
 testRunner.And("I verify Audits exist", ((string)(null)), table16);
#line 259
 testRunner.And("I take a screenshot");
#line 260
 testRunner.And("I select Form \"Test Demographics\" in \"Header\"");
#line 261
 testRunner.And("I click audit on Field \"Informed Consent Date\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table17.AddRow(new string[] {
                        "Signature",
                        ""});
#line 262
 testRunner.And("I verify Audits exist", ((string)(null)), table17);
#line 265
 testRunner.And("I take a screenshot");
#line 266
 testRunner.And("I select Form \"Test Demographics\" in \"Header\"");
#line 267
 testRunner.And("I click audit on Field \"Derived Age\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Message"});
            table18.AddRow(new string[] {
                        "Signature",
                        ""});
#line 268
 testRunner.And("I verify Audits exist", ((string)(null)), table18);
#line 271
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
