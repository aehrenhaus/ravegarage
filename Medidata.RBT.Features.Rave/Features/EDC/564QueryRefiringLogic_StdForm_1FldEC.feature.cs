// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _564QueryRefiringLogic_StdForm_1FldECFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic_StdForm_1FldEC.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "564QueryRefiringLogic_StdForm_1FldEC", "As a Rave user\r\nWhen I manually close a query or cancel, the query should not re-" +
                    "fire if the exact same data is entered into the system\r\nSo that I don\'t have to " +
                    "re-enter the exact same response", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "564QueryRefiringLogic_StdForm_1FldEC")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._564QueryRefiringLogic_StdForm_1FldECFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 13
#line 14
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "Defuser",
                        "Standard Study",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 15
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 18
 testRunner.And("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_01A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = true and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_01AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_01A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = true and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_01A",
                        "Validation"});
#line 23
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table2.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 24
 testRunner.And("I create a Subject", ((string)(null)), table2);
#line 29
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 30
 testRunner.And("I enter data in CRF and save", ((string)(null)), table3);
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table4.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 33
    testRunner.And("I verify Query is displayed", ((string)(null)), table4);
#line 36
 testRunner.And("I take a screenshot");
#line 37
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line 38
 testRunner.And("I save the CRF page");
#line 39
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 40
 testRunner.And("I save the CRF page");
#line 41
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 42
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 43
 testRunner.And("I enter data in CRF and save", ((string)(null)), table5);
#line 46
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 47
 testRunner.And("I enter data in CRF and save", ((string)(null)), table6);
#line 50
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table7.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 51
 testRunner.And("I verify Query is not displayed", ((string)(null)), table7);
#line 54
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_01B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I entered good data in field A, if I then entered the same bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_01BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_01B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I entered good data in field A, if I then entered the same bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_01B",
                        "Validation"});
#line 59
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table8.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table8.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 60
    testRunner.And("I create a Subject", ((string)(null)), table8);
#line 65
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 66
 testRunner.And("I enter data in CRF and save", ((string)(null)), table9);
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table10.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 69
    testRunner.And("I verify Query is displayed", ((string)(null)), table10);
#line 72
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 73
 testRunner.And("I enter data in CRF and save", ((string)(null)), table11);
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table12.AddRow(new string[] {
                        "Age 2"});
#line 76
 testRunner.And("I verify Query is not displayed", ((string)(null)), table12);
#line 79
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 80
 testRunner.And("I enter data in CRF and save", ((string)(null)), table13);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table14.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 83
    testRunner.And("I verify Query is displayed", ((string)(null)), table14);
#line 86
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_01C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and I entered good data in field A, if I then entered the same bad data in field A, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_01CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_01C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and I entered good data in field A, if I then entered the same bad data in field A, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_01C",
                        "Validation"});
#line 91
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table15.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table15.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 92
    testRunner.And("I create a Subject", ((string)(null)), table15);
#line 97
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 98
 testRunner.And("I enter data in CRF and save", ((string)(null)), table16);
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table17.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 101
    testRunner.And("I verify Query is displayed", ((string)(null)), table17);
#line 104
 testRunner.And("I take a screenshot");
#line 105
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 106
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table18.AddRow(new string[] {
                        "Age 3"});
#line 107
 testRunner.And("I verify Query is not displayed", ((string)(null)), table18);
#line 110
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 111
 testRunner.And("I enter data in CRF and save", ((string)(null)), table19);
#line 114
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 115
 testRunner.And("I enter data in CRF and save", ((string)(null)), table20);
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table21.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 118
 testRunner.And("I verify Query is not displayed", ((string)(null)), table21);
#line 121
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_01D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_01DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_01D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_01D",
                        "Validation"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table22.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table22.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 127
 testRunner.And("I create a Subject", ((string)(null)), table22);
#line 132
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 133
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table24.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 136
    testRunner.And("I verify Query is displayed", ((string)(null)), table24);
#line 139
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 140
 testRunner.And("I enter data in CRF and save", ((string)(null)), table25);
#line 143
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 144
 testRunner.And("I save the CRF page");
#line 145
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 146
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 147
 testRunner.And("I enter data in CRF and save", ((string)(null)), table26);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table27.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 150
   testRunner.And("I verify Query is displayed", ((string)(null)), table27);
#line 153
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_02A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_02AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_02A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_02A",
                        "Validation"});
#line 158
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table28.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table28.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 159
 testRunner.And("I create a Subject", ((string)(null)), table28);
#line 164
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 165
 testRunner.And("I enter data in CRF and save", ((string)(null)), table29);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table30.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 168
    testRunner.And("I verify Query is displayed", ((string)(null)), table30);
#line 171
 testRunner.And("I take a screenshot");
#line 172
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line 173
 testRunner.And("I save the CRF page");
#line 174
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 175
 testRunner.And("I save the CRF page");
#line 176
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 177
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 178
 testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 181
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "Age 1",
                        "16"});
#line 182
 testRunner.And("I enter data in CRF and save", ((string)(null)), table32);
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table33.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 185
 testRunner.And("I verify Query is displayed", ((string)(null)), table33);
#line 188
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_02B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_02BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_02B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_02B",
                        "Validation"});
#line 193
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table34.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 194
    testRunner.And("I create a Subject", ((string)(null)), table34);
#line 199
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 200
 testRunner.And("I enter data in CRF and save", ((string)(null)), table35);
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table36.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 203
    testRunner.And("I verify Query is displayed", ((string)(null)), table36);
#line 206
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 207
 testRunner.And("I enter data in CRF and save", ((string)(null)), table37);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table38.AddRow(new string[] {
                        "Age 2"});
#line 210
 testRunner.And("I verify Query is not displayed", ((string)(null)), table38);
#line 213
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Age 2",
                        "16"});
#line 214
 testRunner.And("I enter data in CRF and save", ((string)(null)), table39);
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table40.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 217
    testRunner.And("I verify Query is displayed", ((string)(null)), table40);
#line 220
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_02C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_02CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryWithoutChangingTheDataIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_02C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query without changing the data, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_02C",
                        "Validation"});
#line 225
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table41.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table41.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 226
    testRunner.And("I create a Subject", ((string)(null)), table41);
#line 231
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 232
 testRunner.And("I enter data in CRF and save", ((string)(null)), table42);
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table43.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 235
    testRunner.And("I verify Query is displayed", ((string)(null)), table43);
#line 238
 testRunner.And("I take a screenshot");
#line 239
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 240
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table44.AddRow(new string[] {
                        "Age 3"});
#line 241
 testRunner.And("I verify Query is not displayed", ((string)(null)), table44);
#line 244
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table45.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 245
 testRunner.And("I enter data in CRF and save", ((string)(null)), table45);
#line 248
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Age 3",
                        "16"});
#line 249
 testRunner.And("I enter data in CRF and save", ((string)(null)), table46);
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table47.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 252
    testRunner.And("I verify Query is displayed", ((string)(null)), table47);
#line 255
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_02D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_02DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_02D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_02D",
                        "Validation"});
#line 260
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table48.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table48.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 261
 testRunner.And("I create a Subject", ((string)(null)), table48);
#line 266
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 267
 testRunner.And("I enter data in CRF and save", ((string)(null)), table49);
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table50.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 270
    testRunner.And("I verify Query is displayed", ((string)(null)), table50);
#line 273
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 274
 testRunner.And("I enter data in CRF and save", ((string)(null)), table51);
#line 277
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 278
 testRunner.And("I save the CRF page");
#line 279
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 280
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Age 4",
                        "16"});
#line 281
 testRunner.And("I enter data in CRF and save", ((string)(null)), table52);
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table53.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 284
   testRunner.And("I verify Query is displayed", ((string)(null)), table53);
#line 287
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_03A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_03AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToGoodDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_03A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_03A",
                        "Validation"});
#line 292
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table54.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table54.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table54.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 293
 testRunner.And("I create a Subject", ((string)(null)), table54);
#line 298
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 299
 testRunner.And("I enter data in CRF and save", ((string)(null)), table55);
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table56.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 302
    testRunner.And("I verify Query is displayed", ((string)(null)), table56);
#line 305
 testRunner.And("I take a screenshot");
#line 306
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 307
 testRunner.And("I enter data in CRF and save", ((string)(null)), table57);
#line 310
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 311
 testRunner.And("I save the CRF page");
#line 312
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 313
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 314
 testRunner.And("I enter data in CRF and save", ((string)(null)), table58);
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table59.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 317
 testRunner.And("I verify Query is displayed", ((string)(null)), table59);
#line 320
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_03B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to good data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_03BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToGoodDataIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_03B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to good data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_03B",
                        "Validation"});
#line 325
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table60.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table60.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table60.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 326
    testRunner.And("I create a Subject", ((string)(null)), table60);
#line 331
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 332
 testRunner.And("I enter data in CRF and save", ((string)(null)), table61);
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table62.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 335
    testRunner.And("I verify Query is displayed", ((string)(null)), table62);
#line 338
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 339
 testRunner.And("I enter data in CRF and save", ((string)(null)), table63);
#line 342
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table64.AddRow(new string[] {
                        "Age 2"});
#line 343
 testRunner.And("I verify Query is not displayed", ((string)(null)), table64);
#line 346
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table65.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 347
 testRunner.And("I enter data in CRF and save", ((string)(null)), table65);
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table66.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 350
    testRunner.And("I verify Query is displayed", ((string)(null)), table66);
#line 353
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_03C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_03CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToGoodDataIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_03C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to good data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_03C",
                        "Validation"});
#line 358
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table67.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table67.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 359
    testRunner.And("I create a Subject", ((string)(null)), table67);
#line 364
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 365
 testRunner.And("I enter data in CRF and save", ((string)(null)), table68);
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table69.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 368
    testRunner.And("I verify Query is displayed", ((string)(null)), table69);
#line 371
 testRunner.And("I take a screenshot");
#line 372
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table70.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 373
 testRunner.And("I enter data in CRF and save", ((string)(null)), table70);
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table71.AddRow(new string[] {
                        "Age 3"});
#line 376
 testRunner.And("I verify Query is not displayed", ((string)(null)), table71);
#line 379
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 380
 testRunner.And("I enter data in CRF and save", ((string)(null)), table72);
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table73.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 383
    testRunner.And("I verify Query is displayed", ((string)(null)), table73);
#line 386
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_03D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_03DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToGoodDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_03D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to good data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_03D",
                        "Validation"});
#line 391
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table74.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table74.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table74.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 392
 testRunner.And("I create a Subject", ((string)(null)), table74);
#line 397
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 398
 testRunner.And("I enter data in CRF and save", ((string)(null)), table75);
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table76.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 401
    testRunner.And("I verify Query is displayed", ((string)(null)), table76);
#line 404
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 405
 testRunner.And("I enter data in CRF and save", ((string)(null)), table77);
#line 408
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 409
 testRunner.And("I save the CRF page");
#line 410
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 411
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 412
 testRunner.And("I enter data in CRF and save", ((string)(null)), table78);
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table79.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 415
   testRunner.And("I verify Query is displayed", ((string)(null)), table79);
#line 418
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_04A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = true and requires manual close = true")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_04AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_04A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = true and requires manual close = true", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_04A",
                        "Validation"});
#line 423
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table80.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table80.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 424
 testRunner.And("I create a Subject", ((string)(null)), table80);
#line 429
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 430
 testRunner.And("I enter data in CRF and save", ((string)(null)), table81);
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table82.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 433
    testRunner.And("I verify Query is displayed", ((string)(null)), table82);
#line 436
 testRunner.And("I take a screenshot");
#line 437
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Age 1",
                        "71"});
#line 438
 testRunner.And("I enter data in CRF and save", ((string)(null)), table83);
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed",
                        "Answered"});
            table84.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false",
                        "true"});
#line 441
 testRunner.And("I verify Query is displayed", ((string)(null)), table84);
#line 444
 testRunner.And("I take a screenshot");
#line 445
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 446
 testRunner.And("I save the CRF page");
#line 447
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 448
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table85.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 449
 testRunner.And("I enter data in CRF and save", ((string)(null)), table85);
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Closed"});
            table86.AddRow(new string[] {
                        "Age 1",
                        "false"});
#line 452
 testRunner.And("I verify Query is not displayed", ((string)(null)), table86);
#line 455
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Age 1",
                        "71"});
#line 456
 testRunner.And("I enter data in CRF and save", ((string)(null)), table87);
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed",
                        "Answered"});
            table88.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true",
                        "false"});
#line 459
 testRunner.And("I verify Query is not displayed", ((string)(null)), table88);
#line 462
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_04B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I entered good data in field A and then again entered the same bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_04BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToAnotherBadDataIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_04B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I entered good data in field A and then again entered the same bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_04B",
                        "Validation"});
#line 467
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table89.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table89.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 468
    testRunner.And("I create a Subject", ((string)(null)), table89);
#line 473
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table90.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 474
 testRunner.And("I enter data in CRF and save", ((string)(null)), table90);
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table91.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 477
    testRunner.And("I verify Query is displayed", ((string)(null)), table91);
#line 480
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Age 2",
                        "71"});
#line 481
 testRunner.And("I enter data in CRF and save", ((string)(null)), table92);
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table93.AddRow(new string[] {
                        "Age 2"});
#line 484
 testRunner.And("I verify Query is displayed", ((string)(null)), table93);
#line 487
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 488
 testRunner.And("I enter data in CRF and save", ((string)(null)), table94);
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table95.AddRow(new string[] {
                        "Age 2"});
#line 491
 testRunner.And("I verify Query is not displayed", ((string)(null)), table95);
#line 494
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table96.AddRow(new string[] {
                        "Age 2",
                        "71"});
#line 495
 testRunner.And("I enter data in CRF and save", ((string)(null)), table96);
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table97.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 498
 testRunner.And("I verify Query is displayed", ((string)(null)), table97);
#line 501
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_04C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, if I entered good data in field A and then again entered the same bad data in field A, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_04CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_04C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, if I entered good data in field A and then again entered the same bad data in field A, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_04C",
                        "Validation"});
#line 506
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table98.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table98.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table98.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 507
    testRunner.And("I create a Subject", ((string)(null)), table98);
#line 512
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 513
 testRunner.And("I enter data in CRF and save", ((string)(null)), table99);
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table100.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 516
    testRunner.And("I verify Query is displayed", ((string)(null)), table100);
#line 519
 testRunner.And("I take a screenshot");
#line 520
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table101.AddRow(new string[] {
                        "Age 3",
                        "71"});
#line 521
 testRunner.And("I enter data in CRF and save", ((string)(null)), table101);
#line 524
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table102.AddRow(new string[] {
                        "Age 3"});
#line 525
 testRunner.And("I verify Query is displayed", ((string)(null)), table102);
#line 528
 testRunner.And("I take a screenshot");
#line 529
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 530
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table103.AddRow(new string[] {
                        "Age 3"});
#line 531
 testRunner.And("I verify Query is not displayed", ((string)(null)), table103);
#line 534
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 535
 testRunner.And("I enter data in CRF and save", ((string)(null)), table104);
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table105.AddRow(new string[] {
                        "Age 3"});
#line 538
 testRunner.And("I verify Query is not displayed", ((string)(null)), table105);
#line 541
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table106.AddRow(new string[] {
                        "Age 3",
                        "71"});
#line 542
 testRunner.And("I enter data in CRF and save", ((string)(null)), table106);
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table107.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 545
 testRunner.And("I verify Query is not displayed", ((string)(null)), table107);
#line 548
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_04D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = false and requires manual close = true")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_04DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_04D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field A. Query with requires response = false and requires manual close = true", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_04D",
                        "Validation"});
#line 553
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table108.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table108.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table108.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 554
    testRunner.And("I create a Subject", ((string)(null)), table108);
#line 559
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 560
 testRunner.And("I enter data in CRF and save", ((string)(null)), table109);
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table110.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 563
    testRunner.And("I verify Query is displayed", ((string)(null)), table110);
#line 566
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table111.AddRow(new string[] {
                        "Age 4",
                        "71"});
#line 567
 testRunner.And("I enter data in CRF and save", ((string)(null)), table111);
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table112.AddRow(new string[] {
                        "Age 4"});
#line 570
 testRunner.And("I verify Query is displayed", ((string)(null)), table112);
#line 573
 testRunner.And("I take a screenshot");
#line 574
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 575
 testRunner.And("I save the CRF page");
#line 576
 testRunner.And("I verify closed Query with message \"Age must be greater than or equal to 18 and l" +
                    "ess than or equal to 65. Please verify.\" is displayed on Field \"Age 4\"");
#line 577
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 578
 testRunner.And("I enter data in CRF and save", ((string)(null)), table113);
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Closed"});
            table114.AddRow(new string[] {
                        "Age 4",
                        "false"});
#line 581
 testRunner.And("I verify Query is not displayed", ((string)(null)), table114);
#line 584
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Age 4",
                        "71"});
#line 585
 testRunner.And("I enter data in CRF and save", ((string)(null)), table115);
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed",
                        "Answered"});
            table116.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true",
                        "false"});
#line 588
 testRunner.And("I verify Query is not displayed", ((string)(null)), table116);
#line 591
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_05A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_05AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_05A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_05A",
                        "Validation"});
#line 596
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table117.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table117.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table117.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 597
 testRunner.And("I create a Subject", ((string)(null)), table117);
#line 602
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 603
 testRunner.And("I enter data in CRF and save", ((string)(null)), table118);
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table119.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 606
    testRunner.And("I verify Query is displayed", ((string)(null)), table119);
#line 609
 testRunner.And("I take a screenshot");
#line 610
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Age 1",
                        "71"});
#line 611
 testRunner.And("I enter data in CRF and save", ((string)(null)), table120);
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed",
                        "Answered"});
            table121.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false",
                        "true"});
#line 614
 testRunner.And("I verify Query is displayed", ((string)(null)), table121);
#line 617
 testRunner.And("I take a screenshot");
#line 618
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 619
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table122.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true"});
#line 620
 testRunner.And("I verify Query is displayed", ((string)(null)), table122);
#line 623
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table123.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 624
 testRunner.And("I enter data in CRF and save", ((string)(null)), table123);
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table124.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 627
 testRunner.And("I verify Query is displayed", ((string)(null)), table124);
#line 630
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_05B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_05BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToAnotherBadDataIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_05B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_05B",
                        "Validation"});
#line 635
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table125.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table125.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 636
    testRunner.And("I create a Subject", ((string)(null)), table125);
#line 641
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 642
 testRunner.And("I enter data in CRF and save", ((string)(null)), table126);
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table127.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 645
    testRunner.And("I verify Query is displayed", ((string)(null)), table127);
#line 648
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table128.AddRow(new string[] {
                        "Age 2",
                        "71"});
#line 649
 testRunner.And("I enter data in CRF and save", ((string)(null)), table128);
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table129.AddRow(new string[] {
                        "Age 2"});
#line 652
 testRunner.And("I verify Query is displayed", ((string)(null)), table129);
#line 655
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 656
 testRunner.And("I enter data in CRF and save", ((string)(null)), table130);
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table131.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 659
    testRunner.And("I verify Query is displayed", ((string)(null)), table131);
#line 662
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_05C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_05CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_05C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_05C",
                        "Validation"});
#line 667
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table132.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table132.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table132.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 668
    testRunner.And("I create a Subject", ((string)(null)), table132);
#line 673
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table133.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 674
 testRunner.And("I enter data in CRF and save", ((string)(null)), table133);
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table134.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 677
    testRunner.And("I verify Query is displayed", ((string)(null)), table134);
#line 680
 testRunner.And("I take a screenshot");
#line 681
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Age 3",
                        "71"});
#line 682
 testRunner.And("I enter data in CRF and save", ((string)(null)), table135);
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table136.AddRow(new string[] {
                        "Age 3"});
#line 685
 testRunner.And("I verify Query is displayed", ((string)(null)), table136);
#line 688
 testRunner.And("I take a screenshot");
#line 689
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 690
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table137.AddRow(new string[] {
                        "Age 3"});
#line 691
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table137);
#line 694
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 695
 testRunner.And("I enter data in CRF and save", ((string)(null)), table138);
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table139.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 698
    testRunner.And("I verify Query is displayed", ((string)(null)), table139);
#line 701
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_05D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_05DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToAnotherBadDataIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_05D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I then entered the original bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true.", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_05D",
                        "Validation"});
#line 706
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table140.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table140.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table140.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 707
 testRunner.And("I create a Subject", ((string)(null)), table140);
#line 712
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 713
 testRunner.And("I enter data in CRF and save", ((string)(null)), table141);
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table142.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 716
    testRunner.And("I verify Query is displayed", ((string)(null)), table142);
#line 719
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Age 4",
                        "71"});
#line 720
 testRunner.And("I enter data in CRF and save", ((string)(null)), table143);
#line 723
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table144.AddRow(new string[] {
                        "Age 4"});
#line 724
 testRunner.And("I verify Query is displayed", ((string)(null)), table144);
#line 727
 testRunner.And("I take a screenshot");
#line 728
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 729
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table145.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true"});
#line 730
 testRunner.And("I verify Query is displayed", ((string)(null)), table145);
#line 733
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table146.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 734
 testRunner.And("I enter data in CRF and save", ((string)(null)), table146);
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table147.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 737
 testRunner.And("I verify Query is displayed", ((string)(null)), table147);
#line 740
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_06A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_06AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_06A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = true", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_06A",
                        "Validation"});
#line 745
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table148.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table148.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table148.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 746
 testRunner.And("I create a Subject", ((string)(null)), table148);
#line 751
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table149.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 752
 testRunner.And("I enter data in CRF and save", ((string)(null)), table149);
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table150.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 755
    testRunner.And("I verify Query is displayed", ((string)(null)), table150);
#line 758
 testRunner.And("I take a screenshot");
#line 759
    testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table151.AddRow(new string[] {
                        "Age 1",
                        "71"});
#line 760
 testRunner.And("I enter data in CRF and save", ((string)(null)), table151);
#line 763
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table152.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 764
 testRunner.And("I verify Query is displayed", ((string)(null)), table152);
#line 767
 testRunner.And("I take a screenshot");
#line 768
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 1\"");
#line 769
 testRunner.And("I save the CRF page");
#line 770
 testRunner.Then("I verify closed Query with message \"Data will be changed.\" is displayed on Field " +
                    "\"Age 1\"");
#line 771
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table153.AddRow(new string[] {
                        "Age 1",
                        "70"});
#line 772
 testRunner.And("I enter data in CRF and save", ((string)(null)), table153);
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table154.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 775
 testRunner.And("I verify Query is displayed", ((string)(null)), table154);
#line 778
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_06B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_06BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToAnotherBadDataIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_06B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = false", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_06B",
                        "Validation"});
#line 783
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table155.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table155.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table155.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 784
    testRunner.And("I create a Subject", ((string)(null)), table155);
#line 789
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table156.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 790
 testRunner.And("I enter data in CRF and save", ((string)(null)), table156);
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table157.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 793
    testRunner.And("I verify Query is displayed", ((string)(null)), table157);
#line 796
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table158.AddRow(new string[] {
                        "Age 2",
                        "71"});
#line 797
 testRunner.And("I enter data in CRF and save", ((string)(null)), table158);
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table159.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 800
    testRunner.And("I verify Query is displayed", ((string)(null)), table159);
#line 803
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table160.AddRow(new string[] {
                        "Age 2",
                        "70"});
#line 804
 testRunner.And("I enter data in CRF and save", ((string)(null)), table160);
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table161.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 807
    testRunner.And("I verify Query is displayed", ((string)(null)), table161);
#line 810
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_06C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_06CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_06C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I answered the query and I changed the data in field A to another bad data, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = true and requires manual close = false", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_06C",
                        "Validation"});
#line 815
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table162.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table162.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table162.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 816
    testRunner.And("I create a Subject", ((string)(null)), table162);
#line 821
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table163.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 822
 testRunner.And("I enter data in CRF and save", ((string)(null)), table163);
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table164.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 825
    testRunner.And("I verify Query is displayed", ((string)(null)), table164);
#line 828
 testRunner.And("I take a screenshot");
#line 829
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table165.AddRow(new string[] {
                        "Age 3",
                        "71"});
#line 830
 testRunner.And("I enter data in CRF and save", ((string)(null)), table165);
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table166.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 833
    testRunner.And("I verify Query is displayed", ((string)(null)), table166);
#line 836
 testRunner.And("I take a screenshot");
#line 837
 testRunner.When("I answer the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\" with \"Data will be changed.\"");
#line 838
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table167.AddRow(new string[] {
                        "Age 3"});
#line 839
 testRunner.And("I verify Query is not displayed", ((string)(null)), table167);
#line 842
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table168.AddRow(new string[] {
                        "Age 3",
                        "70"});
#line 843
 testRunner.And("I enter data in CRF and save", ((string)(null)), table168);
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table169.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 846
    testRunner.And("I verify Query is displayed", ((string)(null)), table169);
#line 849
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_06D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_06DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_06D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I changed the data in field A to another bad data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field A. Query with requires response = false and requires manual close = true", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_06D",
                        "Validation"});
#line 854
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table170.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table170.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table170.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 855
 testRunner.And("I create a Subject", ((string)(null)), table170);
#line 860
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table171.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 861
 testRunner.And("I enter data in CRF and save", ((string)(null)), table171);
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table172.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 864
    testRunner.And("I verify Query is displayed", ((string)(null)), table172);
#line 867
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table173.AddRow(new string[] {
                        "Age 4",
                        "71"});
#line 868
 testRunner.And("I enter data in CRF and save", ((string)(null)), table173);
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table174.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 871
    testRunner.And("I verify Query is displayed", ((string)(null)), table174);
#line 874
 testRunner.And("I take a screenshot");
#line 875
 testRunner.And("I close the Query \"Age must be greater than or equal to 18 and less than or equal" +
                    " to 65. Please verify.\" on Field \"Age 4\"");
#line 876
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table175.AddRow(new string[] {
                        "Age 4",
                        "70"});
#line 877
 testRunner.And("I enter data in CRF and save", ((string)(null)), table175);
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table176.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 880
    testRunner.And("I verify Query is displayed", ((string)(null)), table176);
#line 883
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_07A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = true and requires manual close = true")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_07AAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_07A As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = true and requires manual close = true", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_07A",
                        "Validation"});
#line 888
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table177.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table177.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table177.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 889
 testRunner.And("I create a Subject", ((string)(null)), table177);
#line 894
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table178.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 895
 testRunner.And("I enter data in CRF and save", ((string)(null)), table178);
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table179.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 898
    testRunner.And("I verify Query is displayed", ((string)(null)), table179);
#line 901
 testRunner.And("I take a screenshot");
#line 902
 testRunner.When("I cancel the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 1\"");
#line 903
 testRunner.And("I save the CRF page");
#line 904
 testRunner.And("I click audit on Field \"Age 1\"");
#line 905
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Query Message"});
            table180.AddRow(new string[] {
                        "Query Canceled",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy."});
#line 906
 testRunner.And("I verify Audits exist", ((string)(null)), table180);
#line 909
 testRunner.And("I select Form \"Form 1\" in \"Header\"");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table181.AddRow(new string[] {
                        "Age 1",
                        "20"});
#line 910
 testRunner.And("I enter data in CRF and save", ((string)(null)), table181);
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table182.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true"});
#line 913
 testRunner.And("I verify Query is not displayed", ((string)(null)), table182);
#line 917
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table183.AddRow(new string[] {
                        "Age 1",
                        "17"});
#line 918
 testRunner.And("I enter data in CRF and save", ((string)(null)), table183);
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table184.AddRow(new string[] {
                        "Age 1",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true"});
#line 921
 testRunner.And("I verify Query is not displayed", ((string)(null)), table184);
#line 924
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_07B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = false and requires manual close = false")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_07BAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseFalse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_07B As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = false and requires manual close = false", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_07B",
                        "Validation"});
#line 929
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table185.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table185.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table185.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 930
 testRunner.And("I create a Subject", ((string)(null)), table185);
#line 935
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table186.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 936
 testRunner.And("I enter data in CRF and save", ((string)(null)), table186);
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table187.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 939
    testRunner.And("I verify Query is displayed", ((string)(null)), table187);
#line 942
 testRunner.And("I take a screenshot");
#line 943
 testRunner.When("I cancel the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 2\"");
#line 944
 testRunner.And("I save the CRF page");
#line 945
 testRunner.And("I click audit on Field \"Age 2\"");
#line 946
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Query Message"});
            table188.AddRow(new string[] {
                        "Query Canceled",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy."});
#line 947
 testRunner.And("I verify Audits exist", ((string)(null)), table188);
#line 950
 testRunner.And("I select Form \"Form 1\" in \"Header\"");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table189.AddRow(new string[] {
                        "Age 2",
                        "20"});
#line 951
 testRunner.And("I enter data in CRF and save", ((string)(null)), table189);
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table190.AddRow(new string[] {
                        "Age 2"});
#line 954
 testRunner.And("I verify Query is not displayed", ((string)(null)), table190);
#line 957
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table191.AddRow(new string[] {
                        "Age 2",
                        "17"});
#line 958
 testRunner.And("I enter data in CRF and save", ((string)(null)), table191);
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table192.AddRow(new string[] {
                        "Age 2",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "true"});
#line 961
 testRunner.And("I verify Query is not displayed", ((string)(null)), table192);
#line 964
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_07C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_07CAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseTrueAndRequiresManualCloseFalse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_07C As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = true and requires manual close = false", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_07C",
                        "Validation"});
#line 969
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table193.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table193.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table193.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 970
 testRunner.And("I create a Subject", ((string)(null)), table193);
#line 975
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table194.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 976
 testRunner.And("I enter data in CRF and save", ((string)(null)), table194);
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table195.AddRow(new string[] {
                        "Age 3",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 979
    testRunner.And("I verify Query is displayed", ((string)(null)), table195);
#line 982
 testRunner.And("I take a screenshot");
#line 983
 testRunner.When("I cancel the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 3\"");
#line 984
 testRunner.And("I save the CRF page");
#line 985
 testRunner.And("I click audit on Field \"Age 3\"");
#line 986
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Query Message"});
            table196.AddRow(new string[] {
                        "Query Canceled",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy."});
#line 987
 testRunner.And("I verify Audits exist", ((string)(null)), table196);
#line 990
 testRunner.And("I select Form \"Form 1\" in \"Header\"");
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table197.AddRow(new string[] {
                        "Age 3",
                        "20"});
#line 991
 testRunner.And("I enter data in CRF and save", ((string)(null)), table197);
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table198.AddRow(new string[] {
                        "Age 3"});
#line 994
 testRunner.And("I verify Query is not displayed", ((string)(null)), table198);
#line 997
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table199.AddRow(new string[] {
                        "Age 3",
                        "17"});
#line 998
 testRunner.And("I enter data in CRF and save", ((string)(null)), table199);
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table200.AddRow(new string[] {
                        "Age 3"});
#line 1001
    testRunner.And("I verify Query is not displayed", ((string)(null)), table200);
#line 1004
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB_US12940_07D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = false and requires manual close = true")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_StdForm_1FldEC")]
        public virtual void PB_US12940_07DAsAnEDCUserWhenIEnteredBadDataInFieldAThatResultedInTheSystemOpeningAQueryOnFieldAAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldA_QueryWithRequiresResponseFalseAndRequiresManualCloseTrue()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB_US12940_07D As an EDC user, when I entered bad data in field A that resulted in the system opening a query on field A, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field A. Query with requires response = false and requires manual close = true", new string[] {
                        "release_564_Patch11",
                        "PB_US12940_07D"});
#line 1008
this.ScenarioSetup(scenarioInfo);
#line 13
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table201.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table201.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table201.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1009
 testRunner.And("I create a Subject", ((string)(null)), table201);
#line 1014
 testRunner.And("I select Form \"Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table202.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 1015
 testRunner.And("I enter data in CRF and save", ((string)(null)), table202);
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table203.AddRow(new string[] {
                        "Age 4",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy.",
                        "false"});
#line 1018
    testRunner.And("I verify Query is displayed", ((string)(null)), table203);
#line 1021
 testRunner.And("I take a screenshot");
#line 1022
 testRunner.When("I cancel the Query \"Age must be greater than or equal to 18 and less than or equa" +
                    "l to 65. Please verify.\" on Field \"Age 4\"");
#line 1023
 testRunner.And("I save the CRF page");
#line 1024
 testRunner.And("I click audit on Field \"Age 4\"");
#line 1025
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Type",
                        "Query Message"});
            table204.AddRow(new string[] {
                        "Query Canceled",
                        "Age must be greater than or equal to 18 and less than or equal to 65. Please veri" +
                            "fy."});
#line 1026
 testRunner.And("I verify Audits exist", ((string)(null)), table204);
#line 1029
 testRunner.And("I select Form \"Form 1\" in \"Header\"");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table205.AddRow(new string[] {
                        "Age 4",
                        "20"});
#line 1030
 testRunner.And("I enter data in CRF and save", ((string)(null)), table205);
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table206.AddRow(new string[] {
                        "Age 4"});
#line 1033
 testRunner.And("I verify Query is not displayed", ((string)(null)), table206);
#line 1036
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table207.AddRow(new string[] {
                        "Age 4",
                        "17"});
#line 1037
 testRunner.And("I enter data in CRF and save", ((string)(null)), table207);
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table208.AddRow(new string[] {
                        "Age 4"});
#line 1040
    testRunner.And("I verify Query is not displayed", ((string)(null)), table208);
#line 1043
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
