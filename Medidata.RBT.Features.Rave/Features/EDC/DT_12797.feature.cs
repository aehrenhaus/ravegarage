// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DT12797ForAFieldThatHasADerivationEditCheckDoesNotSetItToRequireReviewCorrectlyInCertainCases_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DT_12797.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DT 12797 For a field that has a derivation, edit check does not set it to require" +
                    " review correctly in certain cases.", "As a Rave user\r\nGiven I enter data\r\nAnd there is an edit check that sets the data" +
                    " to require review\r\nThen I should see the requires review icon for the data\r\nAnd" +
                    " I should see the review box enabled for the data", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "DT 12797 For a field that has a derivation, edit check does not set it to require" +
                            " review correctly in certain cases.")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.DT12797ForAFieldThatHasADerivationEditCheckDoesNotSetItToRequireReviewCorrectlyInCertainCases_Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 12
#line 13
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Project",
                        "Environment",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "User 1",
                        "Mediflex",
                        "Prod",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 14
 testRunner.And("following Project assignments exist", ((string)(null)), table1);
#line 17
    testRunner.And("Role \"cdm1\" has Action \"Entry\"");
#line 18
 testRunner.And("Role \"cdm1\" has Action \"Review\"");
#line 19
 testRunner.And("Project \"Mediflex\" has Draft \"<Draft1>\"");
#line 20
 testRunner.And("I publish and push CRF Version \"CRF Version<RANDOMNUMBER>\" of Draft \"<Draft1>\" to" +
                    " site \"Site 1\" in Project \"Mediflex\" for Enviroment \"Prod\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("As an EDC user, when I have an edit check that sets a field to require review and" +
            " I see the requires review icon, then I should see the review box enabled.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 12797 For a field that has a derivation, edit check does not set it to require" +
            " review correctly in certain cases.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckThatSetsAFieldToRequireReviewAndISeeTheRequiresReviewIconThenIShouldSeeTheReviewBoxEnabled_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an EDC user, when I have an edit check that sets a field to require review and" +
                    " I see the requires review icon, then I should see the review box enabled.", new string[] {
                        "PB-DT12797-01"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 12
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "101"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 26
 testRunner.When("I create a Subject", ((string)(null)), table2);
#line 30
 testRunner.And("I am on CRF page \"Visit Date\" in Folder \"Visit 1\" in Subject \"101SUBJ\" in Site \"S" +
                    "ite 1\" in Study \"Mediflex\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011"});
            table3.AddRow(new string[] {
                        "Age",
                        "20"});
#line 31
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 35
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Review"});
            table4.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011",
                        "False"});
            table4.AddRow(new string[] {
                        "Age",
                        "20",
                        "False"});
#line 36
 testRunner.And("I verify data in CRF", ((string)(null)), table4);
#line 40
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Age",
                        "17"});
#line 41
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Review"});
            table6.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011",
                        "True"});
            table6.AddRow(new string[] {
                        "Age",
                        "20",
                        "False"});
#line 44
 testRunner.And("I verify data in CRF", ((string)(null)), table6);
#line 48
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
