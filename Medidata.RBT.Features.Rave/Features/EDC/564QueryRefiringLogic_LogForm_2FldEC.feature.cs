// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _564QueryRefiringLogic6_LogForm_2FldECFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic_LogForm_2FldEC.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "564QueryRefiringLogic6_LogForm_2FldEC", "  Query Refiring Logic\r\nAs a Rave user\r\nWhen I manually close a query or cancel, " +
                    "the query should not re-fire if the exact same data is entered into the system\r\n" +
                    "So that I don\'t have to re-enter the exact same response", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "564QueryRefiringLogic6_LogForm_2FldEC")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._564QueryRefiringLogic6_LogForm_2FldECFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Stud",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "User 1",
                        "Standard Study",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 16
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 19
 testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line 20
 testRunner.And("Study \"Standard Study\" has Draft \"<Draft1>\"");
#line 21
 testRunner.And("I publish and push CRF Version \"CRF Version<RANDOMNUMBER>\" of Draft \"<Draft1>\" to" +
                    " site \"Site 1\" in Study \"Standard Study\"");
#line 22
 testRunner.And("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-01A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_01AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-01A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.", new string[] {
                        "PB-US12940-01A"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table2.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 28
 testRunner.And("I create a Subject", ((string)(null)), table2);
#line 33
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table3.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 34
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 38
 testRunner.When("I save the CRF page");
#line 39
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table4.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 40
 testRunner.Then("I verify Query is displayed", ((string)(null)), table4);
#line 43
 testRunner.And("I take a screenshot");
#line 44
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 45
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 48
 testRunner.And("I save the CRF page");
#line 49
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table6.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 50
 testRunner.Then("I verify Query is displayed", ((string)(null)), table6);
#line 53
 testRunner.And("I take a screenshot");
#line 54
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 55
 testRunner.And("I save the CRF page");
#line 56
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table7.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 57
 testRunner.Then("I verify Query is displayed", ((string)(null)), table7);
#line 60
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Log Field 2",
                        "5"});
#line 61
 testRunner.When("I enter data in CRF", ((string)(null)), table8);
#line 64
 testRunner.And("I save the CRF page");
#line 65
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table9.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 66
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table9);
#line 69
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 70
 testRunner.When("I enter data in CRF", ((string)(null)), table10);
#line 73
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table11.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 74
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table11);
#line 77
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-01B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I changed the data in log field B to another bad data, and the new query will open, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_01BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheNewQueryWillOpenIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-01B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I changed the data in log field B to another bad data, and the new query will open, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-01B"});
#line 80
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table12.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table12.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 83
 testRunner.And("I create a Subject", ((string)(null)), table12);
#line 88
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table13.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 89
 testRunner.And("I enter data in CRF", ((string)(null)), table13);
#line 93
 testRunner.When("I save the CRF page");
#line 94
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table14.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 95
 testRunner.Then("I verify Query is displayed", ((string)(null)), table14);
#line 98
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 99
 testRunner.When("I enter data in CRF", ((string)(null)), table15);
#line 102
 testRunner.And("I save the CRF page");
#line 103
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table16.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 104
 testRunner.Then("I verify Query is displayed", ((string)(null)), table16);
#line 107
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Log Field 4",
                        "5"});
#line 108
 testRunner.And("I enter data in CRF", ((string)(null)), table17);
#line 111
 testRunner.When("I save the CRF page");
#line 112
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table18.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify."});
#line 113
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table18);
#line 116
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 117
 testRunner.And("I enter data in CRF", ((string)(null)), table19);
#line 120
 testRunner.When("I save the CRF page");
#line 121
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table20.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 122
 testRunner.Then("I verify Query is displayed", ((string)(null)), table20);
#line 125
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-01C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_01CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-01C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-01C"});
#line 128
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9001C"});
            table21.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 131
 testRunner.And("I create a Subject", ((string)(null)), table21);
#line 136
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table22.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 137
 testRunner.When("I enter data in CRF", ((string)(null)), table22);
#line 141
    testRunner.And("I save the CRF page");
#line 142
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table23.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 143
 testRunner.Then("I verify Query is displayed", ((string)(null)), table23);
#line 146
 testRunner.And("I take a screenshot");
#line 147
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 148
 testRunner.And("I enter data in CRF", ((string)(null)), table24);
#line 151
    testRunner.And("I save the CRF page");
#line 152
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table25.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 153
 testRunner.Then("I verify Query is displayed", ((string)(null)), table25);
#line 156
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Log Field 6",
                        "5"});
#line 157
 testRunner.When("I enter data in CRF", ((string)(null)), table26);
#line 160
 testRunner.And("I save the CRF page");
#line 161
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table27.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify."});
#line 162
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table27);
#line 165
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 166
 testRunner.And("I enter data in CRF", ((string)(null)), table28);
#line 169
 testRunner.And("I save the CRF page");
#line 170
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table29.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 171
 testRunner.Then("I verify Query is displayed", ((string)(null)), table29);
#line 174
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-01D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_01DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-01D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.", new string[] {
                        "PB-US12940-01D"});
#line 177
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9001D"});
            table30.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table30.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 180
 testRunner.And("I create a Subject", ((string)(null)), table30);
#line 185
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table31.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 186
 testRunner.When("I enter data in CRF", ((string)(null)), table31);
#line 190
 testRunner.And("I save the CRF page");
#line 191
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table32.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 192
 testRunner.Then("I verify Query is displayed", ((string)(null)), table32);
#line 195
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 196
 testRunner.When("I enter data in CRF", ((string)(null)), table33);
#line 199
 testRunner.And("I save the CRF page");
#line 200
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table34.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 201
 testRunner.Then("I verify Query is displayed", ((string)(null)), table34);
#line 204
 testRunner.And("I take a screenshot");
#line 205
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 206
 testRunner.And("I save the CRF page");
#line 207
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table35.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 208
 testRunner.Then("I verify Query is displayed", ((string)(null)), table35);
#line 211
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Log Field 8",
                        "5"});
#line 212
 testRunner.When("I enter data in CRF", ((string)(null)), table36);
#line 215
 testRunner.And("I save the CRF page");
#line 216
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table37.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify."});
#line 217
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table37);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 220
 testRunner.When("I enter data in CRF", ((string)(null)), table38);
#line 223
 testRunner.And("I save the CRF page");
#line 224
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table39.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 225
 testRunner.Then("I verify Query is displayed", ((string)(null)), table39);
#line 228
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-02A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_02AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-02A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-02A",
                        "draft"});
#line 233
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table40.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002A"});
            table40.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 236
 testRunner.And("I create a Subject", ((string)(null)), table40);
#line 241
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table41.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table41.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 242
 testRunner.When("I enter data in CRF", ((string)(null)), table41);
#line 246
 testRunner.And("I save the CRF page");
#line 247
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table42.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 248
 testRunner.Then("I verify Query is displayed", ((string)(null)), table42);
#line 251
 testRunner.And("I take a screenshot");
#line 252
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 253
 testRunner.And("I enter data in CRF", ((string)(null)), table43);
#line 256
 testRunner.And("I save the CRF page");
#line 257
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table44.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 258
 testRunner.Then("I verify Query is displayed", ((string)(null)), table44);
#line 261
 testRunner.And("I take a screenshot");
#line 262
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 263
 testRunner.And("I save the CRF page");
#line 264
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table45.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 265
 testRunner.Then("I verify Query is displayed", ((string)(null)), table45);
#line 268
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Log Field 2",
                        "5"});
#line 269
 testRunner.When("I enter data in CRF", ((string)(null)), table46);
#line 272
 testRunner.And("I save the CRF page");
#line 273
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table47.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify."});
#line 274
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table47);
#line 277
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 278
 testRunner.When("I enter data in CRF", ((string)(null)), table48);
#line 281
    testRunner.And("I save the CRF page");
#line 282
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table49.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 283
 testRunner.Then("I verify Query is displayed", ((string)(null)), table49);
#line 286
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-02B	As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_02BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-02B	As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-02B"});
#line 289
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table50.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002B"});
            table50.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 292
 testRunner.And("I create a Subject", ((string)(null)), table50);
#line 297
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table51.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 298
 testRunner.When("I enter data in CRF", ((string)(null)), table51);
#line 302
    testRunner.And("I save the CRF page");
#line 303
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table52.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 304
 testRunner.Then("I verify Query is displayed", ((string)(null)), table52);
#line 307
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 308
 testRunner.When("I enter data in CRF", ((string)(null)), table53);
#line 311
 testRunner.And("I save the CRF page");
#line 312
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table54.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 313
    testRunner.Then("I verify Query is displayed", ((string)(null)), table54);
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Log Field 4",
                        "5"});
#line 316
 testRunner.When("I enter data in CRF", ((string)(null)), table55);
#line 319
 testRunner.And("I save the CRF page");
#line 320
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table56.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify."});
#line 321
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table56);
#line 324
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 325
 testRunner.When("I enter data in CRF", ((string)(null)), table57);
#line 328
 testRunner.And("I save the CRF page");
#line 329
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table58.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 330
    testRunner.Then("I verify Query is displayed", ((string)(null)), table58);
#line 333
    testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void AsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-02C",
                        "ignore"});
#line 338
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table59.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table59.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002C"});
            table59.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 341
 testRunner.And("I create a Subject", ((string)(null)), table59);
#line 346
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table60.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table60.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 347
 testRunner.When("I enter data in CRF", ((string)(null)), table60);
#line 351
    testRunner.And("I save the CRF page");
#line 352
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table61.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 353
 testRunner.Then("I verify Query is displayed", ((string)(null)), table61);
#line 356
 testRunner.And("I take a screenshot");
#line 357
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 358
 testRunner.And("I enter data in CRF", ((string)(null)), table62);
#line 361
 testRunner.And("I save the CRF page");
#line 362
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table63.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 363
 testRunner.Then("I verify Query is displayed", ((string)(null)), table63);
#line 366
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Log Field 6",
                        "5"});
#line 368
 testRunner.When("I enter data in CRF", ((string)(null)), table64);
#line 371
    testRunner.And("I save the CRF page");
#line 372
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table65.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify."});
#line 373
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table65);
#line 376
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 377
 testRunner.When("I enter data in CRF", ((string)(null)), table66);
#line 380
 testRunner.And("I save the CRF page");
#line 381
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table67.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 382
 testRunner.Then("I verify Query is displayed", ((string)(null)), table67);
#line 385
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-02D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_02DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-02D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-02D"});
#line 389
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table68.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002D"});
            table68.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 392
 testRunner.And("I create a Subject", ((string)(null)), table68);
#line 397
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table69.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table69.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 398
 testRunner.When("I enter data in CRF", ((string)(null)), table69);
#line 402
    testRunner.And("I save the CRF page");
#line 403
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table70.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 404
 testRunner.Then("I verify Query is displayed", ((string)(null)), table70);
#line 407
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 408
 testRunner.When("I enter data in CRF", ((string)(null)), table71);
#line 411
 testRunner.And("I save the CRF page");
#line 412
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table72.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 413
 testRunner.Then("I verify Query is displayed", ((string)(null)), table72);
#line 416
    testRunner.And("I take a screenshot");
#line 417
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 418
 testRunner.And("I save the CRF page");
#line 419
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table73.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 420
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table73);
#line 423
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table74.AddRow(new string[] {
                        "Log Field 8",
                        "5"});
#line 424
 testRunner.When("I enter data in CRF", ((string)(null)), table74);
#line 427
    testRunner.And("I save the CRF page");
#line 428
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table75.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify."});
#line 429
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table75);
#line 432
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 433
 testRunner.When("I enter data in CRF", ((string)(null)), table76);
#line 436
    testRunner.And("I save the CRF page");
#line 437
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table77.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 438
 testRunner.Then("I verify Query is displayed", ((string)(null)), table77);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-03A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_03AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-03A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-03A"});
#line 444
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table78.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003A"});
            table78.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 447
 testRunner.And("I create a Subject", ((string)(null)), table78);
#line 452
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table79.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table79.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 453
 testRunner.When("I enter data in CRF", ((string)(null)), table79);
#line 457
    testRunner.And("I save the CRF page");
#line 458
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table80.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 459
 testRunner.Then("I verify Query is displayed", ((string)(null)), table80);
#line 462
 testRunner.And("I take a screenshot");
#line 463
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 464
 testRunner.And("I enter data in CRF", ((string)(null)), table81);
#line 467
 testRunner.And("I save the CRF page");
#line 468
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table82.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 469
 testRunner.Then("I verify Query is displayed", ((string)(null)), table82);
#line 472
    testRunner.And("I take a screenshot");
#line 473
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 474
    testRunner.And("I save the CRF page");
#line 475
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table83.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 476
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table83);
#line 479
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table84.AddRow(new string[] {
                        "Log Field 2",
                        "5"});
#line 480
 testRunner.And("I enter data in CRF", ((string)(null)), table84);
#line 483
 testRunner.And("I save the CRF page");
#line 484
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table85.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 485
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table85);
#line 488
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Log Field 2",
                        "7"});
#line 489
 testRunner.And("I enter data in CRF", ((string)(null)), table86);
#line 492
 testRunner.And("I save the CRF page");
#line 493
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table87.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 494
 testRunner.Then("I verify Query is displayed", ((string)(null)), table87);
#line 497
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-03B	 As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_03BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-03B	 As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-03B"});
#line 500
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table88.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003B"});
            table88.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 503
 testRunner.And("I create a Subject", ((string)(null)), table88);
#line 508
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table89.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 509
 testRunner.When("I enter data in CRF", ((string)(null)), table89);
#line 513
    testRunner.And("I save the CRF page");
#line 514
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table90.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 515
 testRunner.Then("I verify Query is displayed", ((string)(null)), table90);
#line 518
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table91.AddRow(new string[] {
                        "Log Field 4",
                        "7"});
#line 519
 testRunner.And("I enter data in CRF", ((string)(null)), table91);
#line 522
 testRunner.And("I save the CRF page");
#line 523
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table92.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 524
 testRunner.Then("I verify Query is displayed", ((string)(null)), table92);
#line 527
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-03C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_03CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-03C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-03C"});
#line 531
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table93.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003C"});
            table93.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 534
 testRunner.And("I create a Subject", ((string)(null)), table93);
#line 539
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table94.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 540
 testRunner.When("I enter data in CRF", ((string)(null)), table94);
#line 544
    testRunner.And("I save the CRF page");
#line 545
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table95.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 546
 testRunner.Then("I verify Query is displayed", ((string)(null)), table95);
#line 549
 testRunner.And("I take a screenshot");
#line 550
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line 551
 testRunner.And("I save the CRF page");
#line 552
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table96.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 553
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table96);
#line 556
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table97.AddRow(new string[] {
                        "Log Field 6",
                        "7"});
#line 557
 testRunner.When("I enter data in CRF", ((string)(null)), table97);
#line 560
    testRunner.And("I save the CRF page");
#line 561
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table98.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 562
 testRunner.Then("I verify Query is displayed", ((string)(null)), table98);
#line 565
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-03D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_03DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-03D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-03D"});
#line 569
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table99.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003D"});
            table99.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 572
 testRunner.And("I create a Subject", ((string)(null)), table99);
#line 577
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table100.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table100.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 578
 testRunner.When("I enter data in CRF", ((string)(null)), table100);
#line 582
    testRunner.And("I save the CRF page");
#line 583
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table101.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 584
 testRunner.Then("I verify Query is displayed", ((string)(null)), table101);
#line 587
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table102.AddRow(new string[] {
                        "Log Field 8",
                        "7"});
#line 588
 testRunner.When("I enter data in CRF", ((string)(null)), table102);
#line 591
    testRunner.And("I save the CRF page");
#line 592
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table103.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 593
 testRunner.Then("I verify Query is displayed", ((string)(null)), table103);
#line 596
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-04A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_04AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-04A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-04A"});
#line 600
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table104.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004A"});
            table104.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 603
 testRunner.And("I create a Subject", ((string)(null)), table104);
#line 608
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table105.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table105.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 609
 testRunner.When("I enter data in CRF", ((string)(null)), table105);
#line 613
    testRunner.And("I save the CRF page");
#line 614
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table106.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 615
 testRunner.Then("I verify Query is displayed", ((string)(null)), table106);
#line 618
    testRunner.And("I take a screenshot");
#line 619
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table107.AddRow(new string[] {
                        "Log Field 1",
                        "3"});
#line 620
 testRunner.And("I enter data in CRF", ((string)(null)), table107);
#line 623
 testRunner.And("I save the CRF page");
#line 624
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table108.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 625
 testRunner.Then("I verify Query is displayed", ((string)(null)), table108);
#line 628
    testRunner.And("I take a screenshot");
#line 629
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 630
    testRunner.And("I save the CRF page");
#line 631
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table109.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 632
 testRunner.Then("I verify Query is displayed", ((string)(null)), table109);
#line 635
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table110.AddRow(new string[] {
                        "Log Field 1",
                        "7"});
#line 636
 testRunner.And("I enter data in CRF", ((string)(null)), table110);
#line 639
 testRunner.And("I save the CRF page");
#line 640
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table111.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 641
    testRunner.Then("I verify Query is displayed", ((string)(null)), table111);
#line 644
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-04B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_04BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-04B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-04B",
                        "ignore"});
#line 650
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table112.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table112.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004B"});
            table112.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 653
 testRunner.And("I create a Subject", ((string)(null)), table112);
#line 658
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table113.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table113.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 659
 testRunner.When("I enter data in CRF", ((string)(null)), table113);
#line 663
    testRunner.And("I save the CRF page");
#line 664
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table114.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 665
 testRunner.Then("I verify Query is displayed", ((string)(null)), table114);
#line 668
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Log Field 3",
                        "3"});
#line 669
 testRunner.When("I enter data in CRF", ((string)(null)), table115);
#line 672
    testRunner.And("I save the CRF page");
#line 673
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table116.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 675
 testRunner.Then("I verify Query is displayed", ((string)(null)), table116);
#line 678
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table117.AddRow(new string[] {
                        "Log Field 3",
                        "7"});
#line 679
 testRunner.When("I enter data in CRF", ((string)(null)), table117);
#line 682
    testRunner.And("I save the CRF page");
#line 683
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table118.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 684
 testRunner.Then("I verify Query is displayed", ((string)(null)), table118);
#line 687
 testRunner.And("I takea screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-04C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_04CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-04C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-04C",
                        "ignore"});
#line 693
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table119.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004C"});
            table119.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 696
 testRunner.And("I create a Subject", ((string)(null)), table119);
#line 701
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table120.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table120.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 702
 testRunner.When("I enter data in CRF", ((string)(null)), table120);
#line 706
    testRunner.And("I save the CRF page");
#line 707
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table121.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 708
 testRunner.Then("I verify Query is displayed", ((string)(null)), table121);
#line 711
 testRunner.And("I take a screenshot");
#line 712
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table122.AddRow(new string[] {
                        "Log Field 5",
                        "3"});
#line 713
    testRunner.And("I enter data in CRF", ((string)(null)), table122);
#line 716
    testRunner.And("I save the CRF page");
#line 717
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table123.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "True",
                        "True"});
#line 718
 testRunner.Then("I verify Query is displayed", ((string)(null)), table123);
#line 722
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Log Field 5",
                        "7"});
#line 723
 testRunner.And("I enter data in CRF", ((string)(null)), table124);
#line 726
    testRunner.And("I save the CRF page");
#line 727
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table125.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 728
 testRunner.Then("I verify Query is displayed", ((string)(null)), table125);
#line 731
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-04D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_04DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-04D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-04D",
                        "ignore"});
#line 737
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table126.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004D"});
            table126.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 740
 testRunner.And("I create a Subject", ((string)(null)), table126);
#line 745
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table127.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 746
 testRunner.When("I enter data in CRF", ((string)(null)), table127);
#line 750
    testRunner.And("I save the CRF page");
#line 751
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table128.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 752
 testRunner.Then("I verify Query is displayed", ((string)(null)), table128);
#line 755
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table129.AddRow(new string[] {
                        "Log Field 7",
                        "3"});
#line 756
 testRunner.When("I enter data in CRF", ((string)(null)), table129);
#line 759
 testRunner.And("I save the CRF page");
#line 760
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table130.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 761
 testRunner.Then("I verify Query is displayed", ((string)(null)), table130);
#line 764
 testRunner.And("I take a screenshot");
#line 765
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 767
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table131.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 768
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table131);
#line 771
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table132.AddRow(new string[] {
                        "Log Field 7",
                        "7"});
#line 772
 testRunner.When("I enter data in CRF", ((string)(null)), table132);
#line 775
 testRunner.And("I save the CRF page");
#line 776
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table133.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 777
 testRunner.Then("I verify Query is displayed", ((string)(null)), table133);
#line 780
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-05A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_05AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-05A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-05A"});
#line 785
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table134.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005A"});
            table134.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 788
 testRunner.And("I create a Subject", ((string)(null)), table134);
#line 793
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table135.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table135.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 794
 testRunner.When("I enter data in CRF", ((string)(null)), table135);
#line 798
    testRunner.And("I save the CRF page");
#line 799
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table136.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 800
 testRunner.Then("I verify Query is displayed", ((string)(null)), table136);
#line 803
 testRunner.And("I take a screenshot");
#line 804
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 805
    testRunner.And("I enter data in CRF", ((string)(null)), table137);
#line 808
    testRunner.And("I save the CRF page");
#line 809
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table138.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 810
 testRunner.Then("I verify Query is displayed", ((string)(null)), table138);
#line 813
 testRunner.And("I take a screenshot");
#line 814
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 815
    testRunner.And("I save the CRF page");
#line 816
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table139.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 817
 testRunner.Then("I verify Query is displayed", ((string)(null)), table139);
#line 820
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table140.AddRow(new string[] {
                        "Log Field 2",
                        "7"});
#line 821
 testRunner.And("I enter data in CRF", ((string)(null)), table140);
#line 824
    testRunner.And("I save the CRF page");
#line 825
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table141.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 826
 testRunner.Then("I verify Query is displayed", ((string)(null)), table141);
#line 829
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-05B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_05BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-05B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-05B"});
#line 833
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table142.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005B"});
            table142.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 836
 testRunner.And("I create a Subject", ((string)(null)), table142);
#line 841
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table143.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table143.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 842
 testRunner.When("I enter data in CRF", ((string)(null)), table143);
#line 846
    testRunner.And("I save the CRF page");
#line 847
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table144.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 848
 testRunner.Then("I verify Query is displayed", ((string)(null)), table144);
#line 851
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table145.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 852
 testRunner.When("I enter data in CRF", ((string)(null)), table145);
#line 855
 testRunner.And("I save the CRF page");
#line 856
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table146.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 857
 testRunner.Then("I verify Query is displayed", ((string)(null)), table146);
#line 860
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table147.AddRow(new string[] {
                        "Log Field 4",
                        "7"});
#line 861
 testRunner.When("I enter data in CRF", ((string)(null)), table147);
#line 864
    testRunner.And("I save the CRF page");
#line 865
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table148.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 866
 testRunner.Then("I verify Query is displayed", ((string)(null)), table148);
#line 869
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"PB-US12940-05C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_05CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"PB-US12940-05C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-05C",
                        "ignore"});
#line 875
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table149.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table149.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005C"});
            table149.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 878
 testRunner.And("I create a Subject", ((string)(null)), table149);
#line 883
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table150.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table150.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 884
 testRunner.When("I enter data in CRF", ((string)(null)), table150);
#line 888
    testRunner.And("I save the CRF page");
#line 889
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table151.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 890
 testRunner.Then("I verify Query is displayed", ((string)(null)), table151);
#line 893
 testRunner.And("I take a screenshot");
#line 894
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table152.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 895
    testRunner.And("I enter data in CRF", ((string)(null)), table152);
#line 898
    testRunner.And("I save the CRF page");
#line 899
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table153.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "True",
                        "True"});
#line 900
 testRunner.Then("I verify Query is displayed", ((string)(null)), table153);
#line 903
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table154.AddRow(new string[] {
                        "Log Field 6",
                        "7"});
#line 905
  testRunner.And("I enter data in CRF", ((string)(null)), table154);
#line 908
    testRunner.And("I save the CRF page");
#line 909
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table155.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 910
 testRunner.Then("I verify Query is displayed", ((string)(null)), table155);
#line 913
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic6_LogForm_2FldEC")]
        public virtual void PB_US12940_05DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "PB-US12940-05D"});
#line 917
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table156.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Standard Study,prod,Subject Number)}"});
            table156.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005D"});
            table156.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 920
 testRunner.And("I create a Subject", ((string)(null)), table156);
#line 925
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table157.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table157.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 926
 testRunner.When("I enter data in CRF", ((string)(null)), table157);
#line 930
    testRunner.And("I save the CRF page");
#line 931
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table158.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 932
 testRunner.Then("I verify Query is displayed", ((string)(null)), table158);
#line 935
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table159.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 936
 testRunner.When("I enter data in CRF", ((string)(null)), table159);
#line 939
    testRunner.And("I save the CRF page");
#line 940
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table160.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 941
 testRunner.Then("I verify Query is displayed", ((string)(null)), table160);
#line 944
 testRunner.And("I take a screenshot");
#line 945
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 946
 testRunner.And("I save the CRF page");
#line 947
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table161.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 948
 testRunner.Then("I verify Query is displayed", ((string)(null)), table161);
#line 951
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table162.AddRow(new string[] {
                        "Log Field 8",
                        "7"});
#line 952
 testRunner.When("I enter data in CRF", ((string)(null)), table162);
#line 955
    testRunner.And("I save the CRF page");
#line 956
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table163.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 957
 testRunner.Then("I verify Query is displayed", ((string)(null)), table163);
#line 960
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
