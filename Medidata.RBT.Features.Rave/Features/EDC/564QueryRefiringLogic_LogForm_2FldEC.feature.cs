// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _564QueryRefiringLogic_LogForm_2FldECFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic_LogForm_2FldEC.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "564QueryRefiringLogic_LogForm_2FldEC", "  Query Refiring Logic\r\nAs a Rave user\r\nWhen I manually close a query or cancel, " +
                    "the query should not re-fire if the exact same data is entered into the system\r\n" +
                    "So that I don\'t have to re-enter the exact same response", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "564QueryRefiringLogic_LogForm_2FldEC")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._564QueryRefiringLogic_LogForm_2FldECFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 15
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Stud",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "User 1",
                        "Standard Study",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 16
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 19
 testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line 20
 testRunner.And("Study \"Standard Study\" has Draft \"<Draft1>\"");
#line 21
 testRunner.And("I publish and push CRF Version \"CRF Version<RANDOMNUMBER>\" of Draft \"<Draft1>\" to" +
                    " site \"Site 1\" in Study \"Standard Study\"");
#line 22
 testRunner.And("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_01AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01A",
                        "Draft"});
#line 27
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table2.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 30
 testRunner.And("I create a Subject", ((string)(null)), table2);
#line 35
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table3.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 36
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 40
 testRunner.When("I save the CRF page");
#line 41
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table4.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 42
 testRunner.Then("I verify Query is displayed", ((string)(null)), table4);
#line 45
 testRunner.And("I take a screenshot");
#line 46
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 47
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 50
 testRunner.And("I save the CRF page");
#line 51
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table6.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 52
 testRunner.Then("I verify Query is displayed", ((string)(null)), table6);
#line 55
 testRunner.And("I take a screenshot");
#line 56
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 57
 testRunner.And("I save the CRF page");
#line 58
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table7.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 59
 testRunner.Then("I verify Query is displayed", ((string)(null)), table7);
#line 62
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Log Field 2",
                        "5"});
#line 63
 testRunner.When("I enter data in CRF", ((string)(null)), table8);
#line 66
 testRunner.And("I save the CRF page");
#line 67
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table9.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 68
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table9);
#line 71
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 72
 testRunner.When("I enter data in CRF", ((string)(null)), table10);
#line 75
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table11.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 76
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table11);
#line 79
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I changed the data in log field B to another bad data, and the new query will open, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_01BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheNewQueryWillOpenIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I changed the data in log field B to another bad data, and the new query will open, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01B",
                        "Draft"});
#line 84
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table12.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table12.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 87
 testRunner.And("I create a Subject", ((string)(null)), table12);
#line 92
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table13.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 93
 testRunner.And("I enter data in CRF", ((string)(null)), table13);
#line 97
 testRunner.When("I save the CRF page");
#line 98
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table14.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 99
 testRunner.Then("I verify Query is displayed", ((string)(null)), table14);
#line 102
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 103
 testRunner.When("I enter data in CRF", ((string)(null)), table15);
#line 106
 testRunner.And("I save the CRF page");
#line 107
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table16.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 108
 testRunner.Then("I verify Query is displayed", ((string)(null)), table16);
#line 111
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Log Field 4",
                        "5"});
#line 112
 testRunner.And("I enter data in CRF", ((string)(null)), table17);
#line 115
 testRunner.When("I save the CRF page");
#line 116
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message"});
            table18.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify."});
#line 117
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table18);
#line 120
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 121
 testRunner.And("I enter data in CRF", ((string)(null)), table19);
#line 124
 testRunner.When("I save the CRF page");
#line 125
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table20.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 126
 testRunner.Then("I verify Query is displayed", ((string)(null)), table20);
#line 129
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_01CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01C",
                        "ignore"});
#line 135
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table21.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9001C"});
            table21.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 138
 testRunner.And("I create a Subject", ((string)(null)), table21);
#line 143
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table22.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 144
 testRunner.When("I enter data in CRF", ((string)(null)), table22);
#line 148
    testRunner.And("I save the CRF page");
#line 149
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table23.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 150
 testRunner.Then("I verify Query is displayed", ((string)(null)), table23);
#line 153
 testRunner.And("I take a screenshot");
#line 154
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 155
 testRunner.And("I enter data in CRF", ((string)(null)), table24);
#line 158
    testRunner.And("I save the CRF page");
#line 159
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table25.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 160
 testRunner.Then("I verify Query is displayed", ((string)(null)), table25);
#line 163
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Log Field 6",
                        "5"});
#line 164
 testRunner.When("I enter data in CRF", ((string)(null)), table26);
#line 167
 testRunner.And("I save the CRF page");
#line 168
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table27.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 169
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table27);
#line 172
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 173
 testRunner.And("I enter data in CRF", ((string)(null)), table28);
#line 176
 testRunner.And("I save the CRF page");
#line 177
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table29.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 178
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table29);
#line 181
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_01DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInLogFieldBAndThenAgainEnteredTheSameBadDataInLogFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I entered good data in log field B and then again entered the same bad data in log field B as when the query was closed, then the system should not refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01D",
                        "Draft"});
#line 187
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table30.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9001D"});
            table30.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 190
 testRunner.And("I create a Subject", ((string)(null)), table30);
#line 195
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table31.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 196
 testRunner.When("I enter data in CRF", ((string)(null)), table31);
#line 200
 testRunner.And("I save the CRF page");
#line 201
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table32.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 202
 testRunner.Then("I verify Query is displayed", ((string)(null)), table32);
#line 205
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 206
 testRunner.When("I enter data in CRF", ((string)(null)), table33);
#line 209
 testRunner.And("I save the CRF page");
#line 210
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table34.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 211
 testRunner.Then("I verify Query is displayed", ((string)(null)), table34);
#line 214
 testRunner.And("I take a screenshot");
#line 215
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 216
 testRunner.And("I save the CRF page");
#line 217
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table35.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 218
 testRunner.Then("I verify Query is displayed", ((string)(null)), table35);
#line 221
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table36.AddRow(new string[] {
                        "Log Field 8",
                        "5"});
#line 222
 testRunner.When("I enter data in CRF", ((string)(null)), table36);
#line 225
 testRunner.And("I save the CRF page");
#line 226
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table37.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 227
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table37);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table38.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 230
 testRunner.And("I verify Query is displayed", ((string)(null)), table38);
#line 233
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 234
 testRunner.When("I enter data in CRF", ((string)(null)), table39);
#line 237
 testRunner.And("I save the CRF page");
#line 238
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table40.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 239
 testRunner.Then("I verify Query is displayed", ((string)(null)), table40);
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table41.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 242
 testRunner.And("I verify Query is not displayed", ((string)(null)), table41);
#line 245
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02A",
                        "Draft"});
#line 250
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table42.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002A"});
            table42.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 253
 testRunner.And("I create a Subject", ((string)(null)), table42);
#line 258
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table43.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 259
 testRunner.When("I enter data in CRF", ((string)(null)), table43);
#line 263
 testRunner.And("I save the CRF page");
#line 264
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table44.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 265
 testRunner.Then("I verify Query is displayed", ((string)(null)), table44);
#line 268
 testRunner.And("I take a screenshot");
#line 269
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table45.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 270
 testRunner.And("I enter data in CRF", ((string)(null)), table45);
#line 273
 testRunner.And("I save the CRF page");
#line 274
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table46.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 275
 testRunner.Then("I verify Query is displayed", ((string)(null)), table46);
#line 278
 testRunner.And("I take a screenshot");
#line 279
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 280
 testRunner.And("I save the CRF page");
#line 281
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table47.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 282
 testRunner.Then("I verify Query is displayed", ((string)(null)), table47);
#line 285
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Log Field 2",
                        "5"});
#line 286
 testRunner.When("I enter data in CRF", ((string)(null)), table48);
#line 289
 testRunner.And("I save the CRF page");
#line 290
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table49.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 291
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table49);
#line 294
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 295
 testRunner.When("I enter data in CRF", ((string)(null)), table50);
#line 298
    testRunner.And("I save the CRF page");
#line 299
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table51.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 300
 testRunner.Then("I verify Query is displayed", ((string)(null)), table51);
#line 303
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02B	As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02B	As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02B",
                        "Draft"});
#line 308
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table52.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table52.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002B"});
            table52.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 311
 testRunner.And("I create a Subject", ((string)(null)), table52);
#line 316
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table53.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 317
 testRunner.When("I enter data in CRF", ((string)(null)), table53);
#line 321
    testRunner.And("I save the CRF page");
#line 322
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table54.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 323
 testRunner.Then("I verify Query is displayed", ((string)(null)), table54);
#line 326
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 327
 testRunner.When("I enter data in CRF", ((string)(null)), table55);
#line 330
 testRunner.And("I save the CRF page");
#line 331
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table56.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 332
    testRunner.Then("I verify Query is displayed", ((string)(null)), table56);
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Log Field 4",
                        "5"});
#line 335
 testRunner.When("I enter data in CRF", ((string)(null)), table57);
#line 338
 testRunner.And("I save the CRF page");
#line 339
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table58.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 340
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table58);
#line 343
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table59.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 344
 testRunner.When("I enter data in CRF", ((string)(null)), table59);
#line 347
 testRunner.And("I save the CRF page");
#line 348
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table60.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 349
    testRunner.Then("I verify Query is displayed", ((string)(null)), table60);
#line 352
    testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_02CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02C",
                        "ignore"});
#line 358
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table61.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002C"});
            table61.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 361
 testRunner.And("I create a Subject", ((string)(null)), table61);
#line 366
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table62.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 367
 testRunner.When("I enter data in CRF", ((string)(null)), table62);
#line 371
    testRunner.And("I save the CRF page");
#line 372
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table63.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 373
 testRunner.Then("I verify Query is displayed", ((string)(null)), table63);
#line 376
 testRunner.And("I take a screenshot");
#line 377
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 378
 testRunner.And("I enter data in CRF", ((string)(null)), table64);
#line 381
 testRunner.And("I save the CRF page");
#line 382
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table65.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 383
 testRunner.Then("I verify Query is displayed", ((string)(null)), table65);
#line 386
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Log Field 6",
                        "5"});
#line 388
 testRunner.When("I enter data in CRF", ((string)(null)), table66);
#line 391
    testRunner.And("I save the CRF page");
#line 392
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table67.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 393
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table67);
#line 396
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 397
 testRunner.When("I enter data in CRF", ((string)(null)), table68);
#line 400
 testRunner.And("I save the CRF page");
#line 401
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table69.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 402
 testRunner.Then("I verify Query is displayed", ((string)(null)), table69);
#line 405
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the original bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02D",
                        "Draft"});
#line 410
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table70.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9002D"});
            table70.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table70.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 413
 testRunner.And("I create a Subject", ((string)(null)), table70);
#line 418
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table71.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 419
 testRunner.When("I enter data in CRF", ((string)(null)), table71);
#line 423
    testRunner.And("I save the CRF page");
#line 424
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table72.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 425
 testRunner.Then("I verify Query is displayed", ((string)(null)), table72);
#line 428
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 429
 testRunner.When("I enter data in CRF", ((string)(null)), table73);
#line 432
 testRunner.And("I save the CRF page");
#line 433
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table74.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 434
 testRunner.Then("I verify Query is displayed", ((string)(null)), table74);
#line 437
    testRunner.And("I take a screenshot");
#line 438
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 439
 testRunner.And("I save the CRF page");
#line 440
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table75.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 441
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table75);
#line 444
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Log Field 8",
                        "5"});
#line 445
 testRunner.When("I enter data in CRF", ((string)(null)), table76);
#line 448
    testRunner.And("I save the CRF page");
#line 449
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table77.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 450
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table77);
#line 453
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 454
 testRunner.When("I enter data in CRF", ((string)(null)), table78);
#line 457
    testRunner.And("I save the CRF page");
#line 458
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table79.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 459
 testRunner.Then("I verify Query is displayed", ((string)(null)), table79);
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_03AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03A",
                        "Draft"});
#line 466
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table80.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003A"});
            table80.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 469
 testRunner.And("I create a Subject", ((string)(null)), table80);
#line 474
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table81.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 475
 testRunner.When("I enter data in CRF", ((string)(null)), table81);
#line 479
    testRunner.And("I save the CRF page");
#line 480
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table82.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 481
 testRunner.Then("I verify Query is displayed", ((string)(null)), table82);
#line 484
 testRunner.And("I take a screenshot");
#line 485
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 486
 testRunner.And("I enter data in CRF", ((string)(null)), table83);
#line 489
 testRunner.And("I save the CRF page");
#line 490
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table84.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 491
 testRunner.Then("I verify Query is displayed", ((string)(null)), table84);
#line 494
    testRunner.And("I take a screenshot");
#line 495
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 496
    testRunner.And("I save the CRF page");
#line 497
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table85.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 498
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table85);
#line 501
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table86.AddRow(new string[] {
                        "Log Field 2",
                        "5"});
#line 502
 testRunner.And("I enter data in CRF", ((string)(null)), table86);
#line 505
 testRunner.And("I save the CRF page");
#line 506
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table87.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 507
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table87);
#line 510
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table88.AddRow(new string[] {
                        "Log Field 2",
                        "7"});
#line 511
 testRunner.And("I enter data in CRF", ((string)(null)), table88);
#line 514
 testRunner.And("I save the CRF page");
#line 515
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table89.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 516
 testRunner.Then("I verify Query is displayed", ((string)(null)), table89);
#line 519
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03B	 As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_03BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03B	 As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03B",
                        "Draft"});
#line 524
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table90.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table90.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003B"});
            table90.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 527
 testRunner.And("I create a Subject", ((string)(null)), table90);
#line 532
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table91.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table91.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 533
 testRunner.When("I enter data in CRF", ((string)(null)), table91);
#line 537
    testRunner.And("I save the CRF page");
#line 538
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table92.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 539
 testRunner.Then("I verify Query is displayed", ((string)(null)), table92);
#line 542
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table93.AddRow(new string[] {
                        "Log Field 4",
                        "7"});
#line 543
 testRunner.And("I enter data in CRF", ((string)(null)), table93);
#line 546
 testRunner.And("I save the CRF page");
#line 547
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table94.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 548
 testRunner.Then("I verify Query is displayed", ((string)(null)), table94);
#line 551
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_03CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03C",
                        "Draft"});
#line 556
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table95.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table95.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003C"});
            table95.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 559
 testRunner.And("I create a Subject", ((string)(null)), table95);
#line 564
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table96.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table96.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 565
 testRunner.When("I enter data in CRF", ((string)(null)), table96);
#line 569
    testRunner.And("I save the CRF page");
#line 570
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table97.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 571
 testRunner.Then("I verify Query is displayed", ((string)(null)), table97);
#line 574
 testRunner.And("I take a screenshot");
#line 575
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line 576
 testRunner.And("I save the CRF page");
#line 577
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table98.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 578
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table98);
#line 581
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Log Field 6",
                        "7"});
#line 582
 testRunner.When("I enter data in CRF", ((string)(null)), table99);
#line 585
    testRunner.And("I save the CRF page");
#line 586
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table100.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 587
 testRunner.Then("I verify Query is displayed", ((string)(null)), table100);
#line 590
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_03DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03D",
                        "Draft"});
#line 595
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table101.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table101.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9003D"});
            table101.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 598
 testRunner.And("I create a Subject", ((string)(null)), table101);
#line 603
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table102.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table102.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 604
 testRunner.When("I enter data in CRF", ((string)(null)), table102);
#line 608
    testRunner.And("I save the CRF page");
#line 609
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table103.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 610
 testRunner.Then("I verify Query is displayed", ((string)(null)), table103);
#line 613
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Log Field 8",
                        "7"});
#line 614
 testRunner.When("I enter data in CRF", ((string)(null)), table104);
#line 617
    testRunner.And("I save the CRF page");
#line 618
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table105.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 619
 testRunner.Then("I verify Query is displayed", ((string)(null)), table105);
#line 622
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_04AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04A",
                        "Draft"});
#line 627
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table106.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table106.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004A"});
            table106.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 630
 testRunner.And("I create a Subject", ((string)(null)), table106);
#line 635
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table107.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table107.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 636
 testRunner.When("I enter data in CRF", ((string)(null)), table107);
#line 640
    testRunner.And("I save the CRF page");
#line 641
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table108.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 642
 testRunner.Then("I verify Query is displayed", ((string)(null)), table108);
#line 645
    testRunner.And("I take a screenshot");
#line 646
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Log Field 1",
                        "3"});
#line 647
 testRunner.And("I enter data in CRF", ((string)(null)), table109);
#line 650
 testRunner.And("I save the CRF page");
#line 651
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table110.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 652
 testRunner.Then("I verify Query is displayed", ((string)(null)), table110);
#line 655
    testRunner.And("I take a screenshot");
#line 656
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 657
    testRunner.And("I save the CRF page");
#line 658
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table111.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 659
 testRunner.Then("I verify Query is displayed", ((string)(null)), table111);
#line 662
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table112.AddRow(new string[] {
                        "Log Field 1",
                        "7"});
#line 663
 testRunner.And("I enter data in CRF", ((string)(null)), table112);
#line 666
 testRunner.And("I save the CRF page");
#line 667
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table113.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 668
    testRunner.Then("I verify Query is displayed", ((string)(null)), table113);
#line 671
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_04BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04B",
                        "ignore"});
#line 677
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table114.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004B"});
            table114.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 680
 testRunner.And("I create a Subject", ((string)(null)), table114);
#line 685
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table115.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table115.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 686
 testRunner.When("I enter data in CRF", ((string)(null)), table115);
#line 690
    testRunner.And("I save the CRF page");
#line 691
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table116.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 692
 testRunner.Then("I verify Query is displayed", ((string)(null)), table116);
#line 695
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table117.AddRow(new string[] {
                        "Log Field 3",
                        "3"});
#line 696
 testRunner.When("I enter data in CRF", ((string)(null)), table117);
#line 699
    testRunner.And("I save the CRF page");
#line 700
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table118.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 702
 testRunner.Then("I verify Query is displayed", ((string)(null)), table118);
#line 705
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Log Field 3",
                        "7"});
#line 706
 testRunner.When("I enter data in CRF", ((string)(null)), table119);
#line 709
    testRunner.And("I save the CRF page");
#line 710
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table120.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 711
 testRunner.Then("I verify Query is displayed", ((string)(null)), table120);
#line 714
 testRunner.And("I takea screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_04CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04C",
                        "ignore"});
#line 720
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table121.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004C"});
            table121.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 723
 testRunner.And("I create a Subject", ((string)(null)), table121);
#line 728
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table122.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table122.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 729
 testRunner.When("I enter data in CRF", ((string)(null)), table122);
#line 733
    testRunner.And("I save the CRF page");
#line 734
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table123.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 735
 testRunner.Then("I verify Query is displayed", ((string)(null)), table123);
#line 738
 testRunner.And("I take a screenshot");
#line 739
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table124.AddRow(new string[] {
                        "Log Field 5",
                        "3"});
#line 740
    testRunner.And("I enter data in CRF", ((string)(null)), table124);
#line 743
    testRunner.And("I save the CRF page");
#line 744
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table125.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "True",
                        "True"});
#line 745
 testRunner.Then("I verify Query is displayed", ((string)(null)), table125);
#line 749
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table126.AddRow(new string[] {
                        "Log Field 5",
                        "7"});
#line 750
 testRunner.And("I enter data in CRF", ((string)(null)), table126);
#line 753
    testRunner.And("I save the CRF page");
#line 754
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table127.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 755
 testRunner.Then("I verify Query is displayed", ((string)(null)), table127);
#line 758
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_04DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldAThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field A to another bad data, and the query is then closed, if I then entered the new bad data in log field A, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04D",
                        "ignore"});
#line 764
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table128.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table128.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9004D"});
            table128.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 767
 testRunner.And("I create a Subject", ((string)(null)), table128);
#line 772
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table129.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table129.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 773
 testRunner.When("I enter data in CRF", ((string)(null)), table129);
#line 777
    testRunner.And("I save the CRF page");
#line 778
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table130.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 779
 testRunner.Then("I verify Query is displayed", ((string)(null)), table130);
#line 782
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table131.AddRow(new string[] {
                        "Log Field 7",
                        "3"});
#line 783
 testRunner.When("I enter data in CRF", ((string)(null)), table131);
#line 786
 testRunner.And("I save the CRF page");
#line 787
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table132.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 788
 testRunner.Then("I verify Query is displayed", ((string)(null)), table132);
#line 791
 testRunner.And("I take a screenshot");
#line 792
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 794
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table133.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 795
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table133);
#line 798
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Log Field 7",
                        "7"});
#line 799
 testRunner.When("I enter data in CRF", ((string)(null)), table134);
#line 802
 testRunner.And("I save the CRF page");
#line 803
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table135.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 804
 testRunner.Then("I verify Query is displayed", ((string)(null)), table135);
#line 807
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05AAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05A As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05A",
                        "Draft"});
#line 812
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table136.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005A"});
            table136.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table136.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 815
 testRunner.And("I create a Subject", ((string)(null)), table136);
#line 820
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table137.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table137.AddRow(new string[] {
                        "Log Field 2",
                        "4"});
#line 821
 testRunner.When("I enter data in CRF", ((string)(null)), table137);
#line 825
    testRunner.And("I save the CRF page");
#line 826
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table138.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 827
 testRunner.Then("I verify Query is displayed", ((string)(null)), table138);
#line 830
 testRunner.And("I take a screenshot");
#line 831
 testRunner.When("I answer the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on " +
                    "Field \"Log Field 2\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Log Field 2",
                        "3"});
#line 832
    testRunner.And("I enter data in CRF", ((string)(null)), table139);
#line 835
    testRunner.And("I save the CRF page");
#line 836
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table140.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "False"});
#line 837
 testRunner.Then("I verify Query is displayed", ((string)(null)), table140);
#line 840
 testRunner.And("I take a screenshot");
#line 841
 testRunner.When("I close the Query \"Log field 2 must be equal to Log field 1. Please verify.\" on F" +
                    "ield \"Log Field 2\"");
#line 842
    testRunner.And("I save the CRF page");
#line 843
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table141.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "True",
                        "True"});
#line 844
 testRunner.Then("I verify Query is displayed", ((string)(null)), table141);
#line 847
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table142.AddRow(new string[] {
                        "Log Field 2",
                        "7"});
#line 848
 testRunner.And("I enter data in CRF", ((string)(null)), table142);
#line 851
    testRunner.And("I save the CRF page");
#line 852
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table143.AddRow(new string[] {
                        "Log Field 2",
                        "Log field 2 must be equal to Log field 1. Please verify.",
                        "False",
                        "False"});
#line 853
 testRunner.Then("I verify Query is displayed", ((string)(null)), table143);
#line 856
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05BAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05B As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05B",
                        "Draft"});
#line 861
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table144.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005B"});
            table144.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table144.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 864
 testRunner.And("I create a Subject", ((string)(null)), table144);
#line 869
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table145.AddRow(new string[] {
                        "Log Field 3",
                        "5"});
            table145.AddRow(new string[] {
                        "Log Field 4",
                        "4"});
#line 870
 testRunner.When("I enter data in CRF", ((string)(null)), table145);
#line 874
    testRunner.And("I save the CRF page");
#line 875
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table146.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 876
 testRunner.Then("I verify Query is displayed", ((string)(null)), table146);
#line 879
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table147.AddRow(new string[] {
                        "Log Field 4",
                        "3"});
#line 880
 testRunner.When("I enter data in CRF", ((string)(null)), table147);
#line 883
 testRunner.And("I save the CRF page");
#line 884
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table148.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 885
 testRunner.Then("I verify Query is displayed", ((string)(null)), table148);
#line 888
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table149.AddRow(new string[] {
                        "Log Field 4",
                        "7"});
#line 889
 testRunner.When("I enter data in CRF", ((string)(null)), table149);
#line 892
    testRunner.And("I save the CRF page");
#line 893
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table150.AddRow(new string[] {
                        "Log Field 4",
                        "Log field 4 must be equal to Log field 3. Please verify.",
                        "False",
                        "False"});
#line 894
 testRunner.Then("I verify Query is displayed", ((string)(null)), table150);
#line 897
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_05CAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05C As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05C",
                        "ignore"});
#line 903
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table151.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table151.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005C"});
            table151.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 906
 testRunner.And("I create a Subject", ((string)(null)), table151);
#line 911
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table152.AddRow(new string[] {
                        "Log Field 5",
                        "5"});
            table152.AddRow(new string[] {
                        "Log Field 6",
                        "4"});
#line 912
 testRunner.When("I enter data in CRF", ((string)(null)), table152);
#line 916
    testRunner.And("I save the CRF page");
#line 917
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table153.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 918
 testRunner.Then("I verify Query is displayed", ((string)(null)), table153);
#line 921
 testRunner.And("I take a screenshot");
#line 922
 testRunner.When("I answer the Query \"Log field 6 must be equal to Log field 5. Please verify.\" on " +
                    "Field \"Log Field 6\" with \"Data will be changed.\"");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table154.AddRow(new string[] {
                        "Log Field 6",
                        "3"});
#line 923
    testRunner.And("I enter data in CRF", ((string)(null)), table154);
#line 926
    testRunner.And("I save the CRF page");
#line 927
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table155.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "True",
                        "True"});
#line 928
 testRunner.Then("I verify Query is displayed", ((string)(null)), table155);
#line 931
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table156.AddRow(new string[] {
                        "Log Field 6",
                        "7"});
#line 933
  testRunner.And("I enter data in CRF", ((string)(null)), table156);
#line 936
    testRunner.And("I save the CRF page");
#line 937
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table157.AddRow(new string[] {
                        "Log Field 6",
                        "Log field 6 must be equal to Log field 5. Please verify.",
                        "False",
                        "False"});
#line 938
 testRunner.Then("I verify Query is displayed", ((string)(null)), table157);
#line 941
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic_LogForm_2FldEC")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05DAsAnEDCUserWhenIEnteredBadDataInLogFieldAAndLogFieldBThatResultedInTheSystemOpeningAQueryOnLogFieldBAndIAnsweredTheQueryAndIChangedTheDataInLogFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInLogFieldBThenTheSystemShouldRefireAQueryOnLogFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05D As an EDC user, when I entered bad data in log field A and log field B that resulted in the system opening a query on log field B, and I answered the query and I changed the data in log field B to another bad data, and the query is then closed, if I then entered the new bad data in log field B, then the system should refire a query on log field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05D",
                        "Draft"});
#line 946
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table158.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table158.AddRow(new string[] {
                        "Subject Initials",
                        "SUB9005D"});
            table158.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 949
 testRunner.And("I create a Subject", ((string)(null)), table158);
#line 954
 testRunner.And("I select Form \"Form 9\"");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table159.AddRow(new string[] {
                        "Log Field 7",
                        "5"});
            table159.AddRow(new string[] {
                        "Log Field 8",
                        "4"});
#line 955
 testRunner.When("I enter data in CRF", ((string)(null)), table159);
#line 959
    testRunner.And("I save the CRF page");
#line 960
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table160.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 961
 testRunner.Then("I verify Query is displayed", ((string)(null)), table160);
#line 964
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table161.AddRow(new string[] {
                        "Log Field 8",
                        "3"});
#line 965
 testRunner.When("I enter data in CRF", ((string)(null)), table161);
#line 968
    testRunner.And("I save the CRF page");
#line 969
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table162.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "False"});
#line 970
 testRunner.Then("I verify Query is displayed", ((string)(null)), table162);
#line 973
 testRunner.And("I take a screenshot");
#line 974
 testRunner.When("I close the Query \"Log field 8 must be equal to Log field 7. Please verify.\" on F" +
                    "ield \"Log Field 8\"");
#line 975
 testRunner.And("I save the CRF page");
#line 976
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table163.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "True",
                        "True"});
#line 977
 testRunner.Then("I verify Query is displayed", ((string)(null)), table163);
#line 980
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table164.AddRow(new string[] {
                        "Log Field 8",
                        "7"});
#line 981
 testRunner.When("I enter data in CRF", ((string)(null)), table164);
#line 984
    testRunner.And("I save the CRF page");
#line 985
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table165.AddRow(new string[] {
                        "Log Field 8",
                        "Log field 8 must be equal to Log field 7. Please verify.",
                        "False",
                        "False"});
#line 986
 testRunner.Then("I verify Query is displayed", ((string)(null)), table165);
#line 989
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
