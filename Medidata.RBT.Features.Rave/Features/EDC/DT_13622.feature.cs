// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class DT13622WhenAnEditCheckSetsDatapointXYZToRequireVerificationIfTheVerificationIsBrokenOnXYZByADataChangeThisIsNotAudited_Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DT_13622.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
                    "rification is broken on XYZ by a data change, this is not audited.", "As a Rave user\r\nGiven I verify data\r\nWhen I change the data\r\nAnd the verification" +
                    " is broken\r\nThen I should see an audit for the unverification", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
                            "rification is broken on XYZ by a data change, this is not audited.")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.DT13622WhenAnEditCheckSetsDatapointXYZToRequireVerificationIfTheVerificationIsBrokenOnXYZByADataChangeThisIsNotAudited_Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 10
#line 11
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Project",
                        "Environment",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "User 1",
                        "Mediflex",
                        "Prod",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 12
 testRunner.And("following Project assignments exist", ((string)(null)), table1);
#line 15
    testRunner.And("Role \"cdm1\" has Action \"Entry\"");
#line 16
 testRunner.And("Role \"cdm1\" has Action \"Verify\"");
#line 17
 testRunner.And("Project \"Mediflex\" has Draft \"<Draft1>\"");
#line 18
 testRunner.And("I publish and push CRF Version \"CRF Version<RANDOMNUMBER>\" of Draft \"<Draft1>\" to" +
                    " site \"Site 1\" in Project \"Mediflex\" for Enviroment \"Prod\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I have an edit check fired on one field that sets another field to require verification, and I verify the data for the field, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckFiredOnOneFieldThatSetsAnotherFieldToRequireVerificationAndIVerifyTheDataForTheFieldAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I have an edit check fired on one field that sets another field to require verification, and I verify the data for the field, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-01",
                        "WIP"});
#line 30
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "101"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 31
 testRunner.When("I create a Subject", ((string)(null)), table2);
#line 35
 testRunner.And("I am on CRF page \"Visit Date\" in Subject \"101SUBJ\" in Site \"Site 1\" in Study \"Med" +
                    "iflex\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table3.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011"});
            table3.AddRow(new string[] {
                        "Age",
                        "20"});
#line 36
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 40
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table4.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011",
                        "False"});
            table4.AddRow(new string[] {
                        "Age",
                        "20",
                        "False"});
#line 41
 testRunner.And("I verify data in CRF", ((string)(null)), table4);
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table5.AddRow(new string[] {
                        "Age",
                        "17"});
#line 45
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table6.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011",
                        "True"});
            table6.AddRow(new string[] {
                        "Age",
                        "17",
                        "False"});
#line 48
 testRunner.And("I verify data in CRF", ((string)(null)), table6);
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table7.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011"});
#line 52
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table7);
#line 55
 testRunner.And("I save the CRF");
#line 56
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table8.AddRow(new string[] {
                        "Visit Date",
                        "02 FEB 2011"});
#line 57
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 60
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table9.AddRow(new string[] {
                        "Visit Date",
                        "02 FEB 2011",
                        "True"});
            table9.AddRow(new string[] {
                        "Age",
                        "17",
                        "False"});
#line 61
 testRunner.And("I verify data in CRF", ((string)(null)), table9);
#line 65
 testRunner.And("I take screenshot");
#line 66
 testRunner.And("I go to Audits for Field \"Visit Date\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table10.AddRow(new string[] {
                        "User entered \'02 FEB 2011\'"});
            table10.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table10.AddRow(new string[] {
                        "DataPoint Verified."});
            table10.AddRow(new string[] {
                        "User entered \'01 FEB 2011\'"});
#line 67
 testRunner.Then("I verify Audits exist", ((string)(null)), table10);
#line 73
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I have an edit check fired on one field that sets another field to require verification, and I verify the data for the form, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckFiredOnOneFieldThatSetsAnotherFieldToRequireVerificationAndIVerifyTheDataForTheFormAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I have an edit check fired on one field that sets another field to require verification, and I verify the data for the form, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-02",
                        "WIP"});
#line 78
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table11.AddRow(new string[] {
                        "Subject Number",
                        "102"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 79
 testRunner.When("I create a Subject", ((string)(null)), table11);
#line 83
 testRunner.And("I am on CRF page \"Visit Date\" in Subject \"102SUBJ\" in Site \"Site 1\" in Study \"Med" +
                    "iflex\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table12.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011"});
            table12.AddRow(new string[] {
                        "Age",
                        "20"});
#line 84
 testRunner.And("I enter data in CRF", ((string)(null)), table12);
#line 88
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table13.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011",
                        "False"});
            table13.AddRow(new string[] {
                        "Age",
                        "20",
                        "False"});
#line 89
 testRunner.And("I verify data in CRF", ((string)(null)), table13);
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table14.AddRow(new string[] {
                        "Age",
                        "17"});
#line 93
 testRunner.And("I enter data in CRF", ((string)(null)), table14);
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table15.AddRow(new string[] {
                        "Visit Date",
                        "01 FEB 2011",
                        "True"});
            table15.AddRow(new string[] {
                        "Age",
                        "17",
                        "False"});
#line 96
 testRunner.And("I verify data in CRF", ((string)(null)), table15);
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form"});
            table16.AddRow(new string[] {
                        "Visit Date"});
#line 100
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table16);
#line 103
 testRunner.And("I save the CRF");
#line 104
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table17.AddRow(new string[] {
                        "Visit Date",
                        "02 FEB 2011"});
#line 105
 testRunner.And("I enter data in CRF", ((string)(null)), table17);
#line 108
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table18.AddRow(new string[] {
                        "Visit Date",
                        "02 FEB 2011",
                        "True"});
            table18.AddRow(new string[] {
                        "Age",
                        "17",
                        "False"});
#line 109
 testRunner.And("I verify data in CRF", ((string)(null)), table18);
#line 113
 testRunner.And("I take screenshot");
#line 114
 testRunner.And("I go to Audits for Field \"Visit Date\"");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table19.AddRow(new string[] {
                        "User entered \'02 FEB 2011\'"});
            table19.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table19.AddRow(new string[] {
                        "DataPoint Verified."});
            table19.AddRow(new string[] {
                        "User entered \'01 FEB 2011\'"});
#line 115
 testRunner.Then("I verify Audits exist", ((string)(null)), table19);
#line 121
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("As an EDC user, when I have an edit check that sets a field to require verificati" +
            "on, and I verify the data for the field, and I change the data, and the verifica" +
            "tion is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckThatSetsAFieldToRequireVerificationAndIVerifyTheDataForTheFieldAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an EDC user, when I have an edit check that sets a field to require verificati" +
                    "on, and I verify the data for the field, and I change the data, and the verifica" +
                    "tion is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-03",
                        "WIP"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table20.AddRow(new string[] {
                        "Subject Number",
                        "103"});
            table20.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 127
 testRunner.When("I create a Subject", ((string)(null)), table20);
#line 131
 testRunner.And("I am on CRF page \"Form 1\" in Subject \"103SUBJ\" in Site \"Site 1\" in Study \"Medifle" +
                    "x\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table21.AddRow(new string[] {
                        "Field 1",
                        "19"});
#line 132
 testRunner.And("I enter data in CRF", ((string)(null)), table21);
#line 135
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table22.AddRow(new string[] {
                        "Field 1",
                        "19",
                        "True"});
#line 136
 testRunner.And("I verify data in CRF", ((string)(null)), table22);
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table23.AddRow(new string[] {
                        "Field 1"});
#line 139
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table23);
#line 142
 testRunner.And("I save the CRF");
#line 143
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table24.AddRow(new string[] {
                        "Field 1",
                        "18"});
#line 144
 testRunner.And("I enter data in CRF", ((string)(null)), table24);
#line 147
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table25.AddRow(new string[] {
                        "Field 1",
                        "18",
                        "True"});
#line 148
 testRunner.And("I verify data in CRF", ((string)(null)), table25);
#line 151
 testRunner.And("I take screenshot");
#line 152
 testRunner.And("I go to Audits for Field \"Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table26.AddRow(new string[] {
                        "User entered \'18\'"});
            table26.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table26.AddRow(new string[] {
                        "DataPoint Verified."});
            table26.AddRow(new string[] {
                        "User entered \'19\'"});
#line 153
 testRunner.Then("I verify Audits exist", ((string)(null)), table26);
#line 159
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("As an EDC user, when I have an edit check that sets a field to require verificati" +
            "on, and I verify the data for the form, and I change the data, and the verificat" +
            "ion is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckThatSetsAFieldToRequireVerificationAndIVerifyTheDataForTheFormAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("As an EDC user, when I have an edit check that sets a field to require verificati" +
                    "on, and I verify the data for the form, and I change the data, and the verificat" +
                    "ion is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-04",
                        "WIP"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table27.AddRow(new string[] {
                        "Subject Number",
                        "104"});
            table27.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 165
 testRunner.When("I create a Subject", ((string)(null)), table27);
#line 169
 testRunner.And("I am on CRF page \"Form 1\" in Subject \"104SUBJ\" in Site \"Site 1\" in Study \"Medifle" +
                    "x\"");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table28.AddRow(new string[] {
                        "Field 1",
                        "19"});
#line 170
 testRunner.And("I enter data in CRF", ((string)(null)), table28);
#line 173
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table29.AddRow(new string[] {
                        "Field 1",
                        "19",
                        "True"});
#line 174
 testRunner.And("I verify data in CRF", ((string)(null)), table29);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form"});
            table30.AddRow(new string[] {
                        "Form 1"});
#line 177
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table30);
#line 180
 testRunner.And("I save the CRF");
#line 181
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table31.AddRow(new string[] {
                        "Field 1",
                        "18"});
#line 182
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 185
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table32.AddRow(new string[] {
                        "Field 1",
                        "18",
                        "True"});
#line 186
 testRunner.And("I verify data in CRF", ((string)(null)), table32);
#line 189
 testRunner.And("I take screenshot");
#line 190
 testRunner.And("I go to Audits for Field \"Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table33.AddRow(new string[] {
                        "User entered \'18\'"});
            table33.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table33.AddRow(new string[] {
                        "DataPoint Verified."});
            table33.AddRow(new string[] {
                        "User entered \'19\'"});
#line 191
 testRunner.Then("I verify Audits exist", ((string)(null)), table33);
#line 197
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I have an edit check fired on a field that is derived to sets another field to require verification, and I verify the data for the field, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckFiredOnAFieldThatIsDerivedToSetsAnotherFieldToRequireVerificationAndIVerifyTheDataForTheFieldAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I have an edit check fired on a field that is derived to sets another field to require verification, and I verify the data for the field, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-05",
                        "WIP"});
#line 202
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table34.AddRow(new string[] {
                        "Subject Number",
                        "105"});
            table34.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 203
 testRunner.When("I create a Subject", ((string)(null)), table34);
#line 207
 testRunner.And("I am on CRF page \"Form 2\" in Subject \"105SUBJ\" in Site \"Site 1\" in Study \"Medifle" +
                    "x\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table35.AddRow(new string[] {
                        "DOB",
                        "05 Mar 1995"});
            table35.AddRow(new string[] {
                        "Visit Date",
                        "10 Dec 2011"});
#line 208
 testRunner.And("I enter data in CRF", ((string)(null)), table35);
#line 212
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table36.AddRow(new string[] {
                        "DOB",
                        "05 Mar 1995",
                        "True"});
            table36.AddRow(new string[] {
                        "Visit Date",
                        "10 Dec 2011",
                        "False"});
            table36.AddRow(new string[] {
                        "Age",
                        "16",
                        "False"});
#line 213
 testRunner.And("I verify data in CRF", ((string)(null)), table36);
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table37.AddRow(new string[] {
                        "DOB"});
#line 218
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table37);
#line 221
 testRunner.And("I save the CRF");
#line 222
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table38.AddRow(new string[] {
                        "DOB",
                        "12 Jun 1993"});
#line 223
 testRunner.And("I enter data in CRF", ((string)(null)), table38);
#line 226
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table39.AddRow(new string[] {
                        "DOB",
                        "12 Jun 1993",
                        "False"});
            table39.AddRow(new string[] {
                        "Visit Date",
                        "10 Dec 2011",
                        "False"});
            table39.AddRow(new string[] {
                        "Age",
                        "18",
                        "False"});
#line 227
 testRunner.And("I verify data in CRF", ((string)(null)), table39);
#line 232
 testRunner.And("I take screenshot");
#line 233
 testRunner.And("I go to Audits for Field \"DOB\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table40.AddRow(new string[] {
                        "User entered \'12 Jun 1993\'"});
            table40.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table40.AddRow(new string[] {
                        "DataPoint Verified."});
            table40.AddRow(new string[] {
                        "User entered \'05 Mar 1995\'"});
#line 234
 testRunner.Then("I verify Audits exist", ((string)(null)), table40);
#line 240
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I have an edit check fired on a field that is derived to sets another field to require verification, and I verify the data for the form, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveAnEditCheckFiredOnAFieldThatIsDerivedToSetsAnotherFieldToRequireVerificationAndIVerifyTheDataForTheFormAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I have an edit check fired on a field that is derived to sets another field to require verification, and I verify the data for the form, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-06",
                        "WIP"});
#line 245
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table41.AddRow(new string[] {
                        "Subject Number",
                        "105"});
            table41.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 246
 testRunner.When("I create a Subject", ((string)(null)), table41);
#line 250
 testRunner.And("I am on CRF page \"Form 2\" in Subject \"105SUBJ\" in Site \"Site 1\" in Study \"Medifle" +
                    "x\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table42.AddRow(new string[] {
                        "DOB",
                        "05 Mar 1995"});
            table42.AddRow(new string[] {
                        "Visit Date",
                        "10 Dec 2011"});
#line 251
 testRunner.And("I enter data in CRF", ((string)(null)), table42);
#line 255
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table43.AddRow(new string[] {
                        "DOB",
                        "05 Mar 1995",
                        "True"});
            table43.AddRow(new string[] {
                        "Visit Date",
                        "10 Dec 2011",
                        "False"});
            table43.AddRow(new string[] {
                        "Age",
                        "16",
                        "False"});
#line 256
 testRunner.And("I verify data in CRF", ((string)(null)), table43);
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form"});
            table44.AddRow(new string[] {
                        "Form 2"});
#line 261
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table44);
#line 264
 testRunner.And("I save the CRF");
#line 265
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table45.AddRow(new string[] {
                        "DOB",
                        "12 Jun 1993"});
#line 266
 testRunner.And("I enter data in CRF", ((string)(null)), table45);
#line 269
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table46.AddRow(new string[] {
                        "DOB",
                        "12 Jun 1993",
                        "False"});
            table46.AddRow(new string[] {
                        "Visit Date",
                        "10 Dec 2011",
                        "False"});
            table46.AddRow(new string[] {
                        "Age",
                        "18",
                        "False"});
#line 270
 testRunner.And("I verify data in CRF", ((string)(null)), table46);
#line 275
 testRunner.And("I take screenshot");
#line 276
 testRunner.And("I go to Audits for Field \"DOB\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table47.AddRow(new string[] {
                        "User entered \'12 Jun 1993\'"});
            table47.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table47.AddRow(new string[] {
                        "DataPoint Verified."});
            table47.AddRow(new string[] {
                        "User entered \'05 Mar 1995\'"});
#line 277
 testRunner.Then("I verify Audits exist", ((string)(null)), table47);
#line 283
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I have TSDV turned off for a form, when I have an edit check that sets a field to require verification, and I verify the data for the field, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveTSDVTurnedOffForAFormWhenIHaveAnEditCheckThatSetsAFieldToRequireVerificationAndIVerifyTheDataForTheFieldAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I have TSDV turned off for a form, when I have an edit check that sets a field to require verification, and I verify the data for the field, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-07",
                        "WIP"});
#line 288
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table48.AddRow(new string[] {
                        "Subject Number",
                        "107"});
            table48.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 289
 testRunner.When("I create a Subject", ((string)(null)), table48);
#line 293
 testRunner.And("I am on CRF page \"Form 2\" in Subject \"107SUBJ\" in Site \"Site 1\" in Study \"Medifle" +
                    "x\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table49.AddRow(new string[] {
                        "Field 2",
                        "19"});
#line 294
 testRunner.And("I enter data in CRF", ((string)(null)), table49);
#line 297
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table50.AddRow(new string[] {
                        "Field 2",
                        "19",
                        "True"});
#line 298
 testRunner.And("I verify data in CRF", ((string)(null)), table50);
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field"});
            table51.AddRow(new string[] {
                        "Field 2"});
#line 301
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table51);
#line 304
 testRunner.And("I save the CRF");
#line 305
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table52.AddRow(new string[] {
                        "Field 2",
                        "18"});
#line 306
 testRunner.And("I enter data in CRF", ((string)(null)), table52);
#line 309
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table53.AddRow(new string[] {
                        "Field 2",
                        "18",
                        "True"});
#line 310
 testRunner.And("I verify data in CRF", ((string)(null)), table53);
#line 313
 testRunner.And("I take screenshot");
#line 314
 testRunner.And("I go to Audits for Field \"Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table54.AddRow(new string[] {
                        "User entered \'18\'"});
            table54.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table54.AddRow(new string[] {
                        "DataPoint Verified."});
            table54.AddRow(new string[] {
                        "User entered \'19\'"});
#line 315
 testRunner.Then("I verify Audits exist", ((string)(null)), table54);
#line 321
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"As an EDC user, when I have TSDV turned off for a form, and I have an edit check that sets a field to require verification, and I verify the data for the form, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "DT 13622 When an Edit Check sets Datapoint XYZ to require verification, if the ve" +
            "rification is broken on XYZ by a data change, this is not audited.")]
        public virtual void AsAnEDCUserWhenIHaveTSDVTurnedOffForAFormAndIHaveAnEditCheckThatSetsAFieldToRequireVerificationAndIVerifyTheDataForTheFormAndIChangeTheDataAndTheVerificationIsBrokenThenIShouldSeeAnAuditRecordedForTheUnverification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"As an EDC user, when I have TSDV turned off for a form, and I have an edit check that sets a field to require verification, and I verify the data for the form, and I change the data, and the verification is broken, then I should see an audit recorded for the unverification.", new string[] {
                        "release_2012.1.0",
                        "PB-DT13622-08",
                        "WIP"});
#line 326
this.ScenarioSetup(scenarioInfo);
#line 10
this.FeatureBackground();
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table55.AddRow(new string[] {
                        "Subject Number",
                        "108"});
            table55.AddRow(new string[] {
                        "Subject Initials",
                        "SUBJ"});
#line 327
 testRunner.When("I create a Subject", ((string)(null)), table55);
#line 331
 testRunner.And("I am on CRF page \"Form 2\" in Subject \"108SUBJ\" in Site \"Site 1\" in Study \"Medifle" +
                    "x\"");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table56.AddRow(new string[] {
                        "Field 2",
                        "19"});
#line 332
 testRunner.And("I enter data in CRF", ((string)(null)), table56);
#line 335
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table57.AddRow(new string[] {
                        "Field 2",
                        "19",
                        "True"});
#line 336
 testRunner.And("I verify data in CRF", ((string)(null)), table57);
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Form"});
            table58.AddRow(new string[] {
                        "Form 2"});
#line 339
 testRunner.And("I check Verify box for data in CRF", ((string)(null)), table58);
#line 342
 testRunner.And("I save the CRF");
#line 343
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table59.AddRow(new string[] {
                        "Field 2",
                        "18"});
#line 344
 testRunner.And("I enter data in CRF", ((string)(null)), table59);
#line 347
 testRunner.And("I save the CRF");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value",
                        "Requires Verification"});
            table60.AddRow(new string[] {
                        "Field 2",
                        "18",
                        "True"});
#line 348
 testRunner.And("I verify data in CRF", ((string)(null)), table60);
#line 351
 testRunner.And("I take screenshot");
#line 352
 testRunner.And("I go to Audits for Field \"Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Audit Message"});
            table61.AddRow(new string[] {
                        "User entered \'18\'"});
            table61.AddRow(new string[] {
                        "DataPoint Un-verified."});
            table61.AddRow(new string[] {
                        "DataPoint Verified."});
            table61.AddRow(new string[] {
                        "User entered \'19\'"});
#line 353
 testRunner.Then("I verify Audits exist", ((string)(null)), table61);
#line 359
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
