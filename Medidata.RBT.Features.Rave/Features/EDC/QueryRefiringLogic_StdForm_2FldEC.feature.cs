// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QueryRefiringLogic4TgtFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QueryRefiringLogic_StdForm_2FldEC.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "QueryRefiringLogic4tgt", "As a Rave user\r\nWhen I manually close a query or cancel, the query should not re-" +
                    "fire if the exact same data is entered into the system\r\nSo that I don\'t have to " +
                    "re-enter the exact same response", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "QueryRefiringLogic4tgt")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.QueryRefiringLogic4TgtFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 11
#line 12
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "User 1",
                        "Standard Study",
                        "cdm1",
                        "Site 1",
                        "S100"});
#line 13
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 16
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line 17
 testRunner.And("Draft \"Draft 1\" in Study \"Standard Study\" has been published to CRF Version \"<RAN" +
                    "DOMNUMBER>\"");
#line 18
 testRunner.And("I publish and push CRF Version \"CRF Version<RANDOMNUMBER>\" of Draft \"<Draft1>\" to" +
                    " site \"Site 1\" in Study \"Standard Study\"");
#line 19
 testRunner.And("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_01AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01A",
                        "Draft"});
#line 25
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 28
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table2.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table2.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 29
 testRunner.And("I create a Subject", ((string)(null)), table2);
#line 34
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table3.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 35
 testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 39
 testRunner.When("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table4.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 40
 testRunner.Then("I verify Query is displayed", ((string)(null)), table4);
#line 43
 testRunner.And("I take a screenshot");
#line 44
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect.\"");
#line 45
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table5.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 46
 testRunner.Then("I verify Query is displayed", ((string)(null)), table5);
#line 49
 testRunner.And("I take a screenshot");
#line 50
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 51
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table6.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 52
 testRunner.Then("I verify Query is displayed", ((string)(null)), table6);
#line 55
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "100"});
#line 56
 testRunner.And("I enter data in CRF", ((string)(null)), table7);
#line 59
 testRunner.When("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table8.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 60
 testRunner.Then("I verify Query is displayed", ((string)(null)), table8);
#line 63
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
#line 64
 testRunner.And("I enter data in CRF", ((string)(null)), table9);
#line 67
    testRunner.When("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table10.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 68
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table10);
#line 71
    testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field A, if I then entered the same bad data in field A as when the query was opened, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_01BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasOpenedThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field A, if I then entered the same bad data in field A as when the query was opened, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01B",
                        "Draft"});
#line 77
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 80
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table11.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table11.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 81
 testRunner.And("I create a Subject", ((string)(null)), table11);
#line 86
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table12.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 87
 testRunner.When("I enter data in CRF", ((string)(null)), table12);
#line 91
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table13.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 92
 testRunner.Then("I verify Query is displayed", ((string)(null)), table13);
#line 95
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "100"});
#line 96
 testRunner.When("I enter data in CRF", ((string)(null)), table14);
#line 99
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table15.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 100
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table15);
#line 103
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
#line 104
 testRunner.When("I enter data in CRF", ((string)(null)), table16);
#line 107
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table17.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 108
 testRunner.Then("I verify Query is displayed", ((string)(null)), table17);
#line 111
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_01CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field A, if I then entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01C",
                        "Draft"});
#line 117
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 120
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table18.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table18.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 121
  testRunner.And("I create a Subject", ((string)(null)), table18);
#line 126
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table19.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 127
 testRunner.When("I enter data in CRF", ((string)(null)), table19);
#line 131
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table20.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 132
 testRunner.Then("I verify Query is displayed", ((string)(null)), table20);
#line 135
 testRunner.And("I take a screenshot");
#line 136
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect.\"");
#line 137
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table21.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 138
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table21);
#line 141
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "100"});
#line 142
 testRunner.When("I enter data in CRF", ((string)(null)), table22);
#line 145
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table23.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 146
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table23);
#line 149
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
#line 150
 testRunner.When("I enter data in CRF", ((string)(null)), table24);
#line 153
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table25.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 154
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table25);
#line 157
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-01D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field A, if I then entered the same bad data in field A as when the query was opened, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-01D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("draft")]
        public virtual void PB_US12940_01DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasOpenedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-01D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field A, if I then entered the same bad data in field A as when the query was opened, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-01D",
                        "draft"});
#line 164
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 167
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table26.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table26.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table26.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 168
  testRunner.And("I create a Subject", ((string)(null)), table26);
#line 173
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table27.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table27.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 174
 testRunner.When("I enter data in CRF", ((string)(null)), table27);
#line 178
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table28.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 179
 testRunner.Then("I verify Query is displayed", ((string)(null)), table28);
#line 182
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "100"});
#line 183
 testRunner.When("I enter data in CRF", ((string)(null)), table29);
#line 186
 testRunner.And("I save the CRF page");
#line 187
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 189
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table30.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 190
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table30);
#line 193
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
#line 194
 testRunner.When("I enter data in CRF", ((string)(null)), table31);
#line 197
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table32.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 198
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table32);
#line 201
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field B, if I then entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field B, if I then entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02A",
                        "Draft"});
#line 208
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 211
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table33.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table33.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 212
 testRunner.And("I create a Subject", ((string)(null)), table33);
#line 217
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table34.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table34.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 218
 testRunner.When("I enter data in CRF", ((string)(null)), table34);
#line 222
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table35.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 223
 testRunner.Then("I verify Query is displayed", ((string)(null)), table35);
#line 226
 testRunner.And("I take a screenshot");
#line 227
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect.\"");
#line 228
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table36.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 229
 testRunner.Then("I verify Query is displayed", ((string)(null)), table36);
#line 232
    testRunner.And("I take a screenshot");
#line 233
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 234
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table37.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 235
 testRunner.Then("I verify Query is displayed", ((string)(null)), table37);
#line 238
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "70"});
#line 239
 testRunner.When("I enter data in CRF", ((string)(null)), table38);
#line 242
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table39.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 243
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table39);
#line 246
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 247
 testRunner.When("I enter data in CRF", ((string)(null)), table40);
#line 250
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table41.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 251
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table41);
#line 254
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field B, if I then entered the same bad data in field B as when the query was opened, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasOpenedThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field B, if I then entered the same bad data in field B as when the query was opened, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02B",
                        "Draft"});
#line 260
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 263
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table42.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table42.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 264
 testRunner.And("I create a Subject", ((string)(null)), table42);
#line 269
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table43.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 270
 testRunner.When("I enter data in CRF", ((string)(null)), table43);
#line 274
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table44.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 275
 testRunner.Then("I verify Query is displayed", ((string)(null)), table44);
#line 278
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table45.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "70"});
#line 279
 testRunner.When("I enter data in CRF", ((string)(null)), table45);
#line 282
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table46.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 283
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table46);
#line 286
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 288
 testRunner.When("I enter data in CRF", ((string)(null)), table47);
#line 291
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table48.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 292
 testRunner.Then("I verify Query is displayed", ((string)(null)), table48);
#line 295
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field B, if I then entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, and I entered good data in field B, if I then entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02C",
                        "Draft"});
#line 301
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 304
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table49.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table49.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 305
 testRunner.And("I create a Subject", ((string)(null)), table49);
#line 310
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table50.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 311
 testRunner.When("I enter data in CRF", ((string)(null)), table50);
#line 315
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table51.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 316
 testRunner.Then("I verify Query is displayed", ((string)(null)), table51);
#line 319
 testRunner.And("I take a screenshot");
#line 320
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line 321
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table52.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 322
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table52);
#line 325
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "70"});
#line 326
 testRunner.When("I enter data in CRF", ((string)(null)), table53);
#line 329
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table54.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 330
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table54);
#line 333
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 334
 testRunner.When("I enter data in CRF", ((string)(null)), table55);
#line 337
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table56.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 338
    testRunner.Then("I verify Query is not displayed", ((string)(null)), table56);
#line 341
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-02D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field B, if I then entered the same bad data in field B as when the query was opened, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-02D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_02DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasOpenedThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-02D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I entered good data in field B, if I then entered the same bad data in field B as when the query was opened, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-02D",
                        "Draft"});
#line 347
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 350
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table57.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table57.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table57.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 351
 testRunner.And("I create a Subject", ((string)(null)), table57);
#line 356
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table58.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table58.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 357
 testRunner.When("I enter data in CRF", ((string)(null)), table58);
#line 361
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table59.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 362
 testRunner.Then("I verify Query is displayed", ((string)(null)), table59);
#line 365
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table60.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "70"});
#line 366
 testRunner.When("I enter data in CRF", ((string)(null)), table60);
#line 369
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table61.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 370
 testRunner.Then("I verify Query is displayed", ((string)(null)), table61);
#line 373
 testRunner.And("I take a screenshot");
#line 374
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 375
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table62.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 376
 testRunner.Then("I verify Query is displayed", ((string)(null)), table62);
#line 379
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table63.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 380
 testRunner.When("I enter data in CRF", ((string)(null)), table63);
#line 383
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table64.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 384
 testRunner.Then("I verify Query is displayed", ((string)(null)), table64);
#line 387
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_03AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03A",
                        "Draft"});
#line 394
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 397
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table65.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table65.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table65.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 398
 testRunner.And("I create a Subject", ((string)(null)), table65);
#line 403
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table66.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 404
 testRunner.When("I enter data in CRF", ((string)(null)), table66);
#line 408
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table67.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 409
 testRunner.Then("I verify Query is displayed", ((string)(null)), table67);
#line 412
 testRunner.And("I take a screenshot");
#line 413
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "85"});
#line 414
 testRunner.When("I enter data in CRF", ((string)(null)), table68);
#line 417
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table69.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 418
 testRunner.Then("I verify Query is displayed", ((string)(null)), table69);
#line 421
 testRunner.And("I take a screenshot");
#line 422
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 423
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table70.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 424
    testRunner.Then("I verify Query is displayed", ((string)(null)), table70);
#line 427
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "100"});
#line 428
 testRunner.When("I enter data in CRF", ((string)(null)), table71);
#line 431
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table72.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 432
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table72);
#line 435
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "85"});
#line 436
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table74.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 439
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table74);
#line 442
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I entered good data in field A and then again entered the same bad data in field A as when the query was opened, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_03BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAAsWhenTheQueryWasOpenedThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I entered good data in field A and then again entered the same bad data in field A as when the query was opened, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03B",
                        "Draft"});
#line 449
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 452
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table75.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table75.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 453
 testRunner.And("I create a Subject", ((string)(null)), table75);
#line 458
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table76.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 459
 testRunner.When("I enter data in CRF", ((string)(null)), table76);
#line 463
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table77.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 464
 testRunner.Then("I verify Query is displayed", ((string)(null)), table77);
#line 467
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "100"});
#line 468
 testRunner.When("I enter data in CRF", ((string)(null)), table78);
#line 471
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table79.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 472
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table79);
#line 475
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
#line 476
 testRunner.When("I enter data in CRF", ((string)(null)), table80);
#line 479
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table81.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 480
 testRunner.Then("I verify Query is displayed", ((string)(null)), table81);
#line 483
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_03CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03C",
                        "ignore"});
#line 490
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 493
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table82.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table82.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table82.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 494
 testRunner.And("I create a Subject", ((string)(null)), table82);
#line 499
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table83.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table83.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 500
 testRunner.When("I enter data in CRF", ((string)(null)), table83);
#line 504
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table84.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 505
 testRunner.Then("I verify Query is displayed", ((string)(null)), table84);
#line 508
 testRunner.And("I take a screenshot");
#line 509
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table85.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "85"});
#line 510
 testRunner.And("I enter data in CRF", ((string)(null)), table85);
#line 513
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table86.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 514
 testRunner.Then("I verify Query is displayed", ((string)(null)), table86);
#line 517
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table87.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "100"});
#line 518
 testRunner.When("I enter data in CRF", ((string)(null)), table87);
#line 521
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table88.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 522
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table88);
#line 525
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table89.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "85"});
#line 526
 testRunner.When("I enter data in CRF", ((string)(null)), table89);
#line 529
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table90.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 530
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table90);
#line 533
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-03D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field A to another bad data and the system answered the query, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-03D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_03DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIChangedTheDataInFieldAToAnotherBadDataAndTheSystemAnsweredTheQueryAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldAAndThenAgainEnteredTheSameBadDataInFieldAAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-03D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field A to another bad data and the system answered the query, and the query is then closed, if I entered good data in field A and then again entered the same bad data in field A as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-03D",
                        "ignore"});
#line 541
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 544
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table91.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table91.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table91.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 545
 testRunner.And("I create a Subject", ((string)(null)), table91);
#line 550
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table92.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table92.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 551
 testRunner.When("I enter data in CRF", ((string)(null)), table92);
#line 555
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table93.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 556
 testRunner.Then("I verify Query is displayed", ((string)(null)), table93);
#line 559
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table94.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "85"});
#line 560
 testRunner.When("I enter data in CRF", ((string)(null)), table94);
#line 563
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table95.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 564
 testRunner.Then("I verify Query is displayed", ((string)(null)), table95);
#line 567
 testRunner.And("I take a screenshot");
#line 568
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Systolic Blood Pressure 4\"");
#line 569
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table96.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 570
 testRunner.Then("I verify Query is displayed", ((string)(null)), table96);
#line 573
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table97.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "100"});
#line 574
 testRunner.And("I enter data in CRF", ((string)(null)), table97);
#line 577
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table98.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 578
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table98);
#line 581
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table99.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "85"});
#line 582
 testRunner.And("I enter data in CRF", ((string)(null)), table99);
#line 585
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table100.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 586
 testRunner.Then("I verify Query is not  displayed", ((string)(null)), table100);
#line 589
    testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I entered good data in field B and then again entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_04AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldBAndThenAgainEnteredTheSameBadDataInFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I entered good data in field B and then again entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04A",
                        "Draft"});
#line 596
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 599
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table101.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table101.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table101.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 600
 testRunner.And("I create a Subject", ((string)(null)), table101);
#line 605
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table102.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table102.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 606
 testRunner.And("I enter data in CRF", ((string)(null)), table102);
#line 610
    testRunner.And("I save CRF page");
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table103.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 611
 testRunner.Then("I verify Query is displayed", ((string)(null)), table103);
#line 614
 testRunner.And("I take a screenshot");
#line 615
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table104.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "85"});
#line 616
   testRunner.And("I enter data in CRF", ((string)(null)), table104);
#line 619
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table105.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 620
 testRunner.Then("I verify Query is displayed", ((string)(null)), table105);
#line 623
    testRunner.And("I take a screenshot");
#line 624
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table106.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 625
    testRunner.Then("I verify Query is displayed", ((string)(null)), table106);
#line 628
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table107.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "70"});
#line 629
 testRunner.And("I enter data in CRF", ((string)(null)), table107);
#line 632
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table108.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 633
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table108);
#line 636
    testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table109.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "85"});
#line 637
 testRunner.And("I enter data in CRF", ((string)(null)), table109);
#line 640
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table110.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 641
 testRunner.Then("I verify Query is not  displayed", ((string)(null)), table110);
#line 644
    testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I entered good data in field B and then again entered the same bad data in field B as when the query was opened, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_04BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIEnteredGoodDataInFieldBAndThenAgainEnteredTheSameBadDataInFieldBAsWhenTheQueryWasOpenedThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I entered good data in field B and then again entered the same bad data in field B as when the query was opened, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04B",
                        "Draft"});
#line 650
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 653
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table111.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table111.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table111.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 654
 testRunner.And("I create a Subject", ((string)(null)), table111);
#line 659
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table112.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table112.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 660
 testRunner.And("I enter data in CRF", ((string)(null)), table112);
#line 664
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table113.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 665
 testRunner.Then("I verify Query is displayed", ((string)(null)), table113);
#line 668
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table114.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "85"});
#line 669
 testRunner.And("I enter data in CRF", ((string)(null)), table114);
#line 672
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table115.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 673
 testRunner.Then("I verify Query is displayed", ((string)(null)), table115);
#line 676
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table116.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 677
 testRunner.And("I enter data in CRF", ((string)(null)), table116);
#line 680
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table117.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 681
 testRunner.Then("I verify Query is displayed", ((string)(null)), table117);
#line 684
   testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I entered good data in field B and then again entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_04CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldBAndThenAgainEnteredTheSameBadDataInFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I entered good data in field B and then again entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04C",
                        "Draft"});
#line 690
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 693
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table118.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table118.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table118.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 694
 testRunner.And("I create a Subject", ((string)(null)), table118);
#line 699
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table119.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table119.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 700
 testRunner.And("I enter data in CRF", ((string)(null)), table119);
#line 704
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table120.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 705
 testRunner.Then("I verify Query is displayed", ((string)(null)), table120);
#line 708
 testRunner.And("I take a screenshot");
#line 709
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table121.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "85"});
#line 710
   testRunner.And("I enter data in CRF", ((string)(null)), table121);
#line 713
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table122.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 714
 testRunner.Then("I verify Query is displayed", ((string)(null)), table122);
#line 717
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table123.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "70"});
#line 718
 testRunner.And("I enter data in CRF", ((string)(null)), table123);
#line 721
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table124.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 722
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table124);
#line 725
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table125.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "85"});
#line 726
 testRunner.And("I enter data in CRF", ((string)(null)), table125);
#line 729
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table126.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 730
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table126);
#line 733
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-04D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field B to another bad data, and system answered the query, and the query is then closed, if I entered good data in field B and then again entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-04D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_04DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIChangedTheDataInFieldBToAnotherBadDataAndSystemAnsweredTheQueryAndTheQueryIsThenClosedIfIEnteredGoodDataInFieldBAndThenAgainEnteredTheSameBadDataInFieldBAsWhenTheQueryWasClosedThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-04D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field B to another bad data, and system answered the query, and the query is then closed, if I entered good data in field B and then again entered the same bad data in field B as when the query was closed, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-04D",
                        "Draft"});
#line 741
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 744
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table127.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table127.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table127.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 745
 testRunner.And("I create a Subject", ((string)(null)), table127);
#line 750
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table128.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table128.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 751
 testRunner.When("I enter data in CRF", ((string)(null)), table128);
#line 755
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table129.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 756
 testRunner.Then("I verify Query is displayed", ((string)(null)), table129);
#line 759
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table130.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "85"});
#line 760
 testRunner.And("I enter data in CRF", ((string)(null)), table130);
#line 763
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table131.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 764
 testRunner.Then("I verify Query is displayed", ((string)(null)), table131);
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table132.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 767
 testRunner.And("I verify Query is not displayed", ((string)(null)), table132);
#line 770
 testRunner.And("I take a screenshot");
#line 771
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4 \"");
#line 772
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table133.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 773
 testRunner.Then("I verify Query is displayed", ((string)(null)), table133);
#line 776
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table134.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "70"});
#line 777
 testRunner.And("I enter data in CRF", ((string)(null)), table134);
#line 780
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table135.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 781
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table135);
#line 784
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table136.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "85"});
#line 785
 testRunner.And("I enter data in CRF", ((string)(null)), table136);
#line 788
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table137.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 789
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table137);
#line 792
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05A",
                        "Draft"});
#line 799
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 802
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table138.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table138.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table138.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 803
 testRunner.And("I create a Subject", ((string)(null)), table138);
#line 808
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table139.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table139.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 809
 testRunner.And("I enter data in CRF", ((string)(null)), table139);
#line 813
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table140.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 814
    testRunner.Then("I verify Query is displayed", ((string)(null)), table140);
#line 817
 testRunner.And("I take a screenshot");
#line 818
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table141.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "85"});
#line 819
   testRunner.And("I enter data in CRF", ((string)(null)), table141);
#line 822
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table142.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 823
 testRunner.Then("I verify Query is displayed", ((string)(null)), table142);
#line 826
 testRunner.And("I take a screenshot");
#line 827
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 828
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table143.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 829
 testRunner.Then("I verify Query is displayed", ((string)(null)), table143);
#line 832
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table144.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "100"});
#line 833
 testRunner.And("I enter data in CRF", ((string)(null)), table144);
#line 836
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table145.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 837
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table145);
#line 840
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table146.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
#line 841
 testRunner.And("I enter data in CRF", ((string)(null)), table146);
#line 844
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table147.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 845
 testRunner.Then("I verify Query is displayed", ((string)(null)), table147);
#line 848
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I enter good data into field A, if I then entered the original bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIEnterGoodDataIntoFieldAIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05B As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I enter good data into field A, if I then entered the original bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05B",
                        "Draft"});
#line 854
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 857
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table148.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table148.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table148.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 858
 testRunner.And("I create a Subject", ((string)(null)), table148);
#line 863
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table149.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table149.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 864
 testRunner.When("I enter data in CRF", ((string)(null)), table149);
#line 868
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table150.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 869
 testRunner.Then("I verify Query is displayed", ((string)(null)), table150);
#line 872
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table151.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "100"});
#line 873
 testRunner.When("I enter data in CRF", ((string)(null)), table151);
#line 876
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table152.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 877
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table152);
#line 880
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table153.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
#line 881
 testRunner.When("I enter data in CRF", ((string)(null)), table153);
#line 884
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table154.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 885
 testRunner.Then("I verify Query is displayed", ((string)(null)), table154);
#line 888
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05C",
                        "Draft"});
#line 894
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 897
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table155.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table155.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table155.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 898
 testRunner.And("I create a Subject", ((string)(null)), table155);
#line 903
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table156.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table156.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 904
 testRunner.When("I enter data in CRF", ((string)(null)), table156);
#line 908
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table157.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 909
 testRunner.Then("I verify Query is displayed", ((string)(null)), table157);
#line 912
 testRunner.And("I take a screenshot");
#line 913
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table158.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "85"});
#line 914
 testRunner.And("I enter data in CRF", ((string)(null)), table158);
#line 917
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table159.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 918
 testRunner.Then("I verify Query is displayed", ((string)(null)), table159);
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table160.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 921
 testRunner.And("verify Query is not displayed", ((string)(null)), table160);
#line 924
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table161.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "100"});
#line 925
 testRunner.When("I enter data in CRF", ((string)(null)), table161);
#line 928
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table162.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 929
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table162);
#line 932
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table163.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
#line 933
 testRunner.When("I enter data in CRF", ((string)(null)), table163);
#line 936
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table164.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 937
 testRunner.Then("I verify Query is displayed", ((string)(null)), table164);
#line 940
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-05D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field A to another bad data and the system answered the query, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-05D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_05DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIChangedTheDataInFieldAToAnotherBadDataAndTheSystemAnsweredTheQueryAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-05D As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field A to another bad data and the system answered the query, and the query is then closed, if I then entered the original bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-05D",
                        "Draft"});
#line 947
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 950
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table165.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table165.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table165.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 951
 testRunner.And("I create a Subject", ((string)(null)), table165);
#line 956
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table166.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table166.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 957
 testRunner.When("I enter data in CRF", ((string)(null)), table166);
#line 961
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table167.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 962
 testRunner.Then("I verify Query is displayed", ((string)(null)), table167);
#line 965
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table168.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "85"});
#line 966
 testRunner.When("I enter data in CRF", ((string)(null)), table168);
#line 969
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table169.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 970
 testRunner.Then("I verify Query is displayed", ((string)(null)), table169);
#line 973
 testRunner.And("I take a screenshot");
#line 974
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 975
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table170.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 976
 testRunner.Then("I verify Query is displayed", ((string)(null)), table170);
#line 979
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table171.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "100"});
#line 980
 testRunner.When("I enter data in CRF", ((string)(null)), table171);
#line 983
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table172.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 984
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table172);
#line 987
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table173.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
#line 988
 testRunner.When("I enter data in CRF", ((string)(null)), table173);
#line 991
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table174.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 992
 testRunner.Then("I verify Query is displayed", ((string)(null)), table174);
#line 995
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-06A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the original bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-06A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_06AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-06A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the original bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-06A",
                        "Draft"});
#line 1002
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1005
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table175.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table175.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table175.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1006
 testRunner.And("I create a Subject", ((string)(null)), table175);
#line 1011
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table176.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table176.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1012
 testRunner.When("I enter data in CRF", ((string)(null)), table176);
#line 1016
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table177.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1017
 testRunner.Then("I verify Query is displayed", ((string)(null)), table177);
#line 1020
 testRunner.And("I take a screenshot");
#line 1021
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table178.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "85"});
#line 1022
 testRunner.And("I enter data in CRF", ((string)(null)), table178);
#line 1025
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table179.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1026
    testRunner.Then("I verify Query is displayed", ((string)(null)), table179);
#line 1029
 testRunner.And("I take a screenshot");
#line 1030
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 1031
    testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table180.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1032
 testRunner.Then("I verify Query is displayed", ((string)(null)), table180);
#line 1035
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table181.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "70"});
#line 1036
 testRunner.When("I enter data in CRF", ((string)(null)), table181);
#line 1039
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table182.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1040
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table182);
#line 1043
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table183.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1044
 testRunner.When("I enter data in CRF", ((string)(null)), table183);
#line 1047
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table184.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1048
 testRunner.Then("I verify Query is displayed", ((string)(null)), table184);
#line 1051
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-06B	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, I enter good data in Field B, if I then entered the original bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-06B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_06BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIEnterGoodDataInFieldBIfIThenEnteredTheOriginalBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-06B	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, I enter good data in Field B, if I then entered the original bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-06B",
                        "Draft"});
#line 1058
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1061
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table185.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table185.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table185.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1062
 testRunner.And("I create a Subject", ((string)(null)), table185);
#line 1067
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table186.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table186.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1068
 testRunner.When("I enter data in CRF", ((string)(null)), table186);
#line 1072
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table187.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1073
 testRunner.Then("I verify Query is displayed", ((string)(null)), table187);
#line 1076
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table188.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "70"});
#line 1077
 testRunner.When("I enter data in CRF", ((string)(null)), table188);
#line 1080
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table189.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1081
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table189);
#line 1084
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table190.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1085
 testRunner.When("I enter data in CRF", ((string)(null)), table190);
#line 1088
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table191.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1089
 testRunner.Then("I verify Query is displayed", ((string)(null)), table191);
#line 1092
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-06C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the original bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-06C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_06CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-06C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the original bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-06C",
                        "Draft"});
#line 1099
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1102
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table192.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table192.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 1103
 testRunner.And("I create a Subject", ((string)(null)), table192);
#line 1107
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table193.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table193.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1108
 testRunner.And("I enter data in CRF", ((string)(null)), table193);
#line 1112
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table194.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1113
 testRunner.Then("I verify Query is displayed", ((string)(null)), table194);
#line 1116
 testRunner.And("I take a screenshot");
#line 1117
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table195.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "85"});
#line 1118
  testRunner.And("I enter data in CRF", ((string)(null)), table195);
#line 1121
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table196 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table196.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1122
 testRunner.Then("I verify Query is displayed", ((string)(null)), table196);
#line hidden
            TechTalk.SpecFlow.Table table197 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table197.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1125
 testRunner.And("I verify Query is not displayed", ((string)(null)), table197);
#line 1128
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table198 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table198.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "70"});
#line 1130
 testRunner.And("I enter data in CRF", ((string)(null)), table198);
#line 1133
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table199 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table199.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1134
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table199);
#line 1137
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table200 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table200.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1138
 testRunner.And("I enter data in CRF", ((string)(null)), table200);
#line 1141
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table201 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table201.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1142
 testRunner.Then("I verify Query is displayed", ((string)(null)), table201);
#line 1145
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-06D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field B to another bad data and the system answered the query, and the query is then closed, if I then entered the original bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-06D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_06DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIChangedTheDataInFieldBToAnotherBadDataAndTheSystemAnsweredTheQueryAndTheQueryIsThenClosedIfIThenEnteredTheOriginalBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-06D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field B to another bad data and the system answered the query, and the query is then closed, if I then entered the original bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-06D",
                        "Draft"});
#line 1151
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1154
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table202 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table202.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table202.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table202.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1155
 testRunner.And("I create a Subject", ((string)(null)), table202);
#line 1160
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table203 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table203.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table203.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 1161
 testRunner.And("I enter data in CRF", ((string)(null)), table203);
#line 1165
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table204 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table204.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1166
 testRunner.Then("I verify Query is displayed", ((string)(null)), table204);
#line 1169
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table205 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table205.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "85"});
#line 1170
 testRunner.And("I enter data in CRF", ((string)(null)), table205);
#line 1173
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table206 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table206.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1174
 testRunner.Then("I verify Query is displayed", ((string)(null)), table206);
#line 1177
 testRunner.And("I take a screenshot");
#line 1178
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"       |Field\t\t\t\t\t" +
                    "\t|");
#line 1179
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table207 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table207.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1180
 testRunner.Then("I verify Query is displayed", ((string)(null)), table207);
#line 1183
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table208 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table208.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "70"});
#line 1184
 testRunner.And("I enter data in CRF", ((string)(null)), table208);
#line 1187
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table209 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table209.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1188
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table209);
#line 1191
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table210 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table210.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 1192
 testRunner.And("I enter data in CRF", ((string)(null)), table210);
#line 1195
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table211 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table211.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1196
 testRunner.Then("I verify Query is displayed", ((string)(null)), table211);
#line 1199
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-07A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-07A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_07AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-07A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-07A",
                        "Draft"});
#line 1206
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1209
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table212 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table212.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table212.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table212.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1210
 testRunner.And("I create a Subject", ((string)(null)), table212);
#line 1215
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table213 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table213.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table213.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1216
 testRunner.And("I enter data in CRF", ((string)(null)), table213);
#line 1220
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table214 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table214.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1221
 testRunner.Then("I verify Query is displayed", ((string)(null)), table214);
#line 1224
 testRunner.And("I take a screenshot");
#line 1225
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line 1226
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table215 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table215.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1227
 testRunner.Then("I verify Query is displayed", ((string)(null)), table215);
#line 1230
 testRunner.And("I take a screenshot");
#line 1231
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 1232
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table216 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table216.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1233
 testRunner.Then("I verify Query is displayed", ((string)(null)), table216);
#line 1236
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table217 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table217.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "85"});
#line 1237
 testRunner.And("I enter data in CRF", ((string)(null)), table217);
#line 1240
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table218 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table218.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1241
 testRunner.Then("I verify Query is displayed", ((string)(null)), table218);
#line 1244
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB-US12940-07B As an EDC user, when I entered bad data in field A and field B th" +
            "at resulted in the system opening a query on field B, if I then entered new bad " +
            "data in field A, then the system should keep a query open on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-07B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_07BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldKeepAQueryOpenOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB-US12940-07B As an EDC user, when I entered bad data in field A and field B th" +
                    "at resulted in the system opening a query on field B, if I then entered new bad " +
                    "data in field A, then the system should keep a query open on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-07B",
                        "Draft"});
#line 1251
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1254
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table219 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table219.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table219.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table219.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1255
 testRunner.And("I create a Subject", ((string)(null)), table219);
#line 1260
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table220 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table220.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table220.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1261
 testRunner.And("I enter data in CRF", ((string)(null)), table220);
#line 1265
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table221 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table221.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1266
 testRunner.Then("I verify Query is displayed", ((string)(null)), table221);
#line 1269
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table222 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table222.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "85"});
#line 1270
 testRunner.And("I enter data in CRF", ((string)(null)), table222);
#line 1273
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table223 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table223.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1274
 testRunner.Then("I verify Query is displayed", ((string)(null)), table223);
#line 1277
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-07C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-07C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_07CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-07C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-07C",
                        "Draft"});
#line 1284
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1287
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table224 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table224.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table224.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table224.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1288
 testRunner.And("I create a Subject", ((string)(null)), table224);
#line 1293
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table225 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table225.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table225.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1294
 testRunner.And("I enter data in CRF", ((string)(null)), table225);
#line 1298
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table226 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table226.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1299
 testRunner.Then("I verify Query is displayed", ((string)(null)), table226);
#line 1302
 testRunner.And("I take a screenshot");
#line 1303
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line 1304
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table227 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table227.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1305
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table227);
#line 1308
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table228 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table228.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "85"});
#line 1309
 testRunner.And("I enter data in CRF", ((string)(null)), table228);
#line 1312
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table229 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table229.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1313
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table229);
#line 1316
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-07D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I then entered new bad data in field A, then the system should answer a query on field B, and then I close query, and I enter new bad data on Field A, then system should refire query on Field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-07D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_07DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIThenEnteredNewBadDataInFieldAThenTheSystemShouldAnswerAQueryOnFieldBAndThenICloseQueryAndIEnterNewBadDataOnFieldAThenSystemShouldRefireQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-07D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I then entered new bad data in field A, then the system should answer a query on field B, and then I close query, and I enter new bad data on Field A, then system should refire query on Field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-07D",
                        "Draft"});
#line 1323
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1326
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table230 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table230.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table230.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table230.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1327
 testRunner.And("I create a Subject", ((string)(null)), table230);
#line 1332
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table231 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table231.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table231.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 1333
 testRunner.And("I enter data in CRF", ((string)(null)), table231);
#line 1337
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table232 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table232.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1338
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table232);
#line 1341
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table233 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table233.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "85"});
#line 1342
 testRunner.And("I enter data in CRF", ((string)(null)), table233);
#line 1345
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table234 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table234.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1346
 testRunner.Then("I verify Query is displayed", ((string)(null)), table234);
#line 1349
 testRunner.And("I take a screenshot");
#line 1350
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 1351
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table235 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table235.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1352
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table235);
#line 1355
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table236 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table236.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "70"});
#line 1356
 testRunner.And("I enter data in CRF", ((string)(null)), table236);
#line 1359
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table237 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table237.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1360
 testRunner.Then("I verify Query is displayed", ((string)(null)), table237);
#line 1363
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-08A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-08A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_08AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-08A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-08A",
                        "Draft"});
#line 1369
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1372
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table238 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table238.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table238.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table238.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1373
 testRunner.And("I create a Subject", ((string)(null)), table238);
#line 1378
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table239 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table239.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table239.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1379
 testRunner.And("I enter data in CRF", ((string)(null)), table239);
#line 1383
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table240 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table240.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1384
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table240);
#line 1387
 testRunner.And("I take a screenshot");
#line 1388
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line 1389
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table241 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table241.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1390
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table241);
#line 1393
 testRunner.And("I take a screenshot");
#line 1394
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 1395
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table242 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table242.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1396
 testRunner.Then("I verify Query is displayed", ((string)(null)), table242);
#line 1399
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table243 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table243.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "100"});
#line 1400
 testRunner.And("I enter data in CRF", ((string)(null)), table243);
#line 1403
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table244 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table244.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1404
 testRunner.Then("I verify Query is displayed", ((string)(null)), table244);
#line 1407
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB-US12940-08B As an EDC user, when I entered bad data in field A and field B th" +
            "at resulted in the system opening a query on field B, if I then entered new bad " +
            "data in field B, then the system should keep a query open on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-08B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_08BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIThenEnteredNewBadDataInFieldBThenTheSystemShouldKeepAQueryOpenOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB-US12940-08B As an EDC user, when I entered bad data in field A and field B th" +
                    "at resulted in the system opening a query on field B, if I then entered new bad " +
                    "data in field B, then the system should keep a query open on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-08B",
                        "Draft"});
#line 1413
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1416
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table245 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table245.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table245.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table245.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1417
 testRunner.And("I create a Subject", ((string)(null)), table245);
#line 1422
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table246 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table246.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table246.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1423
 testRunner.When("I enter data in CRF", ((string)(null)), table246);
#line 1427
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table247 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table247.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1428
 testRunner.Then("I verify Query is displayed", ((string)(null)), table247);
#line 1431
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table248 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table248.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "100"});
#line 1432
 testRunner.When("I enter data in CRF", ((string)(null)), table248);
#line 1435
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table249 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table249.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1436
 testRunner.Then("I verify Query is displayed", ((string)(null)), table249);
#line 1439
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-08C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-08C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_08CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryWithoutChangingTheDataAndTheQueryIsThenClosedIfIThenEnteredNewBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-08C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query without changing the data, and the query is then closed, if I then entered new bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-08C",
                        "Draft"});
#line 1446
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1449
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table250 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table250.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table250.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table250.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1450
 testRunner.And("I create a Subject", ((string)(null)), table250);
#line 1455
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table251 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table251.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table251.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1456
 testRunner.And("I enter data in CRF", ((string)(null)), table251);
#line 1460
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table252 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table252.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1461
 testRunner.Then("I verify Query is displayed", ((string)(null)), table252);
#line 1464
 testRunner.And("I take a screenshot");
#line 1465
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line 1466
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table253 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table253.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1467
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table253);
#line 1470
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table254 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table254.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "100"});
#line 1471
 testRunner.And("I enter data in CRF", ((string)(null)), table254);
#line 1474
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table255 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table255.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1475
 testRunner.Then("I verify Query is displayed", ((string)(null)), table255);
#line 1478
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-08D	 As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I then entered new bad data in field B, then the system should answer a query on field B, and then I close query, and I enter new bad data on Field B, then system should refire query on Field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-08D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_08DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIThenEnteredNewBadDataInFieldBThenTheSystemShouldAnswerAQueryOnFieldBAndThenICloseQueryAndIEnterNewBadDataOnFieldBThenSystemShouldRefireQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-08D	 As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, if I then entered new bad data in field B, then the system should answer a query on field B, and then I close query, and I enter new bad data on Field B, then system should refire query on Field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-08D",
                        "Draft"});
#line 1485
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1488
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table256 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table256.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table256.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table256.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1489
 testRunner.And("I create a Subject", ((string)(null)), table256);
#line 1494
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table257 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table257.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table257.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 1495
 testRunner.When("I enter data in CRF", ((string)(null)), table257);
#line 1499
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table258 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table258.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1500
 testRunner.Then("I verify Query is displayed", ((string)(null)), table258);
#line 1503
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table259 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table259.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "100"});
#line 1504
 testRunner.When("I enter data in CRF", ((string)(null)), table259);
#line 1507
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table260 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table260.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1508
 testRunner.Then("I verify Query is displayed", ((string)(null)), table260);
#line 1511
 testRunner.And("I take a screenshot");
#line 1512
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 1513
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table261 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table261.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1514
 testRunner.Then("I verify Query is displayed", ((string)(null)), table261);
#line 1517
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table262 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table262.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "110"});
#line 1518
 testRunner.When("I enter data in CRF", ((string)(null)), table262);
#line 1521
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table263 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table263.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1522
 testRunner.Then("I verify Query is displayed", ((string)(null)), table263);
#line 1525
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-09A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the new bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-09A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_09AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-09A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the new bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-09A",
                        "Draft"});
#line 1533
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1536
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table264 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table264.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table264.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table264.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1537
 testRunner.And("I create a Subject", ((string)(null)), table264);
#line 1542
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table265 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table265.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table265.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1543
 testRunner.When("I enter data in CRF", ((string)(null)), table265);
#line 1547
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table266 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table266.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1548
 testRunner.Then("I verify Query is displayed", ((string)(null)), table266);
#line 1551
 testRunner.And("I take a screenshot");
#line 1552
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table267 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table267.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "85"});
#line 1553
 testRunner.And("I enter data in CRF", ((string)(null)), table267);
#line 1556
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table268 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table268.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1557
 testRunner.Then("I verify Query is displayed", ((string)(null)), table268);
#line 1560
 testRunner.And("I take a screenshot");
#line 1561
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 1562
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table269 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table269.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1563
 testRunner.Then("I verify Query is displayed", ((string)(null)), table269);
#line 1566
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table270 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table270.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "70"});
#line 1567
 testRunner.When("I enter data in CRF", ((string)(null)), table270);
#line 1570
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table271 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table271.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1571
 testRunner.Then("I verify Query is displayed", ((string)(null)), table271);
#line 1574
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB-US12940-09B\tAs an EDC user, when I entered bad data in field A and field B th" +
            "at resulted in the system opening a query on field B, if I then entered the new " +
            "bad data in field A, then the system should keep a query open on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-09B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_09BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIThenEnteredTheNewBadDataInFieldAThenTheSystemShouldKeepAQueryOpenOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB-US12940-09B\tAs an EDC user, when I entered bad data in field A and field B th" +
                    "at resulted in the system opening a query on field B, if I then entered the new " +
                    "bad data in field A, then the system should keep a query open on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-09B",
                        "Draft"});
#line 1580
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1583
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table272 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table272.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table272.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table272.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1584
 testRunner.And("I create a Subject", ((string)(null)), table272);
#line 1589
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table273 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table273.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table273.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1590
 testRunner.When("I enter data in CRF", ((string)(null)), table273);
#line 1594
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table274 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table274.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1595
 testRunner.Then("I verify Query is displayed", ((string)(null)), table274);
#line 1598
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table275 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table275.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "85"});
#line 1599
 testRunner.And("I enter data in CRF", ((string)(null)), table275);
#line 1602
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table276 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table276.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1603
 testRunner.Then("I verify Query is displayed", ((string)(null)), table276);
#line 1606
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-09C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the new bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-09C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_US12940_09CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldAToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-09C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field A to another bad data, and the query is then closed, if I then entered the new bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-09C",
                        "ignore"});
#line 1613
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1616
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table277 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table277.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table277.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table277.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1617
 testRunner.And("I create a Subject", ((string)(null)), table277);
#line 1622
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table278 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table278.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table278.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1623
 testRunner.When("I enter data in CRF", ((string)(null)), table278);
#line 1627
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table279 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table279.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1628
 testRunner.Then("I verify Query is displayed", ((string)(null)), table279);
#line 1631
 testRunner.And("I take a screenshot");
#line 1632
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table280 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table280.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "85"});
#line 1633
 testRunner.And("I enter data in CRF", ((string)(null)), table280);
#line 1636
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table281 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table281.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1637
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table281);
#line hidden
            TechTalk.SpecFlow.Table table282 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table282.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1641
 testRunner.And("I verify Query is displayed", ((string)(null)), table282);
#line 1644
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table283 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table283.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "70"});
#line 1645
 testRunner.When("I enter data in CRF", ((string)(null)), table283);
#line 1648
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table284 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table284.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1649
 testRunner.Then("I verify Query is displayed", ((string)(null)), table284);
#line 1652
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-09D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field A to another bad data, and the system answers query and the query is closed, if I then entered the new bad data in field A, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-09D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_09DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIChangedTheDataInFieldAToAnotherBadDataAndTheSystemAnswersQueryAndTheQueryIsClosedIfIThenEnteredTheNewBadDataInFieldAThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-09D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field A to another bad data, and the system answers query and the query is closed, if I then entered the new bad data in field A, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-09D",
                        "Draft"});
#line 1659
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1662
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table285 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table285.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table285.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table285.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1663
 testRunner.And("I create a Subject", ((string)(null)), table285);
#line 1668
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table286 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table286.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table286.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 1669
 testRunner.When("I enter data in CRF", ((string)(null)), table286);
#line 1673
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table287 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table287.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1674
 testRunner.Then("I verify Query is displayed", ((string)(null)), table287);
#line 1677
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table288 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table288.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "85"});
#line 1678
 testRunner.When("I enter data in CRF", ((string)(null)), table288);
#line 1681
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table289 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table289.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1682
 testRunner.Then("I verify Query is displayed", ((string)(null)), table289);
#line hidden
            TechTalk.SpecFlow.Table table290 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table290.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1685
 testRunner.And("I verify Query is not displayed", ((string)(null)), table290);
#line 1688
 testRunner.And("I take a screenshot");
#line 1689
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 1690
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table291 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table291.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1691
 testRunner.Then("I verify Query is displayed", ((string)(null)), table291);
#line 1694
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table292 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table292.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "70"});
#line 1696
 testRunner.When("I enter data in CRF", ((string)(null)), table292);
#line 1699
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table293 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table293.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1700
 testRunner.Then("I verify Query is displayed", ((string)(null)), table293);
#line 1703
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-10A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the new bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-10A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_10AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-10A As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the new bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-10A",
                        "Draft"});
#line 1709
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1712
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table294 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table294.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table294.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table294.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1713
 testRunner.And("I create a Subject", ((string)(null)), table294);
#line 1718
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table295 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table295.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table295.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1719
 testRunner.When("I enter data in CRF", ((string)(null)), table295);
#line 1723
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table296 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table296.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1724
 testRunner.Then("I verify Query is displayed", ((string)(null)), table296);
#line 1727
 testRunner.And("I take a screenshot");
#line 1728
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table297 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table297.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "85"});
#line 1729
 testRunner.And("I enter data in CRF", ((string)(null)), table297);
#line 1732
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table298 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table298.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1733
 testRunner.Then("I verify Query is displayed", ((string)(null)), table298);
#line 1736
 testRunner.And("I take a screenshot");
#line 1737
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 1738
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table299 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table299.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1739
 testRunner.Then("I verify Query is displayed", ((string)(null)), table299);
#line 1742
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table300 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table300.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "100"});
#line 1743
 testRunner.When("I enter data in CRF", ((string)(null)), table300);
#line 1746
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table301 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table301.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1747
 testRunner.Then("I verify Query is displayed", ((string)(null)), table301);
#line 1750
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("@PB-US12940-10B\tAs an EDC user, when I entered bad data in field A and field B th" +
            "at resulted in the system opening a query on field B, if I then entered the new " +
            "bad data in field B, then the system should keep a query open on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-10B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_10BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBIfIThenEnteredTheNewBadDataInFieldBThenTheSystemShouldKeepAQueryOpenOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("@PB-US12940-10B\tAs an EDC user, when I entered bad data in field A and field B th" +
                    "at resulted in the system opening a query on field B, if I then entered the new " +
                    "bad data in field B, then the system should keep a query open on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-10B",
                        "Draft"});
#line 1756
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1759
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table302 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table302.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table302.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table302.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1760
 testRunner.And("I create a Subject", ((string)(null)), table302);
#line 1765
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table303 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table303.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table303.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1766
 testRunner.When("I enter data in CRF", ((string)(null)), table303);
#line 1770
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table304 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table304.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1771
 testRunner.Then("I verify Query is displayed", ((string)(null)), table304);
#line 1774
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table305 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table305.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "85"});
#line 1775
 testRunner.When("I enter data in CRF", ((string)(null)), table305);
#line 1778
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table306 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table306.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1779
 testRunner.Then("I verify Query is displayed", ((string)(null)), table306);
#line 1782
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-10C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the new bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-10C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_10CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIAnsweredTheQueryAndIChangedTheDataInFieldBToAnotherBadDataAndTheQueryIsThenClosedIfIThenEnteredTheNewBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-10C As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I answered the query and I changed the data in field B to another bad data, and the query is then closed, if I then entered the new bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-10C",
                        "Draft"});
#line 1790
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1793
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table307 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table307.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table307.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table307.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1794
 testRunner.And("I create a Subject", ((string)(null)), table307);
#line 1799
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table308 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table308.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table308.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1800
 testRunner.When("I enter data in CRF", ((string)(null)), table308);
#line 1804
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table309 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table309.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1805
 testRunner.Then("I verify Query is displayed", ((string)(null)), table309);
#line 1808
 testRunner.And("I take a screenshot");
#line 1809
 testRunner.When("I answer the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\" with \"Data is co" +
                    "rrect\"");
#line hidden
            TechTalk.SpecFlow.Table table310 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table310.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "85"});
#line 1810
   testRunner.And("I enter data in CRF", ((string)(null)), table310);
#line 1813
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table311 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table311.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1814
 testRunner.Then("I verify Query is displayed", ((string)(null)), table311);
#line hidden
            TechTalk.SpecFlow.Table table312 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table312.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1817
 testRunner.And("I verify Query is not displayed", ((string)(null)), table312);
#line 1821
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table313 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table313.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "100"});
#line 1822
 testRunner.When("I enter data in CRF", ((string)(null)), table313);
#line hidden
            TechTalk.SpecFlow.Table table314 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table314.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1825
 testRunner.Then("I verify Query is displayed", ((string)(null)), table314);
#line 1828
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-10D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field B to another bad data, and the system answers query and the query is closed, if I then entered the new bad data in field B, then the system should refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-10D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_10DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndIChangedTheDataInFieldBToAnotherBadDataAndTheSystemAnswersQueryAndTheQueryIsClosedIfIThenEnteredTheNewBadDataInFieldBThenTheSystemShouldRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-10D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I changed the data in field B to another bad data, and the system answers query and the query is closed, if I then entered the new bad data in field B, then the system should refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-10D",
                        "Draft"});
#line 1834
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1837
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table315 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table315.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table315.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table315.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1838
 testRunner.And("I create a Subject", ((string)(null)), table315);
#line 1843
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table316 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table316.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table316.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 1844
 testRunner.When("I enter data in CRF", ((string)(null)), table316);
#line hidden
            TechTalk.SpecFlow.Table table317 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table317.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1848
 testRunner.Then("I verify Query is displayed", ((string)(null)), table317);
#line 1851
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table318 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table318.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "85"});
#line 1852
 testRunner.When("I enter data in CRF", ((string)(null)), table318);
#line 1855
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table319 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table319.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "False"});
#line 1856
 testRunner.Then("I verify Query is displayed", ((string)(null)), table319);
#line hidden
            TechTalk.SpecFlow.Table table320 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table320.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1859
 testRunner.And("I verify Query is not displayed", ((string)(null)), table320);
#line 1862
 testRunner.And("I take a screenshot");
#line 1863
 testRunner.When("I close the Query \"Systolic Blood Pressure must be greater than Diastolic Blood P" +
                    "ressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 1864
   testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table321 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table321.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "True",
                        "True"});
#line 1865
 testRunner.Then("I verify Query is displayed", ((string)(null)), table321);
#line 1868
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table322 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table322.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "100"});
#line 1869
 testRunner.When("I enter data in CRF", ((string)(null)), table322);
#line 1872
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table323 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table323.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1873
 testRunner.Then("I verify Query is displayed", ((string)(null)), table323);
#line 1876
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-11A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-11A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_11AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-11A	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-11A",
                        "Draft"});
#line 1882
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1885
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table324 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table324.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table324.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table324.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1886
 testRunner.And("I create a Subject", ((string)(null)), table324);
#line 1891
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table325 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table325.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table325.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 1892
 testRunner.When("I enter data in CRF", ((string)(null)), table325);
#line 1896
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table326 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table326.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1897
 testRunner.Then("I verify Query is displayed", ((string)(null)), table326);
#line 1900
 testRunner.And("I take a screenshot");
#line 1901
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 1902
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table327 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table327.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1903
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table327);
#line 1906
 testRunner.And("I");
#line 1907
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table328 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table328.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "100"});
#line 1908
 testRunner.When("I enter data in CRF", ((string)(null)), table328);
#line 1911
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table329 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table329.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1912
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table329);
#line 1915
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table330 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table330.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
#line 1916
 testRunner.And("I enter data in CRF", ((string)(null)), table330);
#line hidden
            TechTalk.SpecFlow.Table table331 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table331.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1919
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table331);
#line 1922
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-11B	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-11B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_11BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-11B	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-11B",
                        "Draft"});
#line 1928
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1931
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table332 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table332.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table332.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table332.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1932
 testRunner.And("I create a Subject", ((string)(null)), table332);
#line 1937
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table333 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table333.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table333.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 1938
 testRunner.When("I enter data in CRF", ((string)(null)), table333);
#line 1942
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table334 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table334.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1943
 testRunner.Then("I verify Query is displayed", ((string)(null)), table334);
#line 1946
 testRunner.And("I take a screenshot");
#line 1947
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 2\"");
#line 1948
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table335 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table335.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1949
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table335);
#line 1952
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table336 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table336.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "100"});
#line 1953
 testRunner.When("I enter data in CRF", ((string)(null)), table336);
#line 1956
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table337 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table337.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1957
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table337);
#line 1960
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table338 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table338.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
#line 1961
 testRunner.When("I enter data in CRF", ((string)(null)), table338);
#line 1964
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table339 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table339.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1965
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table339);
#line 1968
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-11C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-11C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_11CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-11C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-11C",
                        "Draft"});
#line 1974
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 1977
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table340 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table340.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table340.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table340.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 1978
 testRunner.And("I create a Subject", ((string)(null)), table340);
#line 1983
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table341 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table341.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table341.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 1984
 testRunner.When("I enter data in CRF", ((string)(null)), table341);
#line 1988
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table342 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table342.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1989
 testRunner.Then("I verify Query is displayed", ((string)(null)), table342);
#line 1992
 testRunner.And("I take a screenshot");
#line 1993
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\"");
#line 1994
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table343 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table343.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 1995
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table343);
#line 1998
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table344 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table344.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "100"});
#line 1999
 testRunner.When("I enter data in CRF", ((string)(null)), table344);
#line 2002
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table345 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table345.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2003
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table345);
#line 2006
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table346 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table346.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
#line 2007
 testRunner.And("I enter data in CRF", ((string)(null)), table346);
#line hidden
            TechTalk.SpecFlow.Table table347 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table347.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2010
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table347);
#line 2013
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-11D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-11D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_11DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldAIfIThenEnteredTheSameBadDataInFieldAAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-11D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field A, if I then entered the same bad data in field A as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-11D",
                        "Draft"});
#line 2019
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 2022
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table348 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table348.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table348.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table348.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 2023
 testRunner.And("I create a Subject", ((string)(null)), table348);
#line 2028
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table349 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table349.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table349.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 2029
 testRunner.When("I enter data in CRF", ((string)(null)), table349);
#line 2033
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table350 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table350.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2034
 testRunner.Then("I verify Query is displayed", ((string)(null)), table350);
#line 2037
 testRunner.And("I take a screenshot");
#line 2038
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 4\"");
#line 2039
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table351 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table351.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2040
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table351);
#line 2043
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table352 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table352.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "100"});
#line 2044
 testRunner.When("I enter data in CRF", ((string)(null)), table352);
#line 2047
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table353 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table353.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2048
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table353);
#line 2051
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table354 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table354.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
#line 2052
 testRunner.When("I enter data in CRF", ((string)(null)), table354);
#line 2055
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table355 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table355.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2056
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table355);
#line 2059
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-12A	 As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-12A")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_12AAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-12A	 As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-12A",
                        "Draft"});
#line 2065
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 2068
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table356 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table356.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table356.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table356.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 2069
 testRunner.And("I create a Subject", ((string)(null)), table356);
#line 2074
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table357 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table357.AddRow(new string[] {
                        "Systolic Blood Pressure 1",
                        "80"});
            table357.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 2075
 testRunner.When("I enter data in CRF", ((string)(null)), table357);
#line 2079
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table358 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table358.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2080
 testRunner.Then("I verify Query is displayed", ((string)(null)), table358);
#line 2083
 testRunner.And("I take a screenshot");
#line 2084
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 2085
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table359 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table359.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2086
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table359);
#line 2089
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table360 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table360.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "75"});
#line 2090
 testRunner.And("I enter data in CRF", ((string)(null)), table360);
#line 2093
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table361 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table361.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2094
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table361);
#line 2097
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table362 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table362.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "90"});
#line 2098
 testRunner.And("I enter data in CRF", ((string)(null)), table362);
#line hidden
            TechTalk.SpecFlow.Table table363 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table363.AddRow(new string[] {
                        "Diastolic Blood Pressure 1",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2101
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table363);
#line 2104
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-12B	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-12B")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_12BAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-12B	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-12B",
                        "Draft"});
#line 2110
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 2113
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table364 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table364.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table364.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table364.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 2114
 testRunner.And("I create a Subject", ((string)(null)), table364);
#line 2119
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table365 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table365.AddRow(new string[] {
                        "Systolic Blood Pressure 2",
                        "80"});
            table365.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 2120
 testRunner.When("I enter data in CRF", ((string)(null)), table365);
#line 2124
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table366 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table366.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2125
 testRunner.Then("I verify Query is displayed", ((string)(null)), table366);
#line 2128
 testRunner.And("I take a screenshot");
#line 2129
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 2\"");
#line 2130
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table367 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table367.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2131
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table367);
#line 2134
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table368 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table368.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "75"});
#line 2135
 testRunner.When("I enter data in CRF", ((string)(null)), table368);
#line 2138
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table369 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table369.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2139
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table369);
#line 2142
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table370 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table370.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "90"});
#line 2143
 testRunner.When("I enter data in CRF", ((string)(null)), table370);
#line 2146
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table371 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table371.AddRow(new string[] {
                        "Diastolic Blood Pressure 2",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2147
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table371);
#line 2150
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-12C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-12C")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_12CAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-12C	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-12C",
                        "Draft"});
#line 2156
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 2159
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table372 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table372.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table372.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table372.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 2160
 testRunner.And("I create a Subject", ((string)(null)), table372);
#line 2165
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table373 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table373.AddRow(new string[] {
                        "Systolic Blood Pressure 3",
                        "80"});
            table373.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 2166
 testRunner.When("I enter data in CRF", ((string)(null)), table373);
#line 2170
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table374 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table374.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2171
 testRunner.Then("I verify Query is displayed", ((string)(null)), table374);
#line 2174
 testRunner.And("I take a screenshot");
#line 2175
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 3\"");
#line 2176
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table375 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table375.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2177
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table375);
#line 2180
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table376 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table376.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "75"});
#line 2181
 testRunner.When("I enter data in CRF", ((string)(null)), table376);
#line 2184
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table377 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table377.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2185
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table377);
#line 2188
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table378 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table378.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "90"});
#line 2189
 testRunner.When("I enter data in CRF", ((string)(null)), table378);
#line 2192
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table379 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table379.AddRow(new string[] {
                        "Diastolic Blood Pressure 3",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2193
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table379);
#line 2196
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute(@"@PB-US12940-12D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "QueryRefiringLogic4tgt")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB-US12940-12D")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Draft")]
        public virtual void PB_US12940_12DAsAnEDCUserWhenIEnteredBadDataInFieldAAndFieldBThatResultedInTheSystemOpeningAQueryOnFieldBAndICanceledTheQueryAndIEnteredGoodDataInFieldBIfIThenEnteredTheSameBadDataInFieldBAsWhenTheQueryWasCanceledThenTheSystemShouldNotRefireAQueryOnFieldB_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo(@"@PB-US12940-12D	As an EDC user, when I entered bad data in field A and field B that resulted in the system opening a query on field B, and I canceled the query, and I entered good data in field B, if I then entered the same bad data in field B as when the query was canceled, then the system should not refire a query on field B.", new string[] {
                        "release_564_Patch11",
                        "PB-US12940-12D",
                        "Draft"});
#line 2202
this.ScenarioSetup(scenarioInfo);
#line 11
this.FeatureBackground();
#line 2205
 testRunner.Given("I select Study \"Standard Study\" and Site \"Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table380 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table380.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table380.AddRow(new string[] {
                        "Subject Initials",
                        "SUB"});
            table380.AddRow(new string[] {
                        "Subject ID",
                        "SUB {Var(num1)}"});
#line 2206
 testRunner.And("I create a Subject", ((string)(null)), table380);
#line 2211
 testRunner.And("I select Form \"Form 2\"");
#line hidden
            TechTalk.SpecFlow.Table table381 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table381.AddRow(new string[] {
                        "Systolic Blood Pressure 4",
                        "80"});
            table381.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 2212
 testRunner.And("I enter data in CRF", ((string)(null)), table381);
#line 2216
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table382 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table382.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2217
 testRunner.Then("I verify Query is displayed", ((string)(null)), table382);
#line 2220
 testRunner.And("I take a screenshot");
#line 2221
 testRunner.When("I cancel the Query \"Systolic Blood Pressure must be greater than Diastolic Blood " +
                    "Pressure. Please verify.\" on Field \"Diastolic Blood Pressure 1\"");
#line 2222
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table383 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table383.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2223
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table383);
#line 2226
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table384 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table384.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "75"});
#line 2227
 testRunner.When("I enter data in CRF", ((string)(null)), table384);
#line 2230
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table385 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table385.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2231
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table385);
#line 2234
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table386 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table386.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "90"});
#line 2235
 testRunner.When("I enter data in CRF", ((string)(null)), table386);
#line 2238
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table387 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table387.AddRow(new string[] {
                        "Diastolic Blood Pressure 4",
                        "Systolic Blood Pressure must be greater than Diastolic Blood Pressure. Please ver" +
                            "ify.",
                        "False",
                        "False"});
#line 2239
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table387);
#line 2242
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
