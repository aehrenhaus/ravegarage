// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.1
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class UpdatedTabOrderToEnableMouselessDataEntry_TouchedStandardFormFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EDCTabOrderTouchedStandardForm.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Updated tab order to enable mouseless data entry - Touched standard form", "As A Rave EDC User\nI want to tab from one editable field to the next editable fie" +
                    "ld \nSo that I can enter data without using a mouse", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Updated tab order to enable mouseless data entry - Touched standard form")))
            {
                Medidata.RBT.Features.Rave.Features.EDC.UpdatedTabOrderToEnableMouselessDataEntry_TouchedStandardFormFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 53
 testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line 54
 testRunner.And("I select Study \"Standard Study\" and Site \"Site 1\"");
#line 55
 testRunner.And("I select a Subject \"777777791{Var(num1)}\"");
#line 56
 testRunner.And("I select link \"Standard Form\" located in \"Left Nav\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
#line 57
 testRunner.And("I enter data in CRF", ((string)(null)), table1);
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The cursor begins in the first available editable field on the page")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Updated tab order to enable mouseless data entry - Touched standard form")]
        public virtual void TheCursorBeginsInTheFirstAvailableEditableFieldOnThePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The cursor begins in the first available editable field on the page", new string[] {
                        "release_2012.1.0",
                        "US11550-01d",
                        "WIP"});
#line 63
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 65
  testRunner.Then("the cursor focus is located on \"textbox\" in the row labeled \"Field Label 1\" in th" +
                    "e \"first\" position in the row");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("The cursor moves from one editable field to the next when the user hits the tab k" +
            "ey and ignores help text.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Updated tab order to enable mouseless data entry - Touched standard form")]
        public virtual void TheCursorMovesFromOneEditableFieldToTheNextWhenTheUserHitsTheTabKeyAndIgnoresHelpText_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The cursor moves from one editable field to the next when the user hits the tab k" +
                    "ey and ignores help text.", new string[] {
                        "release_2012.1.0",
                        "US11550-02d",
                        "WIP"});
#line 71
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 73
  testRunner.Given("move cursor focus to \"textbox\" in the row labeled \"Field Label 16\" in the \"first\"" +
                    " position in the row");
#line 74
  testRunner.When("I hit \"tab\" key");
#line 75
  testRunner.Then("the cursor focus is located on \"textbox\" in the row labeled \"Field Label 17\" in t" +
                    "he \"first\" position in the row");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("When I tab away from the last editable field, I should tab to the save button.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Updated tab order to enable mouseless data entry - Touched standard form")]
        public virtual void WhenITabAwayFromTheLastEditableFieldIShouldTabToTheSaveButton_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("When I tab away from the last editable field, I should tab to the save button.", new string[] {
                        "release_2012.1.0",
                        "US11550-03d",
                        "WIP"});
#line 81
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 83
  testRunner.Given("move cursor focus to \"textbox\" in the row labeled \"Field Label 19\" in the \"first\"" +
                    " position in the row");
#line 84
  testRunner.When("I hit \"tab\" key");
#line 85
  testRunner.Then("the cursor focus is on \"button\" labeled \"Save\"");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
