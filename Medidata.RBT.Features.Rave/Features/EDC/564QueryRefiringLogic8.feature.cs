// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _8Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic8.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "8", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "8")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._8Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 25
#line 27
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("test")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void Test()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("test", ((string[])(null)));
#line 46
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 47
 testRunner.And("I navigate to \"Architect\"");
#line 48
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 50
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 51
 testRunner.And("I choose \"V1 (25)\" from \"Source CRF\"");
#line 52
 testRunner.And("I choose \"Target003 (39)\" from \"Target CRF\"");
#line 53
 testRunner.And("I click button \"Create Plan\"");
#line 54
 testRunner.And("I take a screenshot");
#line 55
 testRunner.And("I navigate to \"Execute Plan\"");
#line 56
 testRunner.And("I migrate all Subjects");
#line 57
 testRunner.And("I select Migration Results and verify Job Status is set to Complete");
#line 58
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.1 Data setup and verification for query re-firing.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_1_1DataSetupAndVerificationForQueryRe_Firing_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.1 Data setup and verification for query re-firing.", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.1",
                        "Draft"});
#line 65
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 68
 testRunner.And("I navigate to \"DDE\"");
#line 69
 testRunner.And("I select \"First Pass\"");
#line 70
 testRunner.And("I select \"New Batch\"");
#line 71
 testRunner.And("I choose \"Edit Check Study 3\" from \"Study\"");
#line 72
 testRunner.And("I choose \"Prod\" from \"Environment\"");
#line 73
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 74
 testRunner.And("I type \"sub {RndNum<num1>(5)}\" in \"Subject\"");
#line 75
 testRunner.And("I choose \"Subject Identification\" from \"Form\"");
#line 76
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{Var(num1)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 78
 testRunner.And("I enter data in DDE and save", ((string)(null)), table1);
#line 83
 testRunner.And("I choose \"Screening\" from \"Folder\"");
#line 84
 testRunner.And("I choose \"Informed Consent\" from \"Form\"");
#line 85
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 86
 testRunner.And("I enter data in DDE and save", ((string)(null)), table2);
#line 92
 testRunner.And("I choose \"Concomitant Medications\" from \"Form\"");
#line 93
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 94
 testRunner.And("I enter data in DDE log line 1 and save", ((string)(null)), table3);
#line 101
 testRunner.And("I am logged in to Rave with username \"coderimport\" and password \"password\"");
#line 104
 testRunner.And("I navigate to \"DDE\"");
#line 105
 testRunner.And("I select \"Second Pass\"");
#line 106
 testRunner.And("I choose \"Edit Check Study 3\" from \"Study\"");
#line 107
 testRunner.And("I choose \"Prod\" from \"Environment\"");
#line 108
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 109
 testRunner.And("I choose \"sub {Var(num1)}\" from \"Subject\"");
#line 110
 testRunner.And("I choose \"Subject Identification\" from \"Form\"");
#line 111
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Subject Number",
                        "{Var(num1)}"});
            table4.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 112
 testRunner.And("I enter data in DDE and save", ((string)(null)), table4);
#line 117
 testRunner.And("I choose \"Screening\" from \"Folder\"");
#line 118
 testRunner.And("I choose \"Informed Consent\" from \"Form\"");
#line 119
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table5.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table5.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 120
 testRunner.And("I enter data in DDE and save", ((string)(null)), table5);
#line 126
 testRunner.And("I choose \"Concomitant Medications\" from \"Form\"");
#line 127
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table6.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 128
 testRunner.And("I enter data in DDE log line 1 and save", ((string)(null)), table6);
#line 134
 testRunner.And("I navigate to \"Home\"");
#line 135
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 136
 testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 138
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 139
 testRunner.And("I open log line 1");
#line 140
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 141
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 143
 testRunner.And("I take a screenshot");
#line 144
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 145
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 147
 testRunner.And("I save the CRF page");
#line 148
 testRunner.And("I open log line 1");
#line 149
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 150
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 151
 testRunner.And("I save the CRF page");
#line 152
 testRunner.And("I take a screenshot");
#line 153
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 154
 testRunner.And("I enter data in CRF and save", ((string)(null)), table7);
#line 158
 testRunner.And("I open log line 1");
#line 159
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 160
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 162
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 163
 testRunner.And("I enter data in CRF and save", ((string)(null)), table8);
#line 167
 testRunner.And("I open log line 1");
#line 168
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is not displayed on Field \"Start Date\"");
#line 169
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "not displayed on Field \"Current Axis Number\"");
#line 171
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.2",
                        "Draft"});
#line 177
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 179
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table9.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Start Date",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table9.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Current Axis Number",
                        "20",
                        "Screening",
                        "Concomitant Medications",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 180
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table9);
#line 184
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.3",
                        "Draft"});
#line 190
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 192
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 193
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 194
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table10.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 195
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table10);
#line 201
 testRunner.And("I open log line 2");
#line 202
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 203
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 204
 testRunner.And("I take a screenshot");
#line 205
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 206
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 207
 testRunner.And("I save the CRF page");
#line 208
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table11.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 209
 testRunner.And("I enter data in CRF", ((string)(null)), table11);
#line 213
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 214
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 215
 testRunner.And("I save the CRF page");
#line 216
 testRunner.And("I take a screenshot");
#line 217
 testRunner.And("I open log line 2");
#line 218
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 219
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 220
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table12.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 221
 testRunner.And("I enter data in CRF and save", ((string)(null)), table12);
#line 225
 testRunner.And("I open log line 2");
#line 226
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is not displayed on Field \"Start Date\"");
#line 227
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "not displayed on Field \"Current Axis Number\"");
#line 228
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_1_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.4", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.4",
                        "Draft"});
#line 234
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 236
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table13.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table13.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 237
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table13);
#line 241
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.5")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_1_5()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.5", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.5",
                        "Draft"});
#line 247
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 249
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 250
    testRunner.And("I select a Subject \"sub72317\"");
#line 251
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table14.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table14.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 252
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table14);
#line 258
 testRunner.And("I open log line 3");
#line 259
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 260
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 261
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 262
 testRunner.And("I enter data in CRF", ((string)(null)), table15);
#line 266
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 267
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 268
 testRunner.And("I save the CRF page");
#line 269
 testRunner.And("I take a screenshot");
#line 270
 testRunner.And("I open log line 3");
#line 271
 testRunner.And("I verify Field \"Start Date\" has NO Query");
#line 272
 testRunner.And("I verify Field \"Current Axis Number\" has NO Query");
#line 273
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 274
 testRunner.And("I enter data in CRF and save", ((string)(null)), table16);
#line 278
 testRunner.And("I open log line 3");
#line 279
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 280
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 281
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.6")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_1_6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.6", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.6",
                        "Draft"});
#line 287
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 289
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table17.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "3",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table17.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "3",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 290
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table17);
#line 294
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.2.1 Task Summary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_2_1TaskSummary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.2.1 Task Summary", new string[] {
                        "release_564_Patch11",
                        "PB_8.2.1",
                        "Draft"});
#line 300
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 301
 testRunner.And("I select Study \"Edit Check Study 8\" and Site \"Edit Check Site 8\"");
#line 302
 testRunner.And("I select a Subject \"sub22079\"");
#line 303
 testRunner.And("I expand \"Open Queries\" in Task Summary");
#line 304
 testRunner.Then("I should see \"Screening-Concomitant Medications\" in \"Open Queries\"");
#line 305
 testRunner.And("I select \"Screening-Concomitant Medications\" in \"Open Queries\"");
#line 308
 testRunner.Then("I verify \"Start Date\" field displays query opened with require response");
#line 309
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with require response");
#line 310
 testRunner.And("I take a screenshot");
#line 312
 testRunner.And("I select a Subject \"sub801\"");
#line 313
 testRunner.And("I expand \"Cancel Query\" in Task Summary");
#line 315
 testRunner.Then("I should see \"Screening-Concomitant Medications\" in \"Open Query\"");
#line 316
 testRunner.And("I select \"Screening-Concomitant Medications\" in \"Open Query\"");
#line 319
 testRunner.Then("I verify \"Start Date\" field displays query opened with require response and Cance" +
                    "l");
#line 320
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with require response " +
                    "and Cancel");
#line 321
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.1 Query Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_3_1QueryManagement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.1 Query Management", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.1",
                        "Draft"});
#line 327
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 328
 testRunner.And("I navigate to \"Query Management\"");
#line 329
 testRunner.And("I choose \"Edit Check Study 8 (Prod)\" from \"Study\"");
#line 330
 testRunner.And("I choose \"World\" from \"Site Group\"");
#line 331
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 332
 testRunner.And("I choose \"sub801\" from \"Subject\"");
#line 333
 testRunner.And("I click button \"Advanced Search\"");
#line 337
 testRunner.And("I select Form \"\" in search result.");
#line 339
 testRunner.And("I navigate to form \"Concomitant Medications\" for subject \"sub801\"");
#line 340
 testRunner.And("I verify \"Start Date\" field displays query opened with require response on the se" +
                    "cond log line");
#line 341
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with require response " +
                    "on the second log line");
#line 342
 testRunner.And("I take a screenshot");
#line 343
 testRunner.And("I verify \"Start Date\" field displays query opened with require response on the th" +
                    "ird log line");
#line 344
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with require response " +
                    "on the third log line");
#line 345
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Numbe",
                        "10"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 347
    testRunner.And("I add a new log line, enter and save the data, from the table below", ((string)(null)), table18);
#line 353
 testRunner.And("I verify \"Start Date\" field displays query opened with require response on the fo" +
                    "urth log line");
#line 354
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with require response " +
                    "on the fourth log line");
#line 355
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 356
 testRunner.And("I enter data in CRF", ((string)(null)), table19);
#line 360
 testRunner.And("I cancel the queries on \"Start Date\" and \"Current Axis Number\" fields on the four" +
                    "th log line");
#line 361
 testRunner.And("I save the CRF page");
#line 362
 testRunner.And("I take a screenshot");
#line 363
 testRunner.And("I verify the queries did not fire on \"Start Date\" and \"Current Axis Number\" field" +
                    "s");
#line 364
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 365
 testRunner.And("I enter data in CRF and save", ((string)(null)), table20);
#line 369
 testRunner.And("I verify new queries did fire on \"Start Date\" and \"Current Axis Number\" fields");
#line 370
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.2",
                        "Draft"});
#line 376
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 378
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table21.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "4",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table21.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "4",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 379
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table21);
#line 383
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_3_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.3", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.3",
                        "Draft"});
#line 389
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 391
 testRunner.And("I select Form \"Concomitant Medications\" within folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table22.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table22.AddRow(new string[] {
                        "Original Axis Numbe",
                        "10"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 392
    testRunner.And("I add a new log line enter and save", ((string)(null)), table22);
#line 398
 testRunner.And("I verify \"Start Date\" field displays query opened with require response on the fi" +
                    "fth log line");
#line 399
    testRunner.And("I verify \"Current Axis Number\" field displays query opened with require response " +
                    "on the fifth log line");
#line 400
 testRunner.And("I take a screenshot");
#line 401
 testRunner.And("I answer the queries on \"Start Date\" and \"Current Axis Number\" fields");
#line 402
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 403
 testRunner.And("I enter data in CRF and save", ((string)(null)), table23);
#line 407
 testRunner.And("I save the CRF page");
#line 408
 testRunner.And("I close the queries on \"Start Date\" field and \"Current Axis Number\" fields");
#line 409
 testRunner.And("I save the CRF page");
#line 410
 testRunner.And("I take a screenshot");
#line 411
 testRunner.And("I verify the queries did not fire on \"Start Date\" and \"Current Axis Number\" field" +
                    "s");
#line 412
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table24.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 413
 testRunner.And("I enter data in CRF and save", ((string)(null)), table24);
#line 417
 testRunner.And("I save the CRF page");
#line 418
 testRunner.And("I verify new queries did fire on \"Start Date\" and \"Current Axis Number\" fields");
#line 419
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.4")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_3_4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.4", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.4",
                        "Draft"});
#line 425
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 427
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table25.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "5",
                        "Start Date",
                        "07 Jan 2000",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Start Date",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table25.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub801",
                        "Screening",
                        "Concomitant Medications",
                        "5",
                        "Current Axis Number",
                        "18",
                        "Screening",
                        "Concomitant Medications",
                        "2",
                        "Current Axis Number",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 428
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table25);
#line 432
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.4.1 Generate the Data PDFs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_4_1GenerateTheDataPDFs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.4.1 Generate the Data PDFs.", new string[] {
                        "release_564_Patch11",
                        "PB_8.4.1",
                        "Draft"});
#line 438
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 439
 testRunner.And("I navigate to \"PDF Generator\"");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Profile",
                        "Study",
                        "Role",
                        "SiteGroup",
                        "Site",
                        "Subject"});
            table26.AddRow(new string[] {
                        "pdf{RndNum<num>(3)}",
                        "test1",
                        "Edit Check Study 8 (Prod)",
                        "CDM1",
                        "World",
                        "Edit Check Site 2",
                        "SUB640"});
#line 441
 testRunner.And("I create Data PDF", ((string)(null)), table26);
#line 445
 testRunner.And("I generate Data PDF \"pdf{Var(num)}\"");
#line 446
 testRunner.And("I wait for PDF \"pdf{Var(num)}\" to complete");
#line 447
 testRunner.When("I View Data PDF \"pdf{Var(num)}\"");
#line 449
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.1 When I run the Report, then query related data are displayed in the repo" +
            "rt.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_5_1WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.1 When I run the Report, then query related data are displayed in the repo" +
                    "rt.", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.1",
                        "Draft"});
#line 454
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 456
 testRunner.And("I navigate to \"Reporter\"");
#line 457
 testRunner.And("I select Report \"Audit Trail\"");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table27.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 458
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table27);
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table28.AddRow(new string[] {
                        "Edit Check Site 8"});
#line 461
 testRunner.And("I set report parameter \"Sites\" with table", ((string)(null)), table28);
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table29.AddRow(new string[] {
                        "sub 10250"});
#line 464
 testRunner.And("I set report parameter \"Subjects\" with table", ((string)(null)), table29);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table30.AddRow(new string[] {
                        "Screening"});
#line 467
 testRunner.And("I set report parameter \"Folders\" with table", ((string)(null)), table30);
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table31.AddRow(new string[] {
                        "Informed Consent"});
            table31.AddRow(new string[] {
                        "Concomitant Medications"});
#line 470
 testRunner.And("I set report parameter \"Forms\" with table", ((string)(null)), table31);
#line 475
 testRunner.And("I click button \"Submit Report\"");
#line 476
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.2 When I run the Report, then query related data are displayed in the repo" +
            "rt.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_5_2WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.2 When I run the Report, then query related data are displayed in the repo" +
                    "rt.", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.2",
                        "Draft"});
#line 486
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 489
 testRunner.And("I navigate to \"Reporter\"");
#line 490
 testRunner.And("I select report \"Query Detail\"");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table32.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 491
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table32);
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table33.AddRow(new string[] {
                        "Edit Check Site 8"});
#line 494
 testRunner.And("I set report parameter \"Sites\" with table", ((string)(null)), table33);
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table34.AddRow(new string[] {
                        "sub 10250"});
#line 497
 testRunner.And("I set report parameter \"Subjects\" with table", ((string)(null)), table34);
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table35.AddRow(new string[] {
                        "Screening"});
#line 500
 testRunner.And("I set report parameter \"Folders\" with table", ((string)(null)), table35);
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table36.AddRow(new string[] {
                        "Informed Consent"});
            table36.AddRow(new string[] {
                        "Concomitant Medications"});
#line 503
 testRunner.And("I set report parameter \"Forms\" with table", ((string)(null)), table36);
#line 507
 testRunner.When("I click button \"Submit Report\"");
#line 508
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line 510
 testRunner.And("I take a screenshot");
#line 511
 testRunner.And("I close report");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.3 When I run the Report, then query related data are displayed in the repo" +
            "rt.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_5_3WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.3 When I run the Report, then query related data are displayed in the repo" +
                    "rt.", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.3",
                        "Draft"});
#line 517
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 520
 testRunner.And("I navigate to \"Reporter\"");
#line 521
 testRunner.And("I select report \"Edit Check Log Report\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table37.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 522
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table37);
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table38.AddRow(new string[] {
                        "Edit Check Site 8"});
#line 525
 testRunner.And("I set report parameter \"Sites\" with table", ((string)(null)), table38);
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table39.AddRow(new string[] {
                        "sub 10250"});
#line 528
 testRunner.And("I set report parameter \"Subjects\" with table", ((string)(null)), table39);
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table40.AddRow(new string[] {
                        "Screening"});
#line 531
 testRunner.And("I set report parameter \"Folders\" with table", ((string)(null)), table40);
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table41.AddRow(new string[] {
                        "Concomitant Medications"});
#line 534
 testRunner.And("I set report parameter \"Forms\" with table", ((string)(null)), table41);
#line 539
 testRunner.And("I select checkbox \"Edit Check\" for \"Check Type\"");
#line 540
 testRunner.And("I select checkbox Check \"CheckExecution\" for \"Log Type\"");
#line 541
 testRunner.When("I click button \"Submit Report\"");
#line 542
 testRunner.And("I switch to \"Targeted SDV Subject Override\" window");
#line 543
 testRunner.Then("I should see fired editchecks");
#line 544
 testRunner.And("I take a screenshot");
#line 545
 testRunner.And("I close report");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.4 When I run the Report, then query related data are displayed in the repo" +
            "rt.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_5_4WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.4 When I run the Report, then query related data are displayed in the repo" +
                    "rt.", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.4",
                        "Draft"});
#line 551
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 554
 testRunner.And("I navigate to \"Reporter\"");
#line 555
 testRunner.And("I select report \"Stream-Audit Trail\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table42.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 556
testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table42);
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table43.AddRow(new string[] {
                        "Edit Check Site 8"});
#line 559
 testRunner.And("I set report parameter \"Sites\" with table", ((string)(null)), table43);
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table44.AddRow(new string[] {
                        "sub 10250"});
#line 562
 testRunner.And("I set report parameter \"Subjects\" with table", ((string)(null)), table44);
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table45.AddRow(new string[] {
                        "Screening"});
#line 565
 testRunner.And("I set report parameter \"Folders\" with table", ((string)(null)), table45);
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table46.AddRow(new string[] {
                        "Concomitant Medications"});
            table46.AddRow(new string[] {
                        "form2"});
#line 568
 testRunner.And("I set report parameter \"Forms\" with table", ((string)(null)), table46);
#line 572
 testRunner.And("I click button \"Submit Report\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table47.AddRow(new string[] {
                        "Separator",
                        "."});
            table47.AddRow(new string[] {
                        "File type",
                        ".csv"});
            table47.AddRow(new string[] {
                        "Export type",
                        "attachment"});
            table47.AddRow(new string[] {
                        "Save as Unicode",
                        "Unchecked"});
#line 576
 testRunner.When("I select \"Parameter\" to \"Value\", from the tabe below", ((string)(null)), table47);
#line 582
 testRunner.And("I open excel file");
#line 583
 testRunner.Then("I should see queries on \"Start Date\" and \"Current Axis Number\" fields");
#line 584
 testRunner.And("I take a screenshot");
#line 585
 testRunner.And("I close report");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.5 When I run the Report, then query related data are displayed in the repo" +
            "rt.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_5_5WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.5 When I run the Report, then query related data are displayed in the repo" +
                    "rt.", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.5",
                        "Draft"});
#line 591
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 594
 testRunner.And("I navigate to \"Reporter\"");
#line 595
 testRunner.And("I select report \"Stream-Query Detail\"");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table48.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 596
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table48);
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table49.AddRow(new string[] {
                        "Edit Check Site 8"});
#line 599
 testRunner.And("I set report parameter \"Sites\" with table", ((string)(null)), table49);
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table50.AddRow(new string[] {
                        "sub 10250"});
#line 602
 testRunner.And("I set report parameter \"Subjects\" with table", ((string)(null)), table50);
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table51.AddRow(new string[] {
                        "Screening"});
#line 605
 testRunner.And("I set report parameter \"Folders\" with table", ((string)(null)), table51);
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table52.AddRow(new string[] {
                        "Concomitant Medications"});
#line 608
 testRunner.And("I set report parameter \"Forms\" with table", ((string)(null)), table52);
#line 612
 testRunner.And("I click button \"Submit Report\"");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table53.AddRow(new string[] {
                        "Separator",
                        "."});
            table53.AddRow(new string[] {
                        "File type",
                        ".csv"});
            table53.AddRow(new string[] {
                        "Export type",
                        "attachment"});
            table53.AddRow(new string[] {
                        "Save as Unicode",
                        "Unchecked"});
#line 613
 testRunner.When("I select \"Parameter\" to \"Value\", from the tabe below", ((string)(null)), table53);
#line 619
 testRunner.And("I open excel file");
#line 620
 testRunner.Then("I should see queries on \"Start Date\" and \"Current Axis Number\" fields");
#line 621
 testRunner.And("I take a screenshot");
#line 622
 testRunner.And("I close report");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.6 When I run the Report, then query related data are displayed in the repo" +
            "rt.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_5_6WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.6 When I run the Report, then query related data are displayed in the repo" +
                    "rt.", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.6",
                        "Draft"});
#line 628
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 631
 testRunner.And("I navigate to \"Reporter\"");
#line 632
 testRunner.And("I select report \"Stream-Edit Check Log Report\"");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table54.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 633
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table54);
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table55.AddRow(new string[] {
                        "Edit Check Site 8"});
#line 636
 testRunner.And("I set report parameter \"Sites\" with table", ((string)(null)), table55);
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table56.AddRow(new string[] {
                        "sub 10250"});
#line 639
 testRunner.And("I set report parameter \"Subjects\" with table", ((string)(null)), table56);
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table57.AddRow(new string[] {
                        "Concomitant Medications"});
#line 642
 testRunner.And("I set report parameter \"Forms\" with table", ((string)(null)), table57);
#line 646
 testRunner.And("I select checkbox \"Edit Check\" for \"Check Type\"");
#line 647
 testRunner.And("I select checkbox Check \"CheckExecution\" for \"Log Type\"");
#line 648
 testRunner.And("I click button \"Submit Report\"");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Parameter",
                        "Value"});
            table58.AddRow(new string[] {
                        "Separator",
                        "."});
            table58.AddRow(new string[] {
                        "File type",
                        ".csv"});
            table58.AddRow(new string[] {
                        "Export type",
                        "attachment"});
            table58.AddRow(new string[] {
                        "Save as Unicode",
                        "Unchecked"});
#line 649
 testRunner.And("I select \"Parameter\" to \"Value\", from the tabe below", ((string)(null)), table58);
#line 655
 testRunner.When("I open excel file");
#line 656
 testRunner.Then("I should see fired editchecks");
#line 657
 testRunner.And("I take a screenshot");
#line 658
 testRunner.And("I close report");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.6.1 When I run the Report, then query related data are displayed in the repo" +
            "rt.J-Review verification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_6_1WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_J_ReviewVerification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.6.1 When I run the Report, then query related data are displayed in the repo" +
                    "rt.J-Review verification.", new string[] {
                        "release_564_Patch11",
                        "PB_8.6.1",
                        "Draft"});
#line 664
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 666
 testRunner.And("I navigate to \"Reporter\"");
#line 667
 testRunner.And("I select report \"J-Review\"");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table59.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 668
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table59);
#line 671
 testRunner.And("I click button \"Submit Report\"");
#line 672
 testRunner.And("I select \"Edit Check Study 8\" \"Prod\" from \"Studies\"");
#line 673
 testRunner.And("I click button \"Reports\"");
#line 674
 testRunner.And("I select \"Detail Data Listing\" report from \"Type\" in \"Report Browser\"");
#line 675
 testRunner.And("I select \"MetricViews\" from \"Panels\"");
#line 676
 testRunner.And("I select \"Queries\" from \"MetricViews\"");
#line 677
 testRunner.And("I select \"Project, Site, Subject, Datapage, Field, Record Position QueryText, Que" +
                    "ryStatus, Answered Data, Answer Text\"");
#line 678
 testRunner.When("I click button \"Create Report\"");
#line 679
 testRunner.Then("I should see \"sub801\"");
#line 680
 testRunner.And("I should see \"Added Query\" in \"QueryText\"");
#line 681
 testRunner.And("I take a screenshot");
#line 682
 testRunner.And("I Close \"Detail Data Listing\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.7.1 When I run the Report, then query related data are displayed in the repo" +
            "rt. BOXI report verification.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_7_1WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_BOXIReportVerification_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.7.1 When I run the Report, then query related data are displayed in the repo" +
                    "rt. BOXI report verification.", new string[] {
                        "release_564_Patch11",
                        "PB_8.7.1",
                        "Draft"});
#line 688
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 690
 testRunner.And("I navigate to \"Reporter\"");
#line 691
 testRunner.And("I select report \"Business Objects XI\"");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Environment"});
            table60.AddRow(new string[] {
                        "Edit Check Study 8",
                        "Prod"});
#line 692
 testRunner.And("I set report parameter \"Study\" with table", ((string)(null)), table60);
#line 695
 testRunner.And("I click button \"Submit Report\"");
#line 696
 testRunner.And("I select dropdown \"New\"");
#line 697
 testRunner.And("I select \"Web Intelligence Document\"");
#line 698
 testRunner.And("I select \"Rave 5.6 Universe\"");
#line 699
 testRunner.And("I select \"Project Name, Site Name, Subject Name, Folder Name, Form Name, Query Te" +
                    "xt\" in \"Results Objects\"");
#line 700
 testRunner.And("I select \"Site Name, Subject Name, Folder Name, FormName\" in \"Query Filters\"");
#line 701
 testRunner.And("I select \"Equal To\" from \"In List\" in \"Query Filters\" for \"Site Name\"");
#line 702
 testRunner.And("Enter \"Value(s) from list\" \"Edit Check Site 8\" in \"Query Filters\" for \"Site Name\"" +
                    "");
#line 703
 testRunner.And("I select \"Equal To\" from \"In List\" in \"Query Filters\" for \"Subject Name\"");
#line 704
 testRunner.And("Enter \"Value(s) from list\" \"sub801\" in \"Query Filters\" for \"Subject Name\"");
#line 705
 testRunner.And("I select \"Equal To\" from \"In List\" in \"Query Filters\" for \"Folder Name\"");
#line 706
 testRunner.And("Enter \"Value(s) from list\" \"Screening\" in \"Query Filters\" for \"Folder Name\"");
#line 707
 testRunner.And("I select \"Equal To\" from \"In List\" in \"Query Filters\" for \"Form Name\"");
#line 708
 testRunner.And("Enter \"Value(s) from list\" \"Concomitant Medications\" in \"Query Filters\" for \"Form" +
                    " Name\"");
#line 709
 testRunner.When("I click button \"Run Query\"");
#line 710
 testRunner.Then("I should see \"sub801\"");
#line 711
 testRunner.And("I should see \"Added Query\" in \"QueryText\"");
#line 712
 testRunner.And("I take a screenshot");
#line 713
 testRunner.And("I Close \"BOXI Report\"");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.8.1 When I run the Report, then query related data are displayed in the repo" +
            "rt. Migrate Subject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_8_1WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_MigrateSubject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.8.1 When I run the Report, then query related data are displayed in the repo" +
                    "rt. Migrate Subject", new string[] {
                        "release_564_Patch11",
                        "PB_8.8.1",
                        "Draft"});
#line 719
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 721
 testRunner.And("I select Study \"AM Edit Check Study\"");
#line 722
 testRunner.And("I select Site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table61.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 8,prod,Subject Number)}"});
            table61.AddRow(new string[] {
                        "Subject Initials",
                        "sub802"});
#line 723
    testRunner.And("I create a Subject", ((string)(null)), table61);
#line 727
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table62.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table62.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 728
 testRunner.And("I enter data in CRF and save", ((string)(null)), table62);
#line 733
 testRunner.And("I verify \"Log Field 1\" field displays query opened with require response");
#line 734
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 735
 testRunner.And("I save the CRF page");
#line 736
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 737
 testRunner.And("I save the CRF page");
#line 738
 testRunner.And("I note CRF Version \"<Source CRF Version1>\"");
#line 739
 testRunner.And("I take a screenshot");
#line 741
 testRunner.And("I select site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table63.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 8,prod,Subject Number)}"});
            table63.AddRow(new string[] {
                        "Subject Initials",
                        "sub803"});
#line 742
    testRunner.And("I create a Subject", ((string)(null)), table63);
#line 746
 testRunner.And("I select Form \"Mixed Form\"");
#line 747
 testRunner.And("I enter data in CRF and save");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table64.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table64.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 748
testRunner.And("I save the CRF page", ((string)(null)), table64);
#line 753
 testRunner.And("I verify \"Log Field 1\" field displays query opened with require response");
#line 754
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 755
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table65.AddRow(new string[] {
                        "Standard 1",
                        "5"});
#line 756
 testRunner.And("I enter data in CRF and save", ((string)(null)), table65);
#line 759
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 760
 testRunner.And("I save the CRF page");
#line 761
 testRunner.And("I note CRF Version \"<Source CRF Version1>\"");
#line 762
 testRunner.And("I take a screenshot");
#line 764
 testRunner.And("I navigate to \"Home\"");
#line 765
 testRunner.And("I navigate to \"Architect\"");
#line 766
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 767
 testRunner.And("I select \"Draft123\" in \"CRF Drafts\"");
#line 768
 testRunner.And("I navigate to \"Edit Checks\"");
#line 769
 testRunner.And("I inactivate edit check \"Mixed Form Query\"");
#line 771
 testRunner.And("I select Draft \"Draft123\" in \"Header\"");
#line 774
 testRunner.And("I publish CRF Version \"Target{RndNum<num1>(3)}\"");
#line 776
 testRunner.And("I select Study \"AM Edit Check Study\" in \"Header\"");
#line 777
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 778
 testRunner.And("I choose \"V1 (25)\" from \"Source CRF\"");
#line 779
 testRunner.And("I choose \"Target003 (39)\" from \"Target CRF\"");
#line 780
 testRunner.And("I click button \"Create Plan\"");
#line 781
 testRunner.And("I take a screenshot");
#line 782
 testRunner.And("I navigate to \"Execute Plan\"");
#line 783
 testRunner.And("I migrate all Subjects");
#line 784
 testRunner.And("I select Migration Results and verify Job Status is set to Complete");
#line 785
 testRunner.And("I take a screenshot");
#line 788
 testRunner.And("I navigate to \"Home\"");
#line 789
 testRunner.And("I select \"AM Edit Check Study\"");
#line 790
 testRunner.And("I select site \"AM Edit Site\"");
#line 791
    testRunner.And("I select a subject \"sub802\"");
#line 792
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 793
 testRunner.And("I enter data in CRF and save", ((string)(null)), table66);
#line 796
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Log Field 1",
                        "3"});
            table67.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 797
 testRunner.And("I add a new log line, enter and save the data, from the table below", ((string)(null)), table67);
#line 801
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field");
#line 802
 testRunner.And("I take a screenshot");
#line 804
 testRunner.And("I select site \"AM Edit Site\"");
#line 805
    testRunner.And("I select a subject \"sub803\"");
#line 806
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Standard 1",
                        "8"});
#line 807
 testRunner.And("I enter data in CRF and save", ((string)(null)), table68);
#line 810
 testRunner.And("I save the CRF page");
#line 811
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table69.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
            table69.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 812
 testRunner.And("I add a new log line, enter and save the data, from the table below", ((string)(null)), table69);
#line 816
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field");
#line 817
 testRunner.And("I take a screenshot");
#line 819
 testRunner.And("I navigate to \"Home\"");
#line 820
 testRunner.And("I navigate to \"Architect\"");
#line 821
 testRunner.And("I navigate to \"AM Edit Check Study\"");
#line 822
 testRunner.And("I navigate to \"Draft 1\"");
#line 823
 testRunner.And("I navigate to \"Edit Checks\"");
#line 824
 testRunner.And("I select edit image for \"Mixed Form Query\" Edit Check");
#line 825
 testRunner.And("I select checkbox \"Active\"");
#line 826
 testRunner.And("I select  link \"Update\"");
#line 827
 testRunner.And("I navigate to \"Draft 1\"");
#line 828
 testRunner.And("I publish CRF Version");
#line 829
 testRunner.And("I note CRF Version \"<Target CRF Version2>\"");
#line 830
 testRunner.And("I navigate to \"AM Edit Check Study\"");
#line 831
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 832
 testRunner.And("I select \"<Target CRF Version1>\" from dropdown \"Source CRF\"");
#line 833
 testRunner.And("I select \"<Target CRF Version2>\" from dropdown \"Target CRF\"");
#line 834
 testRunner.And("I click button \"Create Plan\"");
#line 835
 testRunner.And("I navigate to \"Exceute Plan\"");
#line 836
 testRunner.And("I Migrate \"All Subjects\"");
#line 837
 testRunner.And("I select Migration Results and verify Job Status is set to Complete");
#line 838
 testRunner.And("I take a screenshot");
#line 840
 testRunner.And("I navigate to \"Home\"");
#line 841
 testRunner.And("I select \"AM Edit Check Study\"");
#line 842
 testRunner.And("I select site \"AM Edit Site\"");
#line 843
    testRunner.And("I select a subject \"sub802\"");
#line 844
 testRunner.And("I select Form \"Mixed Form\"");
#line 845
 testRunner.And("I verify new query did fire on \"Log Field 1\" field with require response on the f" +
                    "irst log line");
#line 846
 testRunner.And("I verify new query did fire on \"Log Field 1\" field with require response on the s" +
                    "econd log line");
#line 847
 testRunner.And("I take a screenshot");
#line 849
 testRunner.And("I select site \"AM Edit Site\"");
#line 850
    testRunner.And("I select a subject \"sub803\"");
#line 851
 testRunner.And("I select Form \"Mixed Form\"");
#line 852
 testRunner.And("I verify new query did fire on \"Log Field 1\" field with require response on the f" +
                    "irst log line");
#line 853
 testRunner.And("I verify new query did fire on \"Log Field 1\" field with require response on the s" +
                    "econd log line");
#line 854
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.9.1 When I run the Report, then query related data are displayed in the repo" +
            "rt. Publish Checks")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_9_1WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_PublishChecks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.9.1 When I run the Report, then query related data are displayed in the repo" +
                    "rt. Publish Checks", new string[] {
                        "release_564_Patch11",
                        "PB_8.9.1",
                        "Draft"});
#line 860
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 862
 testRunner.And("I navigate to \"Architect\"");
#line 863
 testRunner.And("I navigate to \"AM Edit Check Study\"");
#line 864
 testRunner.And("I navigate to \"Draft 1\"");
#line 865
 testRunner.And("I publish and push CRF Version");
#line 866
 testRunner.And("I note CRF Version \"<Publish CRF Version1>\"");
#line 867
 testRunner.And("I publish CRF Version");
#line 868
 testRunner.And("I note CRF Version \"<Publish CRF Version2>\"");
#line 869
 testRunner.And("I publish CRF Version");
#line 870
 testRunner.And("I note CRF Version \"<Publish CRF Version3>\"");
#line 872
 testRunner.And("I navigate to \"Home\"");
#line 873
 testRunner.And("I select \"AM Edit Check Study\"");
#line 874
 testRunner.And("I select site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table70.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 8,prod,Subject Number)}"});
            table70.AddRow(new string[] {
                        "Subject Initials",
                        "sub804"});
#line 875
    testRunner.And("I create a Subject", ((string)(null)), table70);
#line 879
 testRunner.And("I select Form \"Mixed Form\"");
#line 880
 testRunner.And("I enter data in CRF and save");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table71.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table71.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 881
testRunner.And("I save the CRF page", ((string)(null)), table71);
#line 886
 testRunner.And("I verify \"Log Field 1\" field displays query opened with require response");
#line 887
 testRunner.And("I take a screenshot");
#line 888
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 889
 testRunner.And("I save the CRF page");
#line 890
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 891
 testRunner.And("I save the CRF page");
#line 892
 testRunner.And("I take a screenshot");
#line 894
 testRunner.And("I navigate to \"Home\"");
#line 895
 testRunner.And("I navigate to \"Architect\"");
#line 896
 testRunner.And("I navigate to \"AM Edit Check Study\"");
#line 897
 testRunner.And("I navigate to \"Pulish Checks\"");
#line 898
 testRunner.And("I select \"<Publish CRF Version1>\" from dropdown \"Current CRF Version\"");
#line 899
 testRunner.And("I select \"<Publish CRF Version2>\" from dropdown \"Reference CRF Version\"");
#line 900
 testRunner.And("I click button \"Create Plan\"");
#line 901
 testRunner.And("I check \"Inactivate\" checkbox for \"Mixed Form Query\" edit check");
#line 902
 testRunner.And("I navigate to \"Save\"");
#line 903
 testRunner.And("I take a screenshot");
#line 904
 testRunner.And("I navigate to \"Publish\"");
#line 905
 testRunner.And("I verify Job Status is set to Complete");
#line 906
 testRunner.And("I take a screenshot");
#line 908
 testRunner.And("I navigate to \"Home\"");
#line 909
 testRunner.And("I select \"AM Edit Check Study\"");
#line 910
 testRunner.And("I select site \"AM Edit Site\"");
#line 911
    testRunner.And("I select a subject \"sub804\"");
#line 912
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table72.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 913
 testRunner.And("I enter data in CRF and save", ((string)(null)), table72);
#line 916
 testRunner.And("I save the CRF page");
#line 917
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field");
#line 918
 testRunner.And("I take a screenshot");
#line 920
 testRunner.And("I navigate to \"Home\"");
#line 921
 testRunner.And("I navigate to \"Architect\"");
#line 922
 testRunner.And("I navigate to \"AM Edit Check Study\"");
#line 923
 testRunner.And("I navigate to \"Pulish Checks\"");
#line 924
 testRunner.And("I select \"<Publish CRF Version1>\" from dropdown \"Current CRF Version\"");
#line 925
 testRunner.And("I select \"<Publish CRF Version3>\" from dropdown \"Reference CRF Version\"");
#line 926
 testRunner.And("I click button \"Create Plan\"");
#line 927
 testRunner.And("I check \"Publish\" checkbox for \"Mixed Form Query\" edit check");
#line 928
 testRunner.And("I navigate to \"Save\"");
#line 929
 testRunner.And("I take a screenshot");
#line 930
 testRunner.And("I navigate to \"Publish\"");
#line 931
 testRunner.And("I verify Job Status is set to Complete");
#line 932
 testRunner.And("I take a screenshot");
#line 934
 testRunner.And("I navigate to \"Home\"");
#line 935
 testRunner.And("I select \"AM Edit Check Study\"");
#line 936
 testRunner.And("I select site \"AM Edit Site\"");
#line 937
    testRunner.And("I select a subject \"sub804\"");
#line 938
 testRunner.And("I select Form \"Mixed Form\"");
#line 939
 testRunner.And("I verify new query did fire on \"Log Field 1\" field");
#line 940
 testRunner.And("I answer the query on \"Log Field 1\" field");
#line 941
 testRunner.And("I save the CRF page");
#line 942
 testRunner.And("I take a screenshot");
#line 943
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 944
 testRunner.And("I save the CRF page");
#line 945
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Standard 1",
                        "8"});
#line 946
 testRunner.And("I enter data in CRF and save", ((string)(null)), table73);
#line 949
 testRunner.And("I save the CRF page");
#line 950
 testRunner.And("I verify new query did fire on \"Log Field 1\" field.");
#line 951
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.10.1 When I run the Report, then query related data are displayed in the rep" +
            "ort. Queries verification on data points with Freeze, Hard lock and Inactive rec" +
            "ords")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_10_1WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_QueriesVerificationOnDataPointsWithFreezeHardLockAndInactiveRecords()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.10.1 When I run the Report, then query related data are displayed in the rep" +
                    "ort. Queries verification on data points with Freeze, Hard lock and Inactive rec" +
                    "ords", new string[] {
                        "release_564_Patch11",
                        "PB_8.10.1",
                        "Draft"});
#line 957
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 959
 testRunner.And("I select \"Edit Check Study 8\"");
#line 960
 testRunner.And("I select site \"Edit Check Site 8\"");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Value"});
            table74.AddRow(new string[] {
                        "Subject Number",
                        "{NextSubjectNum<num1>(Edit Check Study 8,prod,Subject Number)}"});
            table74.AddRow(new string[] {
                        "Subject Initials",
                        "sub805"});
#line 961
    testRunner.And("I create a Subject", ((string)(null)), table74);
#line 965
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table75.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table75.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table75.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 966
 testRunner.And("I enter data in CRF and save", ((string)(null)), table75);
#line 971
 testRunner.And("I verify \"Log Field 1\" field displays query opened with require response on first" +
                    " record position");
#line 972
 testRunner.And("I take a screenshot");
#line 973
 testRunner.And("I add new log line 2");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table76.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 974
 testRunner.And("I enter data in CRF and save", ((string)(null)), table76);
#line 978
 testRunner.And("I verify \"Log Field 1\" field displays query opened with require response on secon" +
                    "d record position");
#line 979
 testRunner.And("I take a screenshot");
#line 980
 testRunner.And("I add new log line 3");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table77.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 981
 testRunner.And("I enter data in CRF and save", ((string)(null)), table77);
#line 985
 testRunner.And("I verify \"Log Field 1\" field displays query opened with require response on third" +
                    " record position");
#line 986
 testRunner.And("I take a screenshot");
#line 988
 testRunner.And("I answer the query on \"Log Field 1\" field on first record position");
#line 989
 testRunner.And("I save the CRF page");
#line 990
 testRunner.And("I answer the query on \"Log Field 1\" field on seond record position");
#line 991
 testRunner.And("I save the CRF page");
#line 992
 testRunner.And("I answer the query on \"Log Field 1\" field on third record position");
#line 993
 testRunner.And("I save the CRF page");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table78.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 995
 testRunner.And("I enter data in CRF and save", ((string)(null)), table78);
#line 998
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 999
 testRunner.And("I save the CRF page");
#line 1000
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table79.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 1001
 testRunner.And("I enter data in CRF and save", ((string)(null)), table79);
#line 1004
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 1005
 testRunner.And("I save the CRF page");
#line 1006
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table80.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 1007
 testRunner.And("I enter data in CRF and save", ((string)(null)), table80);
#line 1010
 testRunner.And("I close the query on \"Log Field 1\" field");
#line 1011
 testRunner.And("I save the CRF page");
#line 1012
 testRunner.And("I take a screenshot");
#line 1014
 testRunner.And("I select edit icon on first record position");
#line 1015
 testRunner.And("I select checkbox \"Freeze\" on \"Log Field 1\" field on first record position");
#line 1016
 testRunner.And("I save the CRF page");
#line 1017
 testRunner.And("I select edit icon on second record position");
#line 1018
 testRunner.And("I select checkbox \"Hadrd Lock\" on \"Log Field 1\" field on second record position");
#line 1019
 testRunner.And("I save the CRF page");
#line 1020
 testRunner.And("I navigate to \"Inactivate\"");
#line 1021
 testRunner.And("I select \"3\" in dropdown");
#line 1022
 testRunner.And("I select \"Inactivate\" button");
#line 1023
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table81.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 1025
 testRunner.And("I enter data in CRF and save", ((string)(null)), table81);
#line 1028
 testRunner.And("I save the CRF page");
#line 1029
 testRunner.And("I verify new query did fire on \"Log Field 1\" field on first record position");
#line 1030
 testRunner.And("I take a screenshot");
#line 1031
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field on second record position");
#line 1032
 testRunner.And("I take a screenshot");
#line 1033
 testRunner.And("I verify new query did not fire on \"Log Field 1\" field on third record position");
#line 1034
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.10.2 When I run the Report, then query related data are displayed in the rep" +
            "ort.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "8")]
        public virtual void PB_8_10_2WhenIRunTheReportThenQueryRelatedDataAreDisplayedInTheReport_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.10.2 When I run the Report, then query related data are displayed in the rep" +
                    "ort.", new string[] {
                        "release_564_Patch11",
                        "PB_8.10.2",
                        "Draft"});
#line 1040
this.ScenarioSetup(scenarioInfo);
#line 25
this.FeatureBackground();
#line 1042
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table82.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub805",
                        "Mixed Form",
                        "2",
                        "Log Field 1",
                        "18",
                        "Screening",
                        "Standard 1",
                        "2",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
            table82.AddRow(new string[] {
                        "Edit Check Study 8",
                        "80001",
                        "Edit Check Site 8",
                        "PROD",
                        "sub805",
                        "Mixed Form",
                        "3",
                        "Log Field 1",
                        "18",
                        "Screening",
                        "Standard 1",
                        "2",
                        "Standard 1",
                        "7",
                        "Mixed Form Query",
                        "Site",
                        "Query Opened on Log Field 1",
                        "{DateTime}"});
#line 1043
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table82);
#line 1047
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
