// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.269
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _564QueryRefiringLogic8Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic8.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "564QueryRefiringLogic8", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "564QueryRefiringLogic8")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._564QueryRefiringLogic8Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 16
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.1 As an EDC user, Data setup and verification for query re-firing. Folder " +
            "\"Screening\" enter and save data on forms \"Informed Consent\" and \"Concomitant Med" +
            "ications\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.1.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_1_1AsAnEDCUserDataSetupAndVerificationForQueryRe_Firing_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.1 As an EDC user, Data setup and verification for query re-firing. Folder " +
                    "\"Screening\" enter and save data on forms \"Informed Consent\" and \"Concomitant Med" +
                    "ications\"", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.1",
                        "Validation"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 41
 testRunner.And("I navigate to \"DDE\"");
#line 42
 testRunner.And("I select link \"First Pass\"");
#line 43
 testRunner.And("I select link \"New Batch\"");
#line 44
 testRunner.And("I choose \"Edit Check Study 3\" from \"Study\"");
#line 45
 testRunner.And("I choose \"Prod\" from \"Environment\"");
#line 46
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 47
 testRunner.And("I type \"sub {RndNum<num1>(5)}\" in \"Subject\"");
#line 48
 testRunner.And("I choose \"Subject Identification\" from \"Form\"");
#line 49
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{Var(num1)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 50
 testRunner.And("I enter data in DDE and save", ((string)(null)), table1);
#line 54
 testRunner.And("I choose \"Screening\" from \"Folder\"");
#line 55
 testRunner.And("I choose \"Informed Consent\" from \"Form\"");
#line 56
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 57
 testRunner.And("I enter data in DDE and save", ((string)(null)), table2);
#line 63
 testRunner.And("I choose \"Concomitant Medications\" from \"Form\"");
#line 64
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 65
 testRunner.And("I enter data in DDE log line 1 and save", ((string)(null)), table3);
#line 72
 testRunner.And("I am logged in to Rave with username \"Defuser01\" and password \"password\"");
#line 73
 testRunner.And("I navigate to \"DDE\"");
#line 74
 testRunner.And("I select link \"Second Pass\"");
#line 75
 testRunner.And("I choose \"Edit Check Study 3\" from \"Study\"");
#line 76
 testRunner.And("I choose \"Prod\" from \"Environment\"");
#line 77
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 78
 testRunner.And("I choose \"sub {Var(num1)}\" from \"Subject\"");
#line 79
 testRunner.And("I choose \"Subject Identification\" from \"Form\"");
#line 80
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Subject Number",
                        "{Var(num1)}"});
            table4.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 81
 testRunner.And("I enter data in DDE and save", ((string)(null)), table4);
#line 85
 testRunner.And("I choose \"Screening\" from \"Folder\"");
#line 86
 testRunner.And("I choose \"Informed Consent\" from \"Form\"");
#line 87
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table5.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table5.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 88
 testRunner.And("I enter data in DDE and save", ((string)(null)), table5);
#line 94
 testRunner.And("I choose \"Concomitant Medications\" from \"Form\"");
#line 95
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table6.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 96
 testRunner.And("I enter data in DDE log line 1 and save", ((string)(null)), table6);
#line 103
 testRunner.And("I navigate to \"Home\"");
#line 104
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 105
 testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 106
 testRunner.When("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 107
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table7.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 108
 testRunner.Then("I verify Query is displayed", ((string)(null)), table7);
#line 112
 testRunner.And("I take a screenshot");
#line 113
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 114
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 115
 testRunner.And("I save the CRF page");
#line 116
 testRunner.And("I open log line 1");
#line 117
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 118
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 119
 testRunner.And("I save the CRF page");
#line 120
 testRunner.And("I take a screenshot");
#line 121
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 122
 testRunner.And("I enter data in CRF and save", ((string)(null)), table8);
#line 126
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Answered",
                        "Closed"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 127
 testRunner.And("I verify Query is not displayed", ((string)(null)), table9);
#line 131
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 132
 testRunner.When("I enter data in CRF and save", ((string)(null)), table10);
#line 136
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table11.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table11.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 137
 testRunner.Then("I verify Query is displayed", ((string)(null)), table11);
#line 141
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.2",
                        "Validation"});
#line 147
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 149
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 150
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 151
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table12.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table12.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table12.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table12.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 152
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table12);
#line 158
 testRunner.When("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table13.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table13.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 159
 testRunner.Then("I verify Query is displayed", ((string)(null)), table13);
#line 163
 testRunner.And("I take a screenshot");
#line 164
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 165
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 166
 testRunner.And("I save the CRF page");
#line 167
 testRunner.And("I open log line 2");
#line 168
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 169
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 170
 testRunner.And("I enter data in CRF", ((string)(null)), table14);
#line 174
 testRunner.And("I save the CRF page");
#line 175
 testRunner.And("I take a screenshot");
#line 176
 testRunner.When("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table15.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 177
 testRunner.Then("I verify Query is displayed", ((string)(null)), table15);
#line 181
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 182
 testRunner.When("I enter data in CRF and save", ((string)(null)), table16);
#line 186
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table17.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 187
 testRunner.Then("I verify Query is displayed", ((string)(null)), table17);
#line 191
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.3",
                        "Validation"});
#line 198
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 200
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 201
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 202
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 203
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table18);
#line 209
 testRunner.When("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table19.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 210
 testRunner.Then("I verify Query is displayed", ((string)(null)), table19);
#line 214
 testRunner.And("I take a screenshot");
#line 215
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 216
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 217
 testRunner.And("I enter data in CRF", ((string)(null)), table20);
#line 221
 testRunner.And("I save the CRF page");
#line 222
 testRunner.And("I take a screenshot");
#line 223
 testRunner.When("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table21.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table21.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 224
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table21);
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table22.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 228
 testRunner.And("I verify Query is not displayed", ((string)(null)), table22);
#line 232
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table23.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 233
 testRunner.When("I enter data in CRF and save", ((string)(null)), table23);
#line 237
 testRunner.And("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table24.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table24.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 238
 testRunner.Then("I verify Query is displayed", ((string)(null)), table24);
#line 242
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.2.1 Task Summary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.2.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_2_1TaskSummary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.2.1 Task Summary", new string[] {
                        "release_564_Patch11",
                        "PB_8.2.1",
                        "Validation"});
#line 248
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 250
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 251
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 252
 testRunner.When("I expand \"Open Queries\" in Task Summary");
#line 253
 testRunner.Then("I should see \"Screening-Concomitant Medications\" in \"Open Queries\"");
#line 254
 testRunner.And("I select link \"Screening-Concomitant Medications\" in \"Open Queries\"");
#line 255
 testRunner.When("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table25.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table25.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 256
 testRunner.Then("I verify Query is displayed", ((string)(null)), table25);
#line 260
 testRunner.And("I take a screenshot");
#line 261
 testRunner.And("I select Site \"Edit Check Site 8\" in \"Header\"");
#line 262
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 263
 testRunner.When("I expand \"Cancel Queries\" in Task Summary");
#line 264
 testRunner.Then("I should see \"Screening-Concomitant Medications\" in \"Cancel Queries\"");
#line 265
 testRunner.And("I select link \"Screening-Concomitant Medications\" in \"Cancel Queries\"");
#line 266
 testRunner.When("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table26.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 267
 testRunner.Then("I verify Query is displayed", ((string)(null)), table26);
#line 271
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.1 Query Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.3.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_3_1QueryManagement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.1 Query Management", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.1",
                        "Validation"});
#line 277
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 279
 testRunner.And("I navigate to \"Query Management\"");
#line 280
 testRunner.And("I choose \"Edit Check Study 3 (Prod)\" from \"Study\"");
#line 281
 testRunner.And("I choose \"World\" from \"Site Group\"");
#line 282
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 283
 testRunner.And("I choose \"sub{Var(num1)}\" from \"Subject\"");
#line 284
 testRunner.And("I click button \"Advanced Search\"");
#line 285
 testRunner.And("I select Form \"Concomitant Medications\" in \"Search Result\"");
#line 286
 testRunner.When("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table27.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table27.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 287
 testRunner.Then("I verify Query is displayed", ((string)(null)), table27);
#line 291
 testRunner.And("I take a screenshot");
#line 292
 testRunner.And("I click button \"Cancel\"");
#line 293
 testRunner.When("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table28.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table28.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 294
 testRunner.Then("I verify Query is displayed", ((string)(null)), table28);
#line 298
 testRunner.And("I take a screenshot");
#line 299
 testRunner.And("I click button \"Cancel\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table29.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table29.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table29.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 300
 testRunner.When("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table29);
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table30.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table30.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 306
 testRunner.Then("I verify Query is displayed", ((string)(null)), table30);
#line 310
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table31.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 311
 testRunner.And("I enter data in CRF", ((string)(null)), table31);
#line 315
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 316
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 317
 testRunner.And("I save the CRF page");
#line 318
 testRunner.And("I take a screenshot");
#line 319
 testRunner.When("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table32.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table32.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 320
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table32);
#line 324
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table33.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 325
 testRunner.When("I enter data in CRF and save", ((string)(null)), table33);
#line 329
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table34.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table34.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "\'Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medic" +
                            "ations \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 330
 testRunner.Then("I verify Query is displayed", ((string)(null)), table34);
#line 334
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_8_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.2",
                        "ignore"});
#line 341
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 343
 testRunner.And("I navigate to \"Query Management\"");
#line 344
 testRunner.And("I choose \"Edit Check Study 3 (Prod)\" from \"Study\"");
#line 345
 testRunner.And("I choose \"World\" from \"Site Group\"");
#line 346
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 347
 testRunner.And("I choose \"sub{Var(num1)}\" from \"Subject\"");
#line 348
 testRunner.And("I click button \"Advanced Search\"");
#line 349
 testRunner.And("I select Form \"Concomitant Medications\" in \"search result\"");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table35.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table35.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table35.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 350
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table35);
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table36.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table36.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 356
    testRunner.And("I verify Query is displayed", ((string)(null)), table36);
#line 360
 testRunner.And("I take a screenshot");
#line 361
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 362
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 363
 testRunner.And("I save the CRF page");
#line 364
 testRunner.And("I open the last log line");
#line 365
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 366
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table37.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 367
 testRunner.And("I enter data in CRF", ((string)(null)), table37);
#line 371
 testRunner.And("I save the CRF page");
#line 372
 testRunner.And("I take a screenshot");
#line 373
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table38.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table38.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 374
 testRunner.And("I verify Query is displayed", ((string)(null)), table38);
#line 378
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table39.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 379
 testRunner.When("I enter data in CRF and save", ((string)(null)), table39);
#line 383
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table40.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true",
                        "true"});
            table40.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 384
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table40);
#line 388
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table41.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "false",
                        "false"});
            table41.AddRow(new string[] {
                        "Cuurrent Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "false",
                        "false"});
#line 389
 testRunner.And("I verify Query is displayed", ((string)(null)), table41);
#line 393
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.4.1 Migrate Subject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.4.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_4_1MigrateSubject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.4.1 Migrate Subject", new string[] {
                        "release_564_Patch11",
                        "PB_8.4.1",
                        "Validation"});
#line 400
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 402
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num2>(5)}"});
            table42.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 403
 testRunner.And("I create a Subject", ((string)(null)), table42);
#line 407
 testRunner.And("I note down \"crfversion\" to \"ver#\"");
#line 408
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table43.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table43.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 409
 testRunner.And("I enter data in CRF and save", ((string)(null)), table43);
#line 414
 testRunner.When("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table44.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 415
 testRunner.Then("I verify Query is displayed", ((string)(null)), table44);
#line 418
 testRunner.And("I take a screenshot");
#line 419
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 420
 testRunner.And("I save the CRF page");
#line 421
 testRunner.And("I open log line 1");
#line 422
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 423
 testRunner.And("I save the CRF page");
#line 424
 testRunner.And("I take a screenshot");
#line 425
 testRunner.And("I select Site \"AM Edit Site\" in \"Header\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table45.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num3>(5)}"});
            table45.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 426
    testRunner.And("I create a Subject", ((string)(null)), table45);
#line 430
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table46.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table46.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 431
 testRunner.And("I enter data in CRF and save", ((string)(null)), table46);
#line 436
 testRunner.When("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table47.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 437
 testRunner.Then("I verify Query is displayed", ((string)(null)), table47);
#line 440
 testRunner.And("I take a screenshot");
#line 441
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 442
 testRunner.And("I save the CRF page");
#line 443
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Standard 1",
                        "5"});
#line 444
 testRunner.And("I enter data in CRF and save", ((string)(null)), table48);
#line 447
 testRunner.And("I open log line 1");
#line 448
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 449
 testRunner.And("I save the CRF page");
#line 450
 testRunner.And("I take a screenshot");
#line 452
 testRunner.And("I navigate to \"Home\"");
#line 453
 testRunner.And("I navigate to \"Architect\"");
#line 454
 testRunner.And("I select link \"AM Edit Check Study\" in \"Active Projects\"");
#line 455
 testRunner.And("I create Draft \"Draft {RndNum<d#>(5)}\" from Project \"AM Edit Check Study\" and Ver" +
                    "sion \"V1 ({Var(ver#)})\"");
#line 456
 testRunner.And("I navigate to \"Edit Checks\"");
#line 457
 testRunner.And("I inactivate edit check \"Mixed Form Query\"");
#line 458
 testRunner.And("I take a screenshot");
#line 459
 testRunner.And("I select Draft \"Draft {Var(d#)}\" in \"Header\"");
#line 460
 testRunner.And("I publish CRF Version \"Target{RndNum<TV#>(3)}\"");
#line 461
 testRunner.And("I note down \"crfversion\" to \"newversion#\"");
#line 462
 testRunner.And("I select Study \"AM Edit Check Study\" in \"Header\"");
#line 463
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 464
 testRunner.And("I choose \"V1 ({Var(ver#)})\" from \"Source CRF\"");
#line 465
 testRunner.And("I choose \"{Var(newversion#)}\" from \"Target CRF\"");
#line 466
 testRunner.And("I click button \"Create Plan\"");
#line 467
 testRunner.And("I take a screenshot");
#line 468
 testRunner.And("I navigate to \"Execute Plan\"");
#line 469
 testRunner.And("I migrate all Subjects");
#line 470
 testRunner.And("I select link \"Migration Results\"");
#line 471
 testRunner.And("I verify Job Status is set to Complete");
#line 472
 testRunner.And("I take a screenshot");
#line 473
 testRunner.And("I navigate to \"Home\"");
#line 474
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 475
    testRunner.And("I select a Subject \"sub{Var(num2)}\"");
#line 476
 testRunner.And("I select Form \"Mixed Form\"");
#line 477
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 478
 testRunner.When("I enter data in CRF and save", ((string)(null)), table49);
#line 481
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table50.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 482
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table50);
#line 485
 testRunner.And("I take a screenshot");
#line 486
 testRunner.And("I click button \"Cancel\"");
#line 487
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table51.AddRow(new string[] {
                        "Log Field 1",
                        "3"});
            table51.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 488
 testRunner.When("I enter data in CRF and save", ((string)(null)), table51);
#line 492
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table52.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 493
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table52);
#line 496
 testRunner.And("I take a screenshot");
#line 497
 testRunner.And("I select Site \"AM Edit Site\" in \"Header\"");
#line 498
    testRunner.And("I select a Subject \"sub{Var(num3)}\"");
#line 499
 testRunner.And("I select Form \"Mixed Form\"");
#line 500
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table53.AddRow(new string[] {
                        "Standard 1",
                        "8"});
#line 501
 testRunner.When("I enter data in CRF and save", ((string)(null)), table53);
#line 504
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table54.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "true",
                        "true"});
#line 505
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table54);
#line 508
 testRunner.And("I take a screenshot");
#line 509
 testRunner.And("I click button \"Cancel\"");
#line 510
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table55.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
            table55.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 511
 testRunner.When("I enter data in CRF and save", ((string)(null)), table55);
#line 515
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table56.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "true",
                        "true"});
#line 516
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table56);
#line 519
 testRunner.And("I take a screenshot");
#line 520
 testRunner.And("I navigate to \"Home\"");
#line 521
 testRunner.And("I navigate to \"Architect\"");
#line 522
 testRunner.And("I select link \"AM Edit Check Study\" in \"Active Projects\"");
#line 523
 testRunner.And("I select link \"Draft {Var(d#)}\" in \"CRF Drafts\"");
#line 524
 testRunner.And("I navigate to \"Edit Checks\"");
#line 525
 testRunner.And("I activate edit check \"Mixed Form Query\"");
#line 526
 testRunner.And("I select Draft \"Draft {Var(d#)}\" in \"Header\"");
#line 527
 testRunner.And("I publish CRF Version \"Target{RndNum<TV#>(3)}\"");
#line 528
 testRunner.And("I note down \"crfversion\" to \"newversion1#\"");
#line 529
 testRunner.And("I select Study \"AM Edit Check Study\" in \"Header\"");
#line 530
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 531
 testRunner.And("I choose \"{Var(newversion#)}\" from \"Source CRF\"");
#line 532
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Target CRF\"");
#line 533
 testRunner.And("I click button \"Create Plan\"");
#line 534
 testRunner.And("I navigate to \"Execute Plan\"");
#line 535
 testRunner.And("I migrate all Subjects");
#line 536
 testRunner.And("I select link \"Migration Results\"");
#line 537
 testRunner.And("I verify Job Status is set to Complete");
#line 538
 testRunner.And("I take a screenshot");
#line 539
 testRunner.And("I navigate to \"Home\"");
#line 540
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 541
    testRunner.And("I select a Subject \"sub{Var(num2)}\"");
#line 542
 testRunner.And("I select Form \"Mixed Form\"");
#line 543
 testRunner.When("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table57.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 544
 testRunner.Then("I verify Query is displayed", ((string)(null)), table57);
#line 547
 testRunner.And("I take a screenshot");
#line 548
 testRunner.And("I click button \"Cancel\"");
#line 549
 testRunner.When("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table58.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 550
 testRunner.Then("I verify Query is displayed", ((string)(null)), table58);
#line 553
 testRunner.And("I take a screenshot");
#line 554
 testRunner.And("I select Site \"AM Edit Site\" in \"Header\"");
#line 555
    testRunner.And("I select a Subject \"sub{Var(num3)}\"");
#line 556
 testRunner.And("I select Form \"Mixed Form\"");
#line 557
 testRunner.When("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table59.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 558
 testRunner.Then("I verify Query is displayed", ((string)(null)), table59);
#line 561
 testRunner.And("I take a screenshot");
#line 562
 testRunner.And("I click button \"Cancel\"");
#line 563
 testRunner.When("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table60.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 564
 testRunner.Then("I verify Query is displayed", ((string)(null)), table60);
#line 567
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.1 Publish Checks")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.5.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.IgnoreAttribute()]
        public virtual void PB_8_5_1PublishChecks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.1 Publish Checks", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.1",
                        "ignore"});
#line 574
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 576
 testRunner.And("I navigate to \"Architect\"");
#line 577
 testRunner.And("I select link \"AM Edit Check Study\" in \"Active Projects\"");
#line 578
 testRunner.And("I select link \"Draft 1\" in \"CRF Drafts\"");
#line 579
 testRunner.And("I publish CRF Version \"Pub1{RndNum<TV#>(5)}\"");
#line 580
 testRunner.And("I note down \"crfversion\" to \"newversion1#\"");
#line 581
 testRunner.And("I select link \"AM Edit Check Study\" in \"Header\"");
#line 582
 testRunner.And("I push CRF Version \"{Var(newversion1#)}\" to \"All Sites\"");
#line 583
 testRunner.And("I select link \"Draft 1\" in \"CRF Drafts\"");
#line 584
 testRunner.And("I publish CRF Version \"Pub2{RndNum<TV#>(5)}\"");
#line 585
 testRunner.And("I note down \"crfversion\" to \"newversion2#\"");
#line 586
 testRunner.And("I publish CRF Version \"Pub1{RndNum<TV#>(5)}\"");
#line 587
 testRunner.And("I note down \"crfversion\" to \"newversion3#\"");
#line 588
 testRunner.And("I navigate to \"Home\"");
#line 589
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table61.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num4>(5)}"});
            table61.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 590
    testRunner.And("I create a Subject", ((string)(null)), table61);
#line 594
 testRunner.And("I note down \"crfversion\" to \"ver#\"");
#line 595
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table62.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table62.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table62.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 596
 testRunner.And("I enter data in CRF and save", ((string)(null)), table62);
#line 601
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table63.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 602
 testRunner.Then("I verify Query is displayed", ((string)(null)), table63);
#line 605
 testRunner.And("I take a screenshot");
#line 606
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 607
 testRunner.And("I save the CRF page");
#line 608
 testRunner.And("I open the last log line");
#line 609
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 610
 testRunner.And("I save the CRF page");
#line 611
 testRunner.And("I open the last log line");
#line 612
 testRunner.And("I take a screenshot");
#line 613
 testRunner.And("I navigate to \"Home\"");
#line 614
 testRunner.And("I navigate to \"Architect\"");
#line 615
 testRunner.And("I select link \"AM Edit Check Study\" in \"Active Projects\"");
#line 616
 testRunner.And("I select link \"Publish Checks\"");
#line 617
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Current CRF Version\"");
#line 618
 testRunner.And("I choose \"{Var(newversion2#)}\" from \"Reference CRF Version\"");
#line 619
 testRunner.And("I click button \"Create Plan\"");
#line 620
 testRunner.And("I check \"Inactivate\" in \"Mixed Form Query\"");
#line 621
 testRunner.And("I select link \"Save\"");
#line 622
 testRunner.And("I take a screenshot");
#line 623
 testRunner.And("I select link \"Publish\"");
#line 624
 testRunner.And("I accept alert window");
#line 625
 testRunner.And("I select link \"Migration Results\"");
#line 626
 testRunner.And("I verify Job Status is set to Complete");
#line 627
 testRunner.And("I take a screenshot");
#line 628
 testRunner.And("I navigate to \"Home\"");
#line 629
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 630
    testRunner.And("I select a Subject \"sub{Var(num4)}\"");
#line 631
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table64.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 632
 testRunner.And("I enter data in CRF and save", ((string)(null)), table64);
#line 635
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table65.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "true"});
#line 636
 testRunner.And("I verify Query is displayed", ((string)(null)), table65);
#line 639
 testRunner.And("I take a screenshot");
#line 640
 testRunner.And("I navigate to \"Home\"");
#line 641
 testRunner.And("I navigate to \"Architect\"");
#line 642
 testRunner.And("I select link \"AM Edit Check Study\" in \"Active Projects\"");
#line 643
 testRunner.And("I select link \"Publish Checks\"");
#line 644
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Current CRF Version\"");
#line 645
 testRunner.And("I choose \"{Var(newversion3#)}\" from \"Reference CRF Version\"");
#line 646
 testRunner.And("I click button \"Create Plan\"");
#line 647
 testRunner.And("I check \"Publish\" in \"Mixed Form Query\"");
#line 648
 testRunner.And("I select link \"Save\"");
#line 649
 testRunner.And("I take a screenshot");
#line 650
 testRunner.And("I select link \"Publish\"");
#line 651
 testRunner.And("I accept alert window");
#line 652
 testRunner.And("I select link \"Migration Results\"");
#line 653
 testRunner.And("I verify Job Status is set to Complete");
#line 654
 testRunner.And("I take a screenshot");
#line 655
 testRunner.And("I navigate to \"Home\"");
#line 656
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 657
    testRunner.And("I select a Subject \"sub{Var(num4)}\"");
#line 658
 testRunner.And("I select Form \"Mixed Form\"");
#line 659
 testRunner.When("I open the last log line");
#line 660
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 661
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table66.AddRow(new string[] {
                        "Standard 1",
                        "8"});
#line 662
 testRunner.And("I enter data in CRF and save", ((string)(null)), table66);
#line 665
 testRunner.When("I open the last log line");
#line 666
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 667
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 668
 testRunner.And("I save the CRF page");
#line 669
 testRunner.And("I open the last log line");
#line 670
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.6.1 Queries verification on data points with Freeze, Hard lock and Inactive " +
            "records")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.6.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_6_1QueriesVerificationOnDataPointsWithFreezeHardLockAndInactiveRecords()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.6.1 Queries verification on data points with Freeze, Hard lock and Inactive " +
                    "records", new string[] {
                        "release_564_Patch11",
                        "PB_8.6.1",
                        "Validation"});
#line 676
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 678
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table67.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table67.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 679
    testRunner.And("I create a Subject", ((string)(null)), table67);
#line 683
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table68.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table68.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table68.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 684
 testRunner.And("I enter data in CRF and save", ((string)(null)), table68);
#line 689
 testRunner.When("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table69.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 690
 testRunner.Then("I verify Query is displayed", ((string)(null)), table69);
#line 693
 testRunner.And("I take a screenshot");
#line 694
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wered\"");
#line 695
 testRunner.And("I save the CRF page");
#line 696
 testRunner.And("I open the last log line");
#line 697
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table70.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 698
 testRunner.And("I enter data in CRF", ((string)(null)), table70);
#line 701
 testRunner.And("I save the CRF page");
#line 702
 testRunner.And("I open the last log line");
#line 703
 testRunner.And("I take a screenshot");
#line 704
 testRunner.And("I check \"Freeze\" on \"Log Field 1\"");
#line 705
 testRunner.And("I save the CRF page");
#line 706
 testRunner.And("I open the last log line");
#line 707
 testRunner.And("I take a screenshot");
#line 708
 testRunner.And("I click button \"Cancel\"");
#line 709
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table71.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table71.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 710
 testRunner.And("I enter data in CRF and save", ((string)(null)), table71);
#line 714
 testRunner.When("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table72.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 715
 testRunner.Then("I verify Query is displayed", ((string)(null)), table72);
#line 718
 testRunner.And("I take a screenshot");
#line 719
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wered\"");
#line 720
 testRunner.And("I save the CRF page");
#line 721
 testRunner.And("I open the last log line");
#line 722
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table73.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 723
 testRunner.And("I enter data in CRF", ((string)(null)), table73);
#line 726
 testRunner.And("I save the CRF page");
#line 727
 testRunner.And("I open the last log line");
#line 728
 testRunner.And("I take a screenshot");
#line 729
 testRunner.And("I check \"Hard Lock\" on \"Log Field 1\"");
#line 730
 testRunner.And("I save the CRF page");
#line 731
 testRunner.And("I open the last log line");
#line 732
 testRunner.And("I take a screenshot");
#line 733
 testRunner.And("I click button \"Cancel\"");
#line 734
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table74.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table74.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 735
 testRunner.And("I enter data in CRF and save", ((string)(null)), table74);
#line 739
 testRunner.When("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table75.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 740
 testRunner.Then("I verify Query is displayed", ((string)(null)), table75);
#line 743
 testRunner.And("I take a screenshot");
#line 744
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wered\"");
#line 745
 testRunner.And("I save the CRF page");
#line 746
 testRunner.And("I open the last log line");
#line 747
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table76.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 748
 testRunner.And("I enter data in CRF", ((string)(null)), table76);
#line 751
 testRunner.And("I save the CRF page");
#line 752
 testRunner.And("I open the last log line");
#line 753
 testRunner.And("I take a screenshot");
#line 754
 testRunner.And("I click button \"Cancel\"");
#line 755
 testRunner.And("I select link \"Inactivate\"");
#line 756
 testRunner.And("I choose \"3\" from \"Inactivate\"");
#line 757
 testRunner.And("I click button \"Inactivate\"");
#line 758
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table77.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 759
 testRunner.When("I enter data in CRF and save", ((string)(null)), table77);
#line 762
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table78.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 763
 testRunner.Then("I verify Query is displayed", ((string)(null)), table78);
#line 766
 testRunner.And("I take a screenshot");
#line 767
 testRunner.And("I click button \"Cancel\"");
#line 768
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table79.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 769
 testRunner.And("I verify Query is not displayed", ((string)(null)), table79);
#line 772
 testRunner.And("I take a screenshot");
#line 773
 testRunner.And("I click button \"Cancel\"");
#line 774
 testRunner.And("I select link \"Reactivate\"");
#line 775
 testRunner.And("I choose \"3\" from \"Reactivate\"");
#line 776
 testRunner.And("I click button \"Reactivate\"");
#line 777
 testRunner.And("I take a screenshot");
#line 778
 testRunner.And("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table80.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 779
 testRunner.And("I verify Query is displayed", ((string)(null)), table80);
#line 782
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
