// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.235
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.Features.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _564QueryRefiringLogic8Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic8.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "564QueryRefiringLogic8", "As a Rave user\r\nI want to change data\r\nSo I can see refired queries", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "564QueryRefiringLogic8")))
            {
                Medidata.RBT.Features.Rave.Features.EDC._564QueryRefiringLogic8Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 14
#line 16
    testRunner.Given("I am logged in to Rave with username \"defuser\" and password \"password\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.1 As an EDC user, Data setup and verification for query re-firing. Folder " +
            "\"Screening\" enter and save data on forms \"Informed Consent\" and \"Concomitant Med" +
            "ications\"")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.1.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_1_1AsAnEDCUserDataSetupAndVerificationForQueryRe_Firing_FolderScreeningEnterAndSaveDataOnFormsInformedConsentAndConcomitantMedications()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.1 As an EDC user, Data setup and verification for query re-firing. Folder " +
                    "\"Screening\" enter and save data on forms \"Informed Consent\" and \"Concomitant Med" +
                    "ications\"", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.1",
                        "Validation"});
#line 39
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 41
 testRunner.And("I navigate to \"DDE\"");
#line 42
 testRunner.And("I select \"First Pass\"");
#line 43
 testRunner.And("I select \"New Batch\"");
#line 44
 testRunner.And("I choose \"Edit Check Study 3\" from \"Study\"");
#line 45
 testRunner.And("I choose \"Prod\" from \"Environment\"");
#line 46
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 47
 testRunner.And("I type \"sub {RndNum<num1>(5)}\" in \"Subject\"");
#line 48
 testRunner.And("I choose \"Subject Identification\" from \"Form\"");
#line 49
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table1.AddRow(new string[] {
                        "Subject Number",
                        "{Var(num1)}"});
            table1.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 50
 testRunner.And("I enter data in DDE and save", ((string)(null)), table1);
#line 54
 testRunner.And("I choose \"Screening\" from \"Folder\"");
#line 55
 testRunner.And("I choose \"Informed Consent\" from \"Form\"");
#line 56
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table2.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 57
 testRunner.And("I enter data in DDE and save", ((string)(null)), table2);
#line 63
 testRunner.And("I choose \"Concomitant Medications\" from \"Form\"");
#line 64
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table3.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 65
 testRunner.And("I enter data in DDE log line 1 and save", ((string)(null)), table3);
#line 72
 testRunner.And("I am logged in to Rave with username \"Defuser01\" and password \"password\"");
#line 73
 testRunner.And("I navigate to \"DDE\"");
#line 74
 testRunner.And("I select \"Second Pass\"");
#line 75
 testRunner.And("I choose \"Edit Check Study 3\" from \"Study\"");
#line 76
 testRunner.And("I choose \"Prod\" from \"Environment\"");
#line 77
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 78
 testRunner.And("I choose \"sub {Var(num1)}\" from \"Subject\"");
#line 79
 testRunner.And("I choose \"Subject Identification\" from \"Form\"");
#line 80
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Subject Number",
                        "{Var(num1)}"});
            table4.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 81
 testRunner.And("I enter data in DDE and save", ((string)(null)), table4);
#line 85
 testRunner.And("I choose \"Screening\" from \"Folder\"");
#line 86
 testRunner.And("I choose \"Informed Consent\" from \"Form\"");
#line 87
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Date Informed Consent Signed",
                        "09 Jan 2000"});
            table5.AddRow(new string[] {
                        "End Date",
                        "10 Jan 2000"});
            table5.AddRow(new string[] {
                        "Original Distribution Number",
                        "10"});
            table5.AddRow(new string[] {
                        "Current Distribution Number",
                        "19"});
#line 88
 testRunner.And("I enter data in DDE and save", ((string)(null)), table5);
#line 94
 testRunner.And("I choose \"Concomitant Medications\" from \"Form\"");
#line 95
 testRunner.And("I click button \"Locate\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table6.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table6.AddRow(new string[] {
                        "End Date",
                        "11 Jan 2000"});
            table6.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table6.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 96
 testRunner.And("I enter data in DDE log line 1 and save", ((string)(null)), table6);
#line 103
 testRunner.And("I navigate to \"Home\"");
#line 104
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 105
 testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 106
 testRunner.When("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line 107
 testRunner.And("I open log line 1");
#line 108
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 109
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 110
 testRunner.And("I take a screenshot");
#line 111
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 112
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 113
 testRunner.And("I save the CRF page");
#line 114
 testRunner.And("I open log line 1");
#line 115
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 116
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line 117
 testRunner.And("I save the CRF page");
#line 118
 testRunner.And("I take a screenshot");
#line 119
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table7.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 120
 testRunner.And("I enter data in CRF and save", ((string)(null)), table7);
#line 124
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Message",
                        "Closed"});
            table8.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' is greater. Please revise.",
                        "true"});
            table8.AddRow(new string[] {
                        "Current Axis Number",
                        "Informed Consent \'Current Distribution Number\' is not equal to Concomitant Medica" +
                            "tions \'Current Axis Number\'.",
                        "true"});
#line 125
 testRunner.And("I verify Query is not displayed", ((string)(null)), table8);
#line 129
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Start Date",
                        "08 Jan 2000"});
            table9.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 130
 testRunner.When("I enter data in CRF and save", ((string)(null)), table9);
#line 134
 testRunner.And("I open log line 1");
#line 135
 testRunner.Then("I verify closed Query with message \"\'Date Informed Consent Signed\' is greater. Pl" +
                    "ease revise.\" is displayed on Field \"Start Date\"");
#line 136
 testRunner.And("I verify closed Query with message \"Informed Consent \'Current Distribution Number" +
                    "\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is displayed o" +
                    "n Field \"Current Axis Number\"");
#line 138
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.1.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_1_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.2", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.2",
                        "Validation"});
#line 144
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 146
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 147
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 148
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table10.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table10.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table10.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table10.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 149
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table10);
#line 155
 testRunner.And("I open log line 2");
#line 156
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 157
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 158
 testRunner.And("I take a screenshot");
#line 159
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 160
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 161
 testRunner.And("I save the CRF page");
#line 162
 testRunner.And("I open log line 2");
#line 163
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 164
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table11.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 165
 testRunner.And("I enter data in CRF", ((string)(null)), table11);
#line 169
 testRunner.And("I save the CRF page");
#line 170
 testRunner.And("I take a screenshot");
#line 171
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Closed"});
            table12.AddRow(new string[] {
                        "Start Date",
                        "false"});
#line 172
 testRunner.And("I verify Query is not displayed", ((string)(null)), table12);
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Closed"});
            table13.AddRow(new string[] {
                        "Current Axis Number",
                        "true"});
#line 175
 testRunner.And("I verify Query is displayed", ((string)(null)), table13);
#line 179
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table14.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table14.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 180
 testRunner.When("I enter data in CRF and save", ((string)(null)), table14);
#line 184
 testRunner.And("I open log line 2");
#line 185
 testRunner.Then("I verify Query with message \"\'Date Informed Consent Signed\' is greater. Please re" +
                    "vise.\" is displayed on Field \"Start Date\"");
#line 186
 testRunner.And("I verify Query with message \"Informed Consent \'Current Distribution Number\' is no" +
                    "t equal to Concomitant Medications \'Current Axis Number\'.\" is displayed on Field" +
                    " \"Current Axis Number\"");
#line 187
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.1.3")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_1_3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.1.3", new string[] {
                        "release_564_Patch11",
                        "PB_8.1.3",
                        "Validation"});
#line 193
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 195
    testRunner.Given("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 196
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 197
 testRunner.And("I select Form \"Concomitant Medications\" in Folder \"Screening\"");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table15.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table15.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table15.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table15.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 198
 testRunner.And("I enter data in CRF on a new log line and save", ((string)(null)), table15);
#line 204
 testRunner.And("I open log line 3");
#line 205
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 206
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 207
 testRunner.And("I take a screenshot");
#line 208
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 209
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table16.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table16.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 210
 testRunner.And("I enter data in CRF", ((string)(null)), table16);
#line 214
 testRunner.And("I save the CRF page");
#line 215
 testRunner.And("I take a screenshot");
#line 216
 testRunner.And("I open log line 3");
#line 217
 testRunner.And("I verify Field \"Start Date\" has no Query");
#line 218
 testRunner.And("I verify Field \"Current Axis Number\" has no Query");
#line 219
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table17.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table17.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 220
 testRunner.When("I enter data in CRF and save", ((string)(null)), table17);
#line 224
 testRunner.And("I open log line 3");
#line 225
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 226
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 227
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.2.1 Task Summary")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.2.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_2_1TaskSummary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.2.1 Task Summary", new string[] {
                        "release_564_Patch11",
                        "PB_8.2.1",
                        "Validation"});
#line 233
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 235
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 8\"");
#line 236
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 237
 testRunner.When("I expand \"Open Queries\" in Task Summary");
#line 238
 testRunner.Then("I should see \"Screening-Concomitant Medications\" in \"Open Queries\"");
#line 239
 testRunner.And("I select \"Screening-Concomitant Medications\" in \"Open Queries\"");
#line 240
 testRunner.And("I open log line 3");
#line 241
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 242
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 243
 testRunner.And("I take a screenshot");
#line 244
 testRunner.And("I select Study \"Edit Check Site 8\" in \"Header\"");
#line 245
    testRunner.And("I select a Subject \"sub{Var(num1)}\"");
#line 246
 testRunner.When("I expand \"Cancel Queries\" in Task Summary");
#line 247
 testRunner.Then("I should see \"Screening-Concomitant Medications\" in \"Cancel Queries\"");
#line 248
 testRunner.And("I select \"Screening-Concomitant Medications\" in \"Cancel Queries\"");
#line 249
 testRunner.And("I open log line 3");
#line 250
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 251
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 252
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.1 Query Management")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.3.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_3_1QueryManagement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.1 Query Management", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.1",
                        "Validation"});
#line 258
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 260
 testRunner.And("I navigate to \"Query Management\"");
#line 261
 testRunner.And("I choose \"Edit Check Study 3 (Prod)\" from \"Study\"");
#line 262
 testRunner.And("I choose \"World\" from \"Site Group\"");
#line 263
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 264
 testRunner.And("I choose \"sub{Var(num1)}\" from \"Subject\"");
#line 265
 testRunner.And("I click button \"Advanced Search\"");
#line 266
 testRunner.And("I select Form \"Concomitant Medications\" in \"Search Result\"");
#line 267
 testRunner.And("I open log line 2");
#line 268
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 269
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 270
 testRunner.And("I take a screenshot");
#line 271
 testRunner.And("I open log line 3");
#line 272
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 273
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 274
 testRunner.And("I take a screenshot");
#line 275
 testRunner.And("I click button \"Cancel\"");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table18.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table18.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table18.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table18.AddRow(new string[] {
                        "Current Axis Number",
                        "20"});
#line 276
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table18);
#line 282
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 283
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 284
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table19.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table19.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 285
 testRunner.And("I enter data in CRF", ((string)(null)), table19);
#line 289
 testRunner.And("I cancel the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\"");
#line 290
 testRunner.And("I cancel the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    "");
#line 291
 testRunner.And("I save the CRF page");
#line 292
 testRunner.And("I take a screenshot");
#line 293
 testRunner.And("I open the last log line");
#line 294
 testRunner.And("I verify Field \"Start Date\" has no Query");
#line 295
 testRunner.And("I verify Field \"Current Axis Number\" has no Query");
#line 296
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table20.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table20.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 297
 testRunner.When("I enter data in CRF and save", ((string)(null)), table20);
#line 301
 testRunner.And("I open the last log line");
#line 302
 testRunner.Then("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 303
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 304
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.3.2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_3_2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.3.2", new string[] {
                        "release_564_Patch11",
                        "PB_8.3.2",
                        "Validation"});
#line 310
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 312
 testRunner.And("I navigate to \"Query Management\"");
#line 313
 testRunner.And("I choose \"Edit Check Study 3 (Prod)\" from \"Study\"");
#line 314
 testRunner.And("I choose \"World\" from \"Site Group\"");
#line 315
 testRunner.And("I choose \"Edit Check Site 8\" from \"Site\"");
#line 316
 testRunner.And("I choose \"sub{Var(num1)}\" from \"Subject\"");
#line 317
 testRunner.And("I click button \"Advanced Search\"");
#line 318
 testRunner.And("I select Form \"Concomitant Medications\" in \"search result\"");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table21.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table21.AddRow(new string[] {
                        "End Date",
                        "12 Jan 2000"});
            table21.AddRow(new string[] {
                        "Original Axis Number",
                        "10"});
            table21.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 319
 testRunner.And("I enter data in CRF on a new log line and save and reopen", ((string)(null)), table21);
#line 325
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 326
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 327
 testRunner.And("I take a screenshot");
#line 328
 testRunner.And("I answer the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on" +
                    " Field \"Start Date\" with \"{answer}\"");
#line 329
 testRunner.And("I answer the Query \"Informed Consent \'Current Distribution Number\' is not equal t" +
                    "o Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"" +
                    " with \"{answer}\"");
#line 330
 testRunner.And("I save the CRF page");
#line 331
 testRunner.And("I open the last log line");
#line 332
 testRunner.And("I close the Query \"\'Date Informed Consent Signed\' is greater. Please revise.\" on " +
                    "Field \"Start Date\"");
#line 333
 testRunner.And("I close the Query \"Informed Consent \'Current Distribution Number\' is not equal to" +
                    " Concomitant Medications \'Current Axis Number\'.\" on Field \"Current Axis Number\"");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table22.AddRow(new string[] {
                        "Start Date",
                        "09 Jan 2000"});
            table22.AddRow(new string[] {
                        "Current Axis Number",
                        "19"});
#line 334
 testRunner.And("I enter data in CRF", ((string)(null)), table22);
#line 338
 testRunner.And("I save the CRF page");
#line 339
 testRunner.And("I take a screenshot");
#line 340
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table23.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "true",
                        "true"});
#line 341
 testRunner.And("I verify Query is not displayed", ((string)(null)), table23);
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table24.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 344
 testRunner.And("I verify Query is not displayed", ((string)(null)), table24);
#line 347
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table25.AddRow(new string[] {
                        "Start Date",
                        "07 Jan 2000"});
            table25.AddRow(new string[] {
                        "Current Axis Number",
                        "18"});
#line 348
 testRunner.When("I enter data in CRF and save", ((string)(null)), table25);
#line 352
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table26.AddRow(new string[] {
                        "Start Date",
                        "\'Date Informed Consent Signed\' can not be greater than.",
                        "true",
                        "true"});
#line 353
 testRunner.Then("I verify Query is not displayed", ((string)(null)), table26);
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table27.AddRow(new string[] {
                        "Current Axis Number",
                        "\'Current Distribution Number\' is not equal \'Current Axis Number\'.",
                        "true",
                        "true"});
#line 356
 testRunner.And("I verify Query is not displayed", ((string)(null)), table27);
#line 359
 testRunner.And("I verify Requires Response Query with message \"\'Date Informed Consent Signed\' is " +
                    "greater. Please revise.\" is displayed on Field \"Start Date\"");
#line 360
 testRunner.And("I verify Requires Response Query with message \"Informed Consent \'Current Distribu" +
                    "tion Number\' is not equal to Concomitant Medications \'Current Axis Number\'.\" is " +
                    "displayed on Field \"Current Axis Number\"");
#line 361
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.4.1 Migrate Subject")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.4.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_4_1MigrateSubject()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.4.1 Migrate Subject", new string[] {
                        "release_564_Patch11",
                        "PB_8.4.1",
                        "Validation"});
#line 367
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 369
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table28.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num2>(5)}"});
            table28.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 370
 testRunner.And("I create a Subject", ((string)(null)), table28);
#line 374
 testRunner.And("I note down \"crfversion\" to \"ver#\"");
#line 375
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table29.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table29.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table29.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 376
 testRunner.And("I enter data in CRF and save", ((string)(null)), table29);
#line 381
 testRunner.And("I open log line 1");
#line 382
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 383
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 384
 testRunner.And("I save the CRF page");
#line 385
 testRunner.And("I open log line 1");
#line 386
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 387
 testRunner.And("I save the CRF page");
#line 388
 testRunner.And("I take a screenshot");
#line 389
 testRunner.And("I select Site \"AM Edit Site\" in \"Header\"");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table30.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num3>(5)}"});
            table30.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 390
    testRunner.And("I create a Subject", ((string)(null)), table30);
#line 394
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table31.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table31.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table31.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 395
 testRunner.And("I enter data in CRF and save", ((string)(null)), table31);
#line 400
 testRunner.And("I open log line 1");
#line 401
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 402
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 403
 testRunner.And("I save the CRF page");
#line 404
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table32.AddRow(new string[] {
                        "Standard 1",
                        "5"});
#line 405
 testRunner.And("I enter data in CRF and save", ((string)(null)), table32);
#line 408
 testRunner.And("I open log line 1");
#line 409
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 410
 testRunner.And("I save the CRF page");
#line 411
 testRunner.And("I take a screenshot");
#line 412
 testRunner.And("I navigate to \"Home\"");
#line 413
 testRunner.And("I navigate to \"Architect\"");
#line 414
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 415
 testRunner.And("I create Draft \"Draft {RndNum<d#>(5)}\" from Project \"AM Edit Check Study\" and Ver" +
                    "sion \"V1 ({Var(ver#)})\"");
#line 416
 testRunner.And("I navigate to \"Edit Checks\"");
#line 417
 testRunner.And("I inactivate edit check \"Mixed Form Query\"");
#line 418
 testRunner.And("I take a screenshot");
#line 419
 testRunner.And("I select Draft \"Draft {Var(d#)}\" in \"Header\"");
#line 420
 testRunner.And("I publish CRF Version \"Target{RndNum<TV#>(3)}\"");
#line 421
 testRunner.And("I note down \"crfversion\" to \"newversion#\"");
#line 422
 testRunner.And("I select Study \"AM Edit Check Study\" in \"Header\"");
#line 423
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 424
 testRunner.And("I choose \"V1 ({Var(ver#)})\" from \"Source CRF\"");
#line 425
 testRunner.And("I choose \"{Var(newversion#)}\" from \"Target CRF\"");
#line 426
 testRunner.And("I click button \"Create Plan\"");
#line 427
 testRunner.And("I take a screenshot");
#line 428
 testRunner.And("I navigate to \"Execute Plan\"");
#line 429
 testRunner.And("I migrate all Subjects");
#line 430
 testRunner.And("I select \"Migration Results\"");
#line 431
 testRunner.And("I verify Job Status is set to Complete");
#line 432
 testRunner.And("I take a screenshot");
#line 433
 testRunner.And("I navigate to \"Home\"");
#line 434
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 435
    testRunner.And("I select a Subject \"sub{Var(num2)}\"");
#line 436
 testRunner.And("I select Form \"Mixed Form\"");
#line 437
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table33.AddRow(new string[] {
                        "Log Field 1",
                        "4"});
#line 438
 testRunner.When("I enter data in CRF and save", ((string)(null)), table33);
#line 441
 testRunner.And("I open the last log line");
#line 442
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is not displayed on Fie" +
                    "ld \"Log Field 1\"");
#line 443
 testRunner.And("I take a screenshot");
#line 444
 testRunner.And("I click button \"Cancel\"");
#line 445
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table34.AddRow(new string[] {
                        "Log Field 1",
                        "3"});
            table34.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 446
 testRunner.And("I enter data in CRF and save", ((string)(null)), table34);
#line 450
 testRunner.And("I open the last log line");
#line 451
 testRunner.And("I verify Query with message \"Query Opened on Log Field 1\" is not displayed on Fie" +
                    "ld \"Log Field 1\"");
#line 452
 testRunner.And("I take a screenshot");
#line 453
 testRunner.And("I select Site \"AM Edit Site\" in \"Header\"");
#line 454
    testRunner.And("I select a Subject \"sub{Var(num3)}\"");
#line 455
 testRunner.And("I select Form \"Mixed Form\"");
#line 456
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table35.AddRow(new string[] {
                        "Standard 1",
                        "8"});
#line 457
 testRunner.When("I enter data in CRF and save", ((string)(null)), table35);
#line 460
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table36.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "true",
                        "true"});
#line 461
 testRunner.Then("I verify Query is displayed", ((string)(null)), table36);
#line 464
 testRunner.And("I take a screenshot");
#line 465
 testRunner.And("I click button \"Cancel\"");
#line 466
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table37.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
            table37.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 467
 testRunner.When("I enter data in CRF and save", ((string)(null)), table37);
#line 471
 testRunner.And("I open the last log line");
#line 472
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is not displayed on Fie" +
                    "ld \"Log Field 1\"");
#line 473
 testRunner.And("I take a screenshot");
#line 474
 testRunner.And("I navigate to \"Home\"");
#line 475
 testRunner.And("I navigate to \"Architect\"");
#line 476
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 477
 testRunner.And("I select \"Draft {Var(d#)}\" in \"CRF Drafts\"");
#line 478
 testRunner.And("I navigate to \"Edit Checks\"");
#line 479
 testRunner.And("I activate edit check \"Mixed Form Query\"");
#line 480
 testRunner.And("I select Draft \"Draft {Var(d#)}\" in \"Header\"");
#line 481
 testRunner.And("I publish CRF Version \"Target{RndNum<TV#>(3)}\"");
#line 482
 testRunner.And("I note down \"crfversion\" to \"newversion1#\"");
#line 483
 testRunner.And("I select Study \"AM Edit Check Study\" in \"Header\"");
#line 484
 testRunner.And("I navigate to \"Amendment Manager\"");
#line 485
 testRunner.And("I choose \"{Var(newversion#)}\" from \"Source CRF\"");
#line 486
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Target CRF\"");
#line 487
 testRunner.And("I click button \"Create Plan\"");
#line 488
 testRunner.And("I navigate to \"Execute Plan\"");
#line 489
 testRunner.And("I migrate all Subjects");
#line 490
 testRunner.And("I select \"Migration Results\"");
#line 491
 testRunner.And("I verify Job Status is set to Complete");
#line 492
 testRunner.And("I take a screenshot");
#line 493
 testRunner.And("I navigate to \"Home\"");
#line 494
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 495
    testRunner.And("I select a Subject \"sub{Var(num2)}\"");
#line 496
 testRunner.And("I select Form \"Mixed Form\"");
#line 497
 testRunner.When("I open log line 1");
#line 498
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 499
 testRunner.And("I take a screenshot");
#line 500
 testRunner.And("I click button \"Cancel\"");
#line 501
 testRunner.When("I open log line 2");
#line 502
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 503
 testRunner.And("I take a screenshot");
#line 504
 testRunner.And("I select Site \"AM Edit Site\" in \"Header\"");
#line 505
    testRunner.And("I select a Subject \"sub{Var(num3)}\"");
#line 506
 testRunner.And("I select Form \"Mixed Form\"");
#line 507
 testRunner.When("I open log line 1");
#line 508
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 509
 testRunner.And("I take a screenshot");
#line 510
 testRunner.And("I click button \"Cancel\"");
#line 511
 testRunner.When("I open log line 2");
#line 512
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 513
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.5.1 Publish Checks")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.5.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_5_1PublishChecks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.5.1 Publish Checks", new string[] {
                        "release_564_Patch11",
                        "PB_8.5.1",
                        "Validation"});
#line 519
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 521
 testRunner.And("I navigate to \"Architect\"");
#line 522
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 523
 testRunner.And("I select \"Draft 1\" in \"CRF Drafts\"");
#line 524
 testRunner.And("I publish CRF Version \"Pub1{RndNum<TV#>(5)}\"");
#line 525
 testRunner.And("I note down \"crfversion\" to \"newversion1#\"");
#line 526
 testRunner.And("I select \"AM Edit Check Study\" in \"Header\"");
#line 527
 testRunner.And("I push CRF Version \"{Var(newversion1#)}\" to \"All Sites\"");
#line 528
 testRunner.And("I select \"Draft 1\" in \"CRF Drafts\"");
#line 529
 testRunner.And("I publish CRF Version \"Pub2{RndNum<TV#>(5)}\"");
#line 530
 testRunner.And("I note down \"crfversion\" to \"newversion2#\"");
#line 531
 testRunner.And("I publish CRF Version \"Pub1{RndNum<TV#>(5)}\"");
#line 532
 testRunner.And("I note down \"crfversion\" to \"newversion3#\"");
#line 533
 testRunner.And("I navigate to \"Home\"");
#line 534
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table38.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num4>(5)}"});
            table38.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 535
    testRunner.And("I create a Subject", ((string)(null)), table38);
#line 540
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table39.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table39.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table39.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 541
 testRunner.And("I enter data in CRF and save", ((string)(null)), table39);
#line 546
 testRunner.And("I open the last log line");
#line 547
 testRunner.And("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 548
 testRunner.And("I take a screenshot");
#line 549
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 550
 testRunner.And("I save the CRF page");
#line 551
 testRunner.And("I open the last log line");
#line 552
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line 553
 testRunner.And("I save the CRF page");
#line 554
 testRunner.And("I open the last log line");
#line 555
 testRunner.And("I take a screenshot");
#line 556
 testRunner.And("I navigate to \"Home\"");
#line 557
 testRunner.And("I navigate to \"Architect\"");
#line 558
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 559
 testRunner.And("I select \"Publish Checks\"");
#line 560
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Current CRF Version\"");
#line 561
 testRunner.And("I choose \"{Var(newversion2#)}\" from \"Reference CRF Version\"");
#line 562
 testRunner.And("I click button \"Create Plan\"");
#line 563
 testRunner.And("I check \"Inactivate\" in \"Mixed Form Query\"");
#line 564
 testRunner.And("I select \"Save\"");
#line 565
 testRunner.And("I take a screenshot");
#line 566
 testRunner.And("I select \"Publish\"");
#line 567
 testRunner.And("I accept alert window");
#line 568
 testRunner.And("I select \"Migration Results\"");
#line 569
 testRunner.And("I verify Job Status is set to Complete");
#line 570
 testRunner.And("I take a screenshot");
#line 571
 testRunner.And("I navigate to \"Home\"");
#line 572
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 573
    testRunner.And("I select a Subject \"sub{Var(num4)}\"");
#line 574
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table40.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 575
 testRunner.And("I enter data in CRF and save", ((string)(null)), table40);
#line 578
 testRunner.And("I open the last log line");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Closed"});
            table41.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "true"});
#line 579
 testRunner.And("I verify Query is displayed", ((string)(null)), table41);
#line 582
 testRunner.And("I take a screenshot");
#line 583
 testRunner.And("I navigate to \"Home\"");
#line 584
 testRunner.And("I navigate to \"Architect\"");
#line 585
 testRunner.And("I select \"AM Edit Check Study\" in \"Active Projects\"");
#line 586
 testRunner.And("I select \"Publish Checks\"");
#line 587
 testRunner.And("I choose \"{Var(newversion1#)}\" from \"Current CRF Version\"");
#line 588
 testRunner.And("I choose \"{Var(newversion3#)}\" from \"Reference CRF Version\"");
#line 589
 testRunner.And("I click button \"Create Plan\"");
#line 590
 testRunner.And("I check \"Publish\" in \"Mixed Form Query\"");
#line 591
 testRunner.And("I select \"Save\"");
#line 592
 testRunner.And("I take a screenshot");
#line 593
 testRunner.And("I select \"Publish\"");
#line 594
 testRunner.And("I accept alert window");
#line 595
 testRunner.And("I select \"Migration Results\"");
#line 596
 testRunner.And("I verify Job Status is set to Complete");
#line 597
 testRunner.And("I take a screenshot");
#line 598
 testRunner.And("I navigate to \"Home\"");
#line 599
 testRunner.And("I select Study \"AM Edit Check Study\" and Site \"AM Edit Site\"");
#line 600
    testRunner.And("I select a Subject \"sub{Var(num4)}\"");
#line 601
 testRunner.And("I select Form \"Mixed Form\"");
#line 602
 testRunner.When("I open the last log line");
#line 603
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 604
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table42.AddRow(new string[] {
                        "Standard 1",
                        "8"});
#line 605
 testRunner.And("I enter data in CRF and save", ((string)(null)), table42);
#line 608
 testRunner.When("I open the last log line");
#line 609
 testRunner.Then("I verify Query with message \"Query Opened on Log Field 1\" is displayed on Field \"" +
                    "Log Field 1\"");
#line 610
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wer query\"");
#line 611
 testRunner.And("I save the CRF page");
#line 612
 testRunner.And("I open the last log line");
#line 613
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("PB_8.6.1 Queries verification on data points with Freeze, Hard lock and Inactive " +
            "records")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "564QueryRefiringLogic8")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("release_564_Patch11")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("PB_8.6.1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCategoryAttribute("Validation")]
        public virtual void PB_8_6_1QueriesVerificationOnDataPointsWithFreezeHardLockAndInactiveRecords()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("PB_8.6.1 Queries verification on data points with Freeze, Hard lock and Inactive " +
                    "records", new string[] {
                        "release_564_Patch11",
                        "PB_8.6.1",
                        "Validation"});
#line 619
this.ScenarioSetup(scenarioInfo);
#line 14
this.FeatureBackground();
#line 621
 testRunner.And("I select Study \"Edit Check Study 3\" and Site \"Edit Check Site 1\"");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table43.AddRow(new string[] {
                        "Subject Number",
                        "{RndNum<num1>(5)}"});
            table43.AddRow(new string[] {
                        "Subject Initials",
                        "sub"});
#line 622
    testRunner.And("I create a Subject", ((string)(null)), table43);
#line 626
 testRunner.And("I select Form \"Mixed Form\"");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table44.AddRow(new string[] {
                        "Standard 1",
                        "6"});
            table44.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table44.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 627
 testRunner.And("I enter data in CRF and save", ((string)(null)), table44);
#line 632
 testRunner.And("I open the last log line");
#line 633
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 634
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wered\"");
#line 635
 testRunner.And("I save the CRF page");
#line 636
 testRunner.And("I open the last log line");
#line 637
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table45.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 638
 testRunner.And("I enter data in CRF", ((string)(null)), table45);
#line 641
 testRunner.And("I save the CRF page");
#line 642
 testRunner.And("I open the last log line");
#line 643
 testRunner.And("I take a screenshot");
#line 644
 testRunner.And("I check \"Freeze\" on \"Log Field 1\"");
#line 645
 testRunner.And("I save the CRF page");
#line 646
 testRunner.And("I open the last log line");
#line 647
 testRunner.And("I take a screenshot");
#line 649
 testRunner.And("I click button \"Cancel\"");
#line 650
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table46.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table46.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 651
 testRunner.And("I enter data in CRF and save", ((string)(null)), table46);
#line 655
 testRunner.And("I open the last log line");
#line 656
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 657
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wered\"");
#line 658
 testRunner.And("I save the CRF page");
#line 659
 testRunner.And("I open the last log line");
#line 660
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table47.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 661
 testRunner.And("I enter data in CRF", ((string)(null)), table47);
#line 664
 testRunner.And("I save the CRF page");
#line 665
 testRunner.And("I open the last log line");
#line 666
 testRunner.And("I take a screenshot");
#line 667
 testRunner.And("I check \"Hard Lock\" on \"Log Field 1\"");
#line 668
 testRunner.And("I save the CRF page");
#line 669
 testRunner.And("I open the last log line");
#line 670
 testRunner.And("I take a screenshot");
#line 672
 testRunner.And("I click button \"Cancel\"");
#line 673
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table48.AddRow(new string[] {
                        "Log Field 1",
                        "5"});
            table48.AddRow(new string[] {
                        "Log Field 2",
                        "2"});
#line 674
 testRunner.And("I enter data in CRF and save", ((string)(null)), table48);
#line 678
 testRunner.And("I open the last log line");
#line 679
 testRunner.And("I verify Requires Response Query with message \"Query Opened on Log Field 1\" is di" +
                    "splayed on Field \"Log Field 1\"");
#line 680
 testRunner.And("I answer the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\" with \"ans" +
                    "wered\"");
#line 681
 testRunner.And("I save the CRF page");
#line 682
 testRunner.And("I open the last log line");
#line 683
 testRunner.And("I close the Query \"Query Opened on Log Field 1\" on Field \"Log Field 1\"");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table49.AddRow(new string[] {
                        "Log Field 1",
                        "6"});
#line 684
 testRunner.And("I enter data in CRF", ((string)(null)), table49);
#line 687
 testRunner.And("I save the CRF page");
#line 688
 testRunner.And("I open the last log line");
#line 689
 testRunner.And("I take a screenshot");
#line 690
 testRunner.And("I click button \"Cancel\"");
#line 691
 testRunner.And("I select \"Inactivate\"");
#line 692
 testRunner.And("I choose \"3\" from \"Inactivate\"");
#line 693
 testRunner.And("I click button \"Inactivate\"");
#line 694
 testRunner.And("I take a screenshot");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table50.AddRow(new string[] {
                        "Standard 1",
                        "7"});
#line 696
 testRunner.When("I enter data in CRF and save", ((string)(null)), table50);
#line 699
 testRunner.And("I open log line 1");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table51.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 700
 testRunner.Then("I verify Query is displayed", ((string)(null)), table51);
#line 703
 testRunner.And("I take a screenshot");
#line 704
 testRunner.And("I click button \"Cancel\"");
#line 705
 testRunner.And("I open log line 2");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table52.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 706
 testRunner.And("I verify Query is not displayed", ((string)(null)), table52);
#line 709
 testRunner.And("I take a screenshot");
#line 710
 testRunner.And("I click button \"Cancel\"");
#line 711
 testRunner.And("I select \"Reactivate\"");
#line 712
 testRunner.And("I choose \"3\" from \"Reactivate\"");
#line 713
 testRunner.And("I click button \"Reactivate\"");
#line 714
 testRunner.And("I take a screenshot");
#line 715
 testRunner.And("I open log line 3");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Query Message",
                        "Answered",
                        "Closed"});
            table53.AddRow(new string[] {
                        "Log Field 1",
                        "Query Opened on Log Field 1",
                        "false",
                        "false"});
#line 716
 testRunner.And("I verify Query is displayed", ((string)(null)), table53);
#line 719
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
