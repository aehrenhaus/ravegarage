// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.431
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.RBT.Features.Rave.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class _3Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic3.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "3", "", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "3")))
            {
                Medidata.RBT.Features.Rave.EDC._3Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 8
#line 9
    testRunner.Given("I am logged in to Rave with username \"cdm1\" and password \"password\"");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 1",
                        "CDM1",
                        "Edit Check Site 3",
                        "30001"});
#line 10
 testRunner.And("following Study assignments exist", ((string)(null)), table1);
#line 13
    testRunner.And("Role \"cdm1\" has Action \"Query\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Edit Check",
                        "Folder",
                        "Form",
                        "Field",
                        "Query Message"});
            table2.AddRow(new string[] {
                        "*Greater Than Log same form",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Assessment Date 2",
                        "Date Field 1 can not be greater than Date Field 2."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Cross Folder",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Assessment Date 1",
                        "Date 1 can not be greater than."});
            table2.AddRow(new string[] {
                        "*Greater Than Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Assessment Date 1",
                        "Informed Consent Date 1 is greater. Please revise."});
            table2.AddRow(new string[] {
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Numeric Field 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log."});
            table2.AddRow(new string[] {
                        "*Is Less Than Log same form",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Date is Less Than Date on first Number field."});
            table2.AddRow(new string[] {
                        "*Is Less Than Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Assessment Date 2",
                        "Date is Less Than Date on the first log form."});
            table2.AddRow(new string[] {
                        "*Is Less Than To Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Assessment Date 1",
                        "Date can not be less than."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Cross Folder",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Numeric Field 2 is not equal Numeric Field 2."});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Numeric 2 can not equal each other."});
            table2.AddRow(new string[] {
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "Numeric Field 2",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2"});
            table2.AddRow(new string[] {
                        "*Is Not Equal To Open Query Log Same form",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "Numeric Field 2",
                        "Numeric fields are not equal."});
            table2.AddRow(new string[] {
                        "*Greater Than or Equal To Open Query Log same form",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "Informed Consent Date 2",
                        "Dates are not equal."});
#line 14
 testRunner.And("Study \"Edit Check Study 1\" has Draft \"Draft 1\" includes Edit Checks from the tabl" +
                    "e below", ((string)(null)), table2);
#line 29
 testRunner.And("Draft \"Draft 1\" in Study \"Edit Check Study 1\" has been published to CRF Version \"" +
                    "<RANDOMNUMBER>\"");
#line 30
 testRunner.And("CRF Version \"<RANDOMNUMBER>\" in Study \"Edit Check Study 1\" has been pushed to Sit" +
                    "e \"Edit Check Site 1\" in Environment \"Prod\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Form Standard form to log form, When a query has been answered and clo" +
            "sed with the same data and I enter the same data that originally opened the quer" +
            "y, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Form Standard form to log form, When a query has been answered and clo" +
                    "sed with the same data and I enter the same data that originally opened the quer" +
                    "y, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.1",
                        "Draft",
                        "Web"});
#line 37
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 65
 testRunner.Given("closed Query with message \"\" exists on Field \"Assessment Date 1\" in Form \"Assessm" +
                    "ent Date Log2\" in Folder \"Test A Single Edit\" in Subject \"SUB301\" in Site \"Edit " +
                    "Check Site 3\" in Study \"Edit Check Study 3\"");
#line 66
 testRunner.And("closed Query with message \"\" exists on Field \"Numeric Field 2\" in Form \"Assessmen" +
                    "t Date Log2\" in Folder \"Test A Single Edit\" in Subject \"SUB301\" in Site \"Edit Ch" +
                    "eck Site 3\" in Study \"Edit Check Study 3\"");
#line 67
 testRunner.And("I am on CRF page \"Assessment Date Log2\" in Folder \"Test A Single Edit\" in Subject" +
                    " \"SUB301\" in Site \"Edit Check Site 3\" in Study \"Edit Check Study 3\"");
#line 68
 testRunner.And("I edit log line 2");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 69
 testRunner.When("I enter data in CRF", ((string)(null)), table3);
#line 73
 testRunner.And("I save the CRF page");
#line 74
    testRunner.Then("the Query with message \"\" is not displayed on Field \"Assessment Date 1\" on log li" +
                    "ne 1");
#line 75
 testRunner.And("the Query with message \"\" is not displayed on Field \"Numeric Field 2\" on log line" +
                    " 1");
#line 76
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Form Standard form to log form, When a query has been answered and clo" +
            "sed with the same data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Form Standard form to log form, When a query has been answered and clo" +
                    "sed with the same data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.2",
                        "Draft"});
#line 82
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 85
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table4.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table4.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 86
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table4);
#line 90
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Form Standard form to log form, When a query has been answered and clo" +
            "sed with the different data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Form Standard form to log form, When a query has been answered and clo" +
                    "sed with the different data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.3",
                        "Draft"});
#line 96
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 99
 testRunner.Given("closed queries exist on fields \"Assessment Date 1\" and \"Numeric Field 2\" in folde" +
                    "r \"Test A Single Edit\" in form \"Assessment Date Log2\" in subject \"SUB301\"");
#line 100
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Assessment Date 1",
                        "07 Jan 2000"});
            table5.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 101
 testRunner.When("I enter data from the table below:", ((string)(null)), table5);
#line 105
 testRunner.And("I save form \"Assessment Date Log2\"");
#line 106
 testRunner.Then("I verify the queries are displayed on fields \"Assessment Date 1\" and \"Numeric Fie" +
                    "ld 2\"\ton second logline");
#line 107
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Form Standard form to log form, When a query has been answered and clo" +
            "sed with the same data and I enter the same data that originally opened the quer" +
            "y, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Form Standard form to log form, When a query has been answered and clo" +
                    "sed with the same data and I enter the same data that originally opened the quer" +
                    "y, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.1.4",
                        "Draft"});
#line 113
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 115
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB301",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 116
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table6);
#line 120
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Folder Standard form to log form, When a query has been answered and c" +
            "losed with the same data and I enter the same data that")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThat()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Folder Standard form to log form, When a query has been answered and c" +
                    "losed with the same data and I enter the same data that", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.1",
                        "Draft"});
#line 126
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 129
 testRunner.Given("closed queries exist on fields \"Assessment Date 1\" and \"Numeric Field 2\" in folde" +
                    "r \"Test B Single Derivation\" in form \"Assessment Date Log2\" in subject \"SUB302\"");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Assessment Date 1",
                        "09 Jan 2000"});
            table7.AddRow(new string[] {
                        "Numeric Field 2",
                        "99"});
#line 130
 testRunner.When("I enter data from the table below:", ((string)(null)), table7);
#line 134
 testRunner.And("I save form \"Assessment Date Log2\"");
#line 135
 testRunner.Then("I verify the queries are not displayed on fields \"Assessment Date 1\" and \"Numeric" +
                    " Field 2\"\ton first logline");
#line 136
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Folder Standard form to log form, When a query has been answered and c" +
            "losed with the same data and I enter the same data that originally opened the qu" +
            "ery, then queries are displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Folder Standard form to log form, When a query has been answered and c" +
                    "losed with the same data and I enter the same data that originally opened the qu" +
                    "ery, then queries are displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.2",
                        "Draft"});
#line 142
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 144
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table8.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "09 Jan 2000",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "09 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table8.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "99",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "99",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 145
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table8);
#line 149
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Folder Standard form to log form, When a query has been answered and c" +
            "losed with the different data and I enter the same data that originally opened t" +
            "he query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Folder Standard form to log form, When a query has been answered and c" +
                    "losed with the different data and I enter the same data that originally opened t" +
                    "he query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.3",
                        "Draft"});
#line 155
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 157
 testRunner.Given("closed queries exist on fields \"Assessment Date 1\" and \"Numeric Field 2\" in folde" +
                    "r \"Test B Single Derivation\" in form \"Assessment Date Log2\" in subject \"sub302\"");
#line 158
 testRunner.And("I add a new log line");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table9.AddRow(new string[] {
                        "Numeric Field 2",
                        "98"});
#line 159
 testRunner.When("I enter data from the table below:", ((string)(null)), table9);
#line 163
 testRunner.And("I save form \"Assessment Date Log2\"");
#line 164
 testRunner.Then("I verify the queries are displayed on fields \"Assessment Date 1\" and \"Numeric Fie" +
                    "ld 2\"\ton second logline");
#line 165
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Folder Standard form to log form, When a query has been answered and c" +
            "losed with the same data and I enter the same data that originally opened the qu" +
            "ery, then queries are not displayed in SQL logs.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFolderStandardFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Folder Standard form to log form, When a query has been answered and c" +
                    "losed with the same data and I enter the same data that originally opened the qu" +
                    "ery, then queries are not displayed in SQL logs.", new string[] {
                        "release_564_Patch11",
                        "PB_3.2.4",
                        "Draft"});
#line 171
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 173
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Cross Folder",
                        "Marking Group 1",
                        "Date 1 can not be greater than.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB302",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "98",
                        "Test B Single Derivation",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "98",
                        "*Is Not Equal to Open Query Cross Folder",
                        "Marking Group 1",
                        "Numeric Field 2 is not equal Numeric Field 2.",
                        "{DateTime}"});
#line 174
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table10);
#line 178
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Forms log form to Standard form, When a query has been answered and cl" +
            "osed with the different data and I enter the same data that originally opened th" +
            "e query, then queries are displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Forms log form to Standard form, When a query has been answered and cl" +
                    "osed with the different data and I enter the same data that originally opened th" +
                    "e query, then queries are displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.1",
                        "Draft"});
#line 184
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 186
 testRunner.Given("closed queries exist on fields \"Informed Consent Date 2\" and \"Numeric Field 2\" in" +
                    " folder \"Test B Single Derivation\" in form \"Informed Consent Date Form 1\" in sub" +
                    "ject \"SUB303\"");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table11.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "11 Jan 2000"});
            table11.AddRow(new string[] {
                        "Numeric Field 2",
                        "101"});
#line 187
 testRunner.When("I enter data from the table below:", ((string)(null)), table11);
#line 191
 testRunner.And("I save form \"Assessment Date Log2\"");
#line 192
 testRunner.Then("I verify the queries are displayed on fields \"Informed Consent Date 2\" and \"Numer" +
                    "ic Field 2\"");
#line 193
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Forms log form to Standard form, When a query has been answered and cl" +
            "osed with the different data and I enter the same data that originally opened th" +
            "e query, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormsLogFormToStandardFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Forms log form to Standard form, When a query has been answered and cl" +
                    "osed with the different data and I enter the same data that originally opened th" +
                    "e query, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.3.2",
                        "Draft"});
#line 199
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 201
    testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table12.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Informed Consent Date 2",
                        "11 Jan 2000",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Informed Consent Date 2",
                        "11 Jan 2000",
                        "*Greater Than or Equal To Open Query Log same form",
                        "Marking Group 1",
                        "Dates are not equal.",
                        "{DateTime}"});
            table12.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB303",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Numeric Field 2",
                        "101",
                        "Test B Single Derivation",
                        "Informed Consent Date Form 1",
                        "0",
                        "Numeric Field 2",
                        "101",
                        "*Is Not Equal To Open Query Log Same form",
                        "Marking Group 1",
                        "Numeric fields are not equal.",
                        "{DateTime}"});
#line 202
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table12);
#line 206
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Forms log form to log form, When a query has been answered and closed " +
            "with the different data and I enter the same data that originally opened the que" +
            "ry, then queries are not displayed.")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayed_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Forms log form to log form, When a query has been answered and closed " +
                    "with the different data and I enter the same data that originally opened the que" +
                    "ry, then queries are not displayed.", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.1",
                        "Draft"});
#line 212
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 214
 testRunner.Given("closed queries exist on fields \"Assessment Date 1\", \"Assessment Date 2\", \"Numeric" +
                    " Field 1\" and \"Numeric Field 2\" in folder \"Test A Single Edit\" in form \"Assessme" +
                    "nt Date Log2\" in subject \"SUB304\"");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table13.AddRow(new string[] {
                        "Assessment Date 1",
                        "10 Jan 2000"});
            table13.AddRow(new string[] {
                        "Assessment Date 2",
                        "10 Feb 2000"});
            table13.AddRow(new string[] {
                        "Numeric Field 1",
                        "100"});
            table13.AddRow(new string[] {
                        "Numeric Field 2",
                        "66"});
#line 215
 testRunner.When("I enter data from the table below:", ((string)(null)), table13);
#line 221
 testRunner.And("I save form \"Assessment Date Log2\"");
#line 222
 testRunner.Then("I verify the queries are not displayed on fields \"Assessment Date 1\", \"Assessment" +
                    " Date 2\", \"Numeric Field 1\" and \"Numeric Field 2\" on the first logline");
#line 223
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Forms log form to log form, When a query has been answered and closed " +
            "with the same data and I enter the same data that originally opened the query, t" +
            "hen queries are displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheSameDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Forms log form to log form, When a query has been answered and closed " +
                    "with the same data and I enter the same data that originally opened the query, t" +
                    "hen queries are displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.2",
                        "Draft"});
#line 229
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 231
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table14.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "10 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "10 Jan 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table14.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 2",
                        "10 Feb 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 2",
                        "10 Feb 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table14.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 1",
                        "100",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table14.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "66",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "66",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 232
    testRunner.Then("I should see the logging data for queries", ((string)(null)), table14);
#line 238
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("On a Cross Forms log form to log form, When a query has been answered and closed " +
            "with the different data and I enter the same data that originally opened the que" +
            "ry, then queries are not displayed in SQL logs. .")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "3")]
        public virtual void OnACrossFormsLogFormToLogFormWhenAQueryHasBeenAnsweredAndClosedWithTheDifferentDataAndIEnterTheSameDataThatOriginallyOpenedTheQueryThenQueriesAreNotDisplayedInSQLLogs__()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("On a Cross Forms log form to log form, When a query has been answered and closed " +
                    "with the different data and I enter the same data that originally opened the que" +
                    "ry, then queries are not displayed in SQL logs. .", new string[] {
                        "release_564_Patch11",
                        "PB_3.4.4",
                        "Draft"});
#line 264
this.ScenarioSetup(scenarioInfo);
#line 8
this.FeatureBackground();
#line 266
 testRunner.When("I run SQL Script \"Query Logging Script\"");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table15.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "10 Feb 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "10 Feb 2000",
                        "*Is Less Than To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date can not be less than.",
                        "{DateTime}"});
            table15.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 2",
                        "10 Mar 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 2",
                        "10 Mar 2000",
                        "*Is Less Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Date is Less Than Date on the first log form.",
                        "{DateTime}"});
            table15.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 1",
                        "200",
                        "*Is Greater Than or Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric Field is greater than or Equal to Numeric Field on Log.",
                        "{DateTime}"});
            table15.AddRow(new string[] {
                        "Edit Check Study 3",
                        "30001",
                        "Edit Check Site 3",
                        "PROD",
                        "SUB304",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "77",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "77",
                        "*Is Not Equal To Open Query Log Cross Form",
                        "Marking Group 1",
                        "Numeric 2 can not equal each other.",
                        "{DateTime}"});
#line 267
    testRunner.Then("I should not see the logging data for queries", ((string)(null)), table15);
#line 273
 testRunner.And("I take a screenshot");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
