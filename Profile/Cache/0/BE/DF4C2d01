
// Workfile: DatePicker.js
//
// Copyright© 2005, Medidata Solutions, Inc., All Rights Reserved.
//
// This is PROPRIETARY SOURCE CODE of Medidata Solutions, Inc. The contents of 
// this file may not be disclosed to third parties, copied or duplicated in 
// any form, in whole or in part, without the prior written permission of
// Medidata Solutions, Inc.
//
// Author: Slavko Krstic skrstic@mdsol.com


var	crossobj, crossMonthObj, crossYearObj, omonthSelected, oyearSelected, odateSelected, monthConstructed, yearConstructed, intervalID1, intervalID2, timeoutID1, timeoutID2, ctlToPlaceValue, ctlNow, dateFormat, nStartingYear, monthSelected, dateSelected, yearSelected;

var	bPageLoaded=false;
var	ie=document.all;
var	dom=document.getElementById; //support older browsers

var	today =	new	Date();
var	dateNow	= today.getDate();
var	monthNow = today.getMonth();
var	yearNow	= today.getYear();
var	img	= new Array();

var bShow = false;

// hides <select> and <applet> objects (IE only)
function hideElement(elmID, overDiv)
{
	if (ie)
	{
		for(i=0; i<document.all.tags(elmID).length; i++)
		{
			obj	= document.all.tags(elmID)[i];
			if (!obj || !obj.offsetParent)
			{
				continue;
			}

			// Find the element's offsetTop and offsetLeft relative to the BODY tag.
			objLeft=obj.offsetLeft;
			objTop=obj.offsetTop;
			objParent=obj.offsetParent;

			while (!obj.offsetParent && objParent.tagName.toUpperCase() != "BODY")
			{
				objLeft += objParent.offsetLeft;
				objTop += objParent.offsetTop;
				objParent=objParent.offsetParent;
			}

			objHeight=obj.offsetHeight;
			objWidth=obj.offsetWidth;

			if ((overDiv.offsetLeft + overDiv.offsetWidth) <= objLeft);
			else if((overDiv.offsetTop + overDiv.offsetHeight) <= objTop);
			else if(overDiv.offsetTop >= (objTop + objHeight));
			else if(overDiv.offsetLeft >= (objLeft + objWidth));
			else
			{
				obj.style.visibility=(dom||ie) ? "hidden" : "hide";
			}
		}
	}
}


//unhides <select> and <applet> objects (IE only)
function showElement(elmID)
{
	if (ie)
	{
		for(i=0; i<document.all.tags(elmID).length; i++)
		{
			obj=document.all.tags(elmID)[i];

			if(!obj || !obj.offsetParent)
			{
				continue;
			}

			obj.style.visibility="";
		}
	}
}

//We won't use the holiday stuff for now -- maybe later if we need it
function HolidayRec (d, m, y, desc)
{
	this.d=d
	this.m=m
	this.y=y
	this.desc=desc
}

var HolidaysCounter=0
var Holidays=new Array()


function addHoliday (d, m, y, desc)
{
	Holidays[HolidaysCounter++]=new HolidayRec (d, m, y, desc);
}



for	(i=0; i<imgsrc.length; i++)
{
	img[i] = new Image;
	img[i].src = imgDir + imgsrc[i];
}
	
document.write ("<div onclick='bShow=true' id='calendar' style='z-index:+999;position:absolute;visibility:hidden;'><table width=" + (showWeekNumber ? 250:220) + " style='font-family:arial;font-size:11px;border-width:1;border-style:solid;border-color:" + borderColor + ";font-family:arial; font-size:11px}' bgcolor='" + calendarBackgroundColor + "'><tr bgcolor='" + headerColor + "'><td><table width='"+(showWeekNumber ? 248 : 218)+"'><tr><td style='padding:2px;font-family:arial; font-size:11px;'><font color='" + headerTextColor + "'><B><span id='caption'></span></B></font></td><td align=right><a href='javascript:hideCalendar()'><IMG SRC='" + imgDir+ closeGif + "' WIDTH='15' HEIGHT='13' BORDER='0' ALT='" + closeCalendarString + "'></a></td></tr></table></td></tr><tr><td style='padding:5px' bgcolor=" + calendarBackgroundColor + "><span id='content'></span></td></tr>");

if (showToday)
{
	document.write ("<tr bgcolor=" + todayBackgroundColor + "><td style='padding:5px' align=center><span id='lblToday'></span></td></tr>");
}

document.write ("</table></div><div id='selectMonth' style='z-index:+999;position:absolute;visibility:hidden;'></div><div id='selectYear' style='z-index:+999;position:absolute;visibility:hidden;'></div>");





var	styleAnchor="text-decoration:none;color:black;";
var	styleLightBorder="border-style:solid;border-width:1px;border-color:" + borderColor + ";";

function swapImage(srcImg, destImg)
{
	if (dom)	
	{
		document.getElementById(srcImg).setAttribute("src",imgDir + destImg);
	}
	
}

function init(ctlId)	
{

	if (!ie && !bPageLoaded) //other browsers start counting at 1900
	{
		yearNow += 1900;		
	}	
	crossobj = (dom) ? document.getElementById("calendar").style : ie ? document.all.calendar : document.calendar;
	hideCalendar();

	crossMonthObj = (dom) ? document.getElementById("selectMonth").style : ie ? document.all.selectMonth : document.selectMonth;

	crossYearObj = (dom) ? document.getElementById("selectYear").style : ie ? document.all.selectYear : document.selectYear;

	monthConstructed=false;
	yearConstructed=false;

	if (showToday)
	{
		document.getElementById("lblToday").innerHTML =	todayString + " <a onmousemove='window.status=\""+gotoString+"\"' onmouseout='window.status=\"\"' title='"+gotoString+"' style='"+styleAnchor+"' href='javascript:monthSelected=monthNow;yearSelected=yearNow;constructCalendar(\"" + ctlId + "\");'>" + todayDate + "</a>";
	}
	
	var alignment = ie ? "align:absmiddle" : "";
	if (document.allowPastSelection == null || document.allowPastSelection)
	{	
		sHTML1 = '<span id=\"spanLeft\" style=\"border-style:solid;border-width:1;border-color:' + navColor + ';cursor:pointer\" onmouseover=\"swapImage(\'changeLeft\',\'' + left2Gif + '\');this.style.borderColor=\'' + highlightedNavColor + '\';window.status=\'' + scrollLeftMessage + '\'\" onclick=\"javascript:decMonth(\'' + ctlId + '\')\" onmouseout=\"clearInterval(intervalID1);swapImage(\'changeLeft\',\'' + left1Gif + '\');this.style.borderColor=\'' + navColor + '\';window.status=\'\'\">&nbsp;<IMG id=\"changeLeft\" ' + alignment + ' SRC=\"' + imgDir + left1Gif + '\" width=10 height=11>&nbsp;</span>&nbsp;';
	}
	else
	{
		var visibility = (dom||ie) ? 'hidden' : 'hide';
		sHTML1 = '<span id=\"spanLeft\" style=\"border-style:solid;border-width:1;border-color:' + navColor + ';cursor:pointer;visibility:' + visibility + '\" onmouseover=\"swapImage(\'changeLeft\',\'' + left2Gif + '\');this.style.borderColor=\'' + highlightedNavColor + '\';window.status=\'' + scrollLeftMessage + '\'\" onclick=\"javascript:decMonth(\'' + ctlId + '\')\" onmouseout=\"clearInterval(intervalID1);swapImage(\'changeLeft\',\'' + left1Gif + '\');this.style.borderColor=\'' + navColor + '\';window.status=\'\'\">&nbsp;<IMG id=\"changeLeft\" ' + alignment + ' SRC=\"' + imgDir + left1Gif + '\" width=10 height=11>&nbsp;</span>&nbsp;';
	}
	
	sHTML1 = sHTML1 + '<span id=\"spanRight\" style=\"border-style:solid;border-width:1;border-color:' + navColor + ';cursor:pointer\"	onmouseover=\"swapImage(\'changeRight\',\'' + right2Gif + '\');this.style.borderColor=\'' + highlightedNavColor + '\';window.status=\'' + scrollRightMessage + '\'\" onmouseout=\"clearInterval(intervalID1);swapImage(\'changeRight\',\'' + right1Gif + '\');this.style.borderColor=\'' + navColor + '\';window.status=\'\'\" onclick=\"incMonth(\'' + ctlId + '\')\">&nbsp;<IMG id=\"changeRight\" ' + alignment + ' SRC=\"' + imgDir+ right1Gif + '\"width=10 height=11>&nbsp;</span>&nbsp;';
	sHTML1 = sHTML1 + '<span id=\"spanMonth\" style=\"border-style:solid;border-width:1;border-color:' + navColor + ';cursor:pointer\"	onmouseover=\"swapImage(\'changeMonth\',\'' + drop2Gif + '\');this.style.borderColor=\'' + highlightedNavColor + '\';window.status=\'' + selectMonthMessage + '\'\" onmouseout=\"swapImage(\'changeMonth\',\'' + drop1Gif + '\');this.style.borderColor=\'' + navColor + '\';window.status=\'\'\" onclick=\"popUpMonth(\'' + ctlId + '\')\"></span>&nbsp;';
	sHTML1 = sHTML1 + '<span id=\"spanYear\" style=\"border-style:solid;border-width:1;border-color:' + navColor + ';cursor:pointer\" onmouseover=\"swapImage(\'changeYear\',\'' + drop2Gif + '\');this.style.borderColor=\'' + highlightedNavColor + '\';window.status=\'' + selectYearMessage + '\'\"	onmouseout=\"swapImage(\'changeYear\',\'' + drop1Gif + '\');this.style.borderColor=\'' + navColor + '\';window.status=\'\'\"	onclick=\"popUpYear(\'' + ctlId + '\')\"></span>&nbsp;';
	
	
	document.getElementById("caption").innerHTML  =	sHTML1;

	bPageLoaded=true;
	DetermineTimePickerEnabled(document.getElementById(ctlId).timePickerID, ctlId);
	document.getElementById(ctlId).loaded = true;

}

function hideCalendar()
{	
	DPickerHideOldButtons();

	if(typeof(ctlToPlaceValue) == 'object')
	{
		DPickerFlipTextboxAndLabel(ctlToPlaceValue.id.replace('_DatePickerTxt', ''), false);
	}
	
	if (document.allowPastSelection != null && !document.allowPastSelection) //avoid glitches
	{
		spanLeftObj = (dom) ? document.getElementById("spanLeft") : ie ? document.all.spanLeft : document.spanLeft;
		if (spanLeftObj != null)
		{
			spanLeftObj.style.visibility = (dom||ie) ? "hidden" : "hide";
		}
	}


	try //just getting rid of the warning if this is attempted before init.
	{
		crossobj.visibility = (dom||ie) ? "hidden" : "hide";
	}
	catch (ex)
	{
	}

	if (crossMonthObj != null)
	{
		crossMonthObj.visibility = (dom||ie) ? "hidden" : "hide";
	}
	
	if (crossYearObj !=	null)
	{
		crossYearObj.visibility = (dom||ie) ? "hidden" : "hide";
	}

	showElement('SELECT');
	showElement('APPLET');
}

function padZero(num) 
{
	return (num	< 10)? '0' + num : num;
}

function constructDate(d, m, y)
{
	sTmp = dateFormat;
	sTmp = sTmp.replace("dd", "<e>");
	sTmp = sTmp.replace("d", "<d>");
	sTmp = sTmp.replace("<e>", padZero(d));
	sTmp = sTmp.replace("<d>", d);
	sTmp = sTmp.replace("MMM", "<o>");
	sTmp = sTmp.replace("MMM-", "<o>");
	sTmp = sTmp.replace("mm", "<n>");
	sTmp = sTmp.replace("m", "<m>");
	sTmp = sTmp.replace("<m>", m+1);
	sTmp = sTmp.replace("<n>", padZero(m+1));
	sTmp = sTmp.replace("<o>", monthName[m]);
	return sTmp.replace("yyyy", y); //TODO: make the calendar work with 2-digit years.
}

function closeCalendar(ctlId) 
{
	var	sTmp;
	
	hideCalendar();
	DPickerSetValue(ctlToPlaceValue, constructDate(dateSelected,monthSelected,yearSelected, ctlId));
	
	var ctl = document.getElementById(ctlId);
	
	if(ctl)
	{
		DetermineTimePickerEnabled(ctl.timePickerID, ctlId);
		
		if(ctl.onSelectHandler != null)
		{
			var s = ctl.onSelectHandler + "('" + ctlId.replace("_DatePickerTxt", "") + "');";
			eval(s);
		}
	}
}

function DPickerSetValue(ctl, val)
{
	ctl.value = val;
	
	var id = ctl.id.replace('_DatePickerTxt', '_LabelDiv');
	var div = document.getElementById(id);

	if(div)
	{
		div.innerHTML = "&nbsp;" + val;
	}
}

//Month dropdown
function StartDecMonth(ctlId)
{

	intervalID1 = setInterval("decMonth(\"" + ctlId + "\")",80);
}

function StartIncMonth(ctlId)
{
	intervalID1 = setInterval("incMonth(\"" + ctlId + "\")",80);
}

function incMonth (ctlId) 
{
	popDownYear();
	popDownMonth();
	
	if (document.allowPastSelection != null && !document.allowPastSelection && yearSelected == yearNow && monthSelected == monthNow) //unhide left nav
	{
		spanLeftObj = (dom) ? document.getElementById("spanLeft") : ie ? document.all.spanLeft : document.spanLeft;
		spanLeftObj.style.visibility = (dom||ie) ? "visible" : "show";
		monthConstructed = false;
	}
	
	monthSelected++;
	if (monthSelected > 11) 
	{
		monthSelected = 0;
		yearSelected++;
	}
	
	
	constructCalendar(ctlId);
	
}

function decMonth(ctlId) 
{
	if (monthSelected == 0 && yearSelected == 1753)
	{
		return;
	}
	popDownYear();
	popDownMonth();
	if (document.allowPastSelection != null && !document.allowPastSelection && yearSelected == yearNow && monthSelected == monthNow) 
	//should never be true because the button should be hidden, but just in case...
	{
		return;
	}
	
	monthSelected--;
	
	if (monthSelected < 0)
	{
		monthSelected = 11;
		yearSelected--;
	}
	
	if (document.allowPastSelection != null && !document.allowPastSelection && yearSelected == yearNow && monthSelected == monthNow)
	{
		spanLeftObj = (dom) ? document.getElementById("spanLeft") : ie ? document.all.spanLeft : document.spanLeft;
		spanLeftObj.style.visibility = (dom||ie) ? "hidden" : "hide";
		monthConstructed = false;
	}
	
	constructCalendar(ctlId);
}

function constructMonth(ctlId) 
{
	popDownYear();
	if (!monthConstructed) 
	{
		sHTML =	"";
		for	(i = (document.allowPastSelection == null || document.allowPastSelection) ? 0 : yearSelected == yearNow ? monthNow : 0; i<12;	i++) 
		{
			sName =	monthName[i];
			if (i == monthSelected)
			{
				sName =	"<B>" +	sName +	"</B>";
			}
	
			sHTML += "<tr><td id='m" + i + "' onmouseover='this.style.backgroundColor=\"" + highlightedMYDDColor + "\"' onmouseout='this.style.backgroundColor=\"\"' style='cursor:pointer' onclick='monthConstructed=false;monthSelected=" + i + ";constructCalendar(\"" + ctlId + "\");popDownMonth();event.cancelBubble=true'>&nbsp;" + sName + "&nbsp;</td></tr>";
		}

		document.getElementById("selectMonth").innerHTML = "<table width=70	style='font-family:arial; font-size:11px; border-width:1; border-style:solid; border-color:" + borderColor + ";' bgcolor='" + myDDColor + "' cellspacing=0 onmouseover='clearTimeout(timeoutID1)'	onmouseout='clearTimeout(timeoutID1);timeoutID1=setTimeout(\"popDownMonth()\",100);event.cancelBubble=true'>" +	sHTML +	"</table>";

		monthConstructed = true;
	}
}

function popUpMonth(ctlId) 
{
	constructMonth(ctlId);
	crossMonthObj.visibility = (dom || ie) ? "visible" : "show";

	var leftOff = 0; 
	if (!ie) {
	    leftOff += 6;
	}

	crossMonthObj.left = parseInt(crossobj.left) + 50 + leftOff + 'px';
	crossMonthObj.top =	parseInt(crossobj.top) + 26 + 'px';

	hideElement('SELECT', document.getElementById("selectMonth"));
	hideElement('APPLET', document.getElementById("selectMonth"));
}

function popDownMonth()	
{
	crossMonthObj.visibility= (dom||ie) ? "hidden" : "hide";
}

//Year dropdown
function incYear() 
{
	for	(i=0; i<7; i++)
	{
		newYear	= (i + nStartingYear) +1;
		
		if (newYear==yearSelected)
		{ 
			txtYear = "&nbsp;<B>" + newYear + "</B>&nbsp;";
		}
		else
		{
			txtYear = "&nbsp;" + newYear + "&nbsp;" 
		}
		document.getElementById("y" + i).innerHTML=txtYear;
	}
	nStartingYear ++;
	bShow=true;
}

function decYear() 
{
	if (nStartingYear == 1753)
	{
		return;
	}
	if (document.allowPastSelection != null && !document.allowPastSelection && nStartingYear == yearNow) //Never scroll past the current year if not allowing past selections
	{
		bShow = true;
		return;
	}	
	
	for	(i=0; i<7; i++)
	{
		newYear	= (i+nStartingYear)-1;
		if (newYear == yearSelected)
		{ 
			txtYear = "&nbsp;<B>" + newYear + "</B>&nbsp;";
		}
		else
		{ 
			txtYear = "&nbsp;" + newYear + "&nbsp;";
		}
		
		document.getElementById("y" + i).innerHTML = txtYear;
	}
	
	nStartingYear--;
	bShow = true;
}

function selectYear(nYear, ctlId) 
{
	if (document.allowPastSelection != null && !document.allowPastSelection && (nYear + nStartingYear == yearNow || yearSelected == yearNow))
	{
		monthConstructed = false; //Not allowing past selections, need to re-construct.
	}
	
	yearSelected = parseInt(nYear+nStartingYear);
	
	if (document.allowPastSelection != null && !document.allowPastSelection)
	{
		if (yearSelected == yearNow)
		{
			monthSelected = monthNow;

			spanLeftObj = (dom) ? document.getElementById("spanLeft") : ie ? document.all.spanLeft : document.spanLeft;
			spanLeftObj.style.visibility = (dom||ie) ? "hidden" : "hide";
		}
		else
		{
			spanLeftObj = (dom) ? document.getElementById("spanLeft") : ie ? document.all.spanLeft : document.spanLeft;
			spanLeftObj.style.visibility = (dom||ie) ? "visible" : "show";		
		}
	}
	
	yearConstructed = false;
	constructCalendar(ctlId);
	popDownYear();
}

function constructYear(ctlId) 
{
	popDownMonth();
	sHTML =	"";
	if (!yearConstructed) 
	{

		sHTML =	"<tr><td align='center'	onmouseover='this.style.backgroundColor=\"" + highlightedMYDDColor + "\"' onmouseout='clearInterval(intervalID1);this.style.backgroundColor=\"\"' style='cursor:pointer'	onmousedown='clearInterval(intervalID1);intervalID1=setInterval(\"decYear()\",30)' onmouseup='clearInterval(intervalID1)'>-</td></tr>";

		j =	0;
		
		nStartingYear =	yearSelected - 3; // 3 years before and after current...
		
		if (document.allowPastSelection != null && !document.allowPastSelection && nStartingYear < yearNow) //...unless we're not allowing past selections
		{
			nStartingYear = yearNow;
		}
		
		for	(i = nStartingYear; i <= nStartingYear + 6; i++) 
		{
			sName =	i;
			if (i==yearSelected)
			{
				sName =	"<B>" +	sName +	"</B>"
			}

			sHTML += "<tr><td id='y" + j + "' onmouseover='this.style.backgroundColor=\"" + highlightedMYDDColor + "\"' onmouseout='this.style.backgroundColor=\"\"' style='cursor:pointer' onclick='selectYear(" + j + ");event.cancelBubble=true'>&nbsp;" + sName + "&nbsp;</td></tr>";
			j++;
		}

		sHTML += "<tr><td align='center' onmouseover='this.style.backgroundColor=\"" + highlightedMYDDColor + "\"' onmouseout='clearInterval(intervalID2);this.style.backgroundColor=\"\"' style='cursor:pointer' onmousedown='clearInterval(intervalID2);intervalID2=setInterval(\"incYear()\",30)' onmouseup='clearInterval(intervalID2)'>+</td></tr>";

		document.getElementById("selectYear").innerHTML	= "<table width=44 style='font-family:arial; font-size:11px; border-width:1; border-style:solid; border-color:" + borderColor + ";'	bgcolor='" + myDDColor + "' onmouseover='clearTimeout(timeoutID2)' onmouseout='clearTimeout(timeoutID2);timeoutID2=setTimeout(\"popDownYear()\",100)' cellspacing=0>"	+ sHTML	+ "</table>";

		yearConstructed	= true;
	}
}

function popDownYear() 
{
	clearInterval(intervalID1);
	clearTimeout(timeoutID1);
	clearInterval(intervalID2);
	clearTimeout(timeoutID2);
	crossYearObj.visibility = (dom||ie) ? "hidden" : "hide";
}

function popUpYear(ctlId) 
{
	var	leftOffset;
	
	constructYear(ctlId);
	crossYearObj.visibility	= (dom||ie)? "visible" : "show";
	leftOffset = parseInt(crossobj.left) + document.getElementById("spanYear").offsetLeft;
	/*
	if (ie)
	{
		leftOffset += 6;
	}
    */
	leftOffset += 6;
    crossYearObj.left = leftOffset + 'px';
	crossYearObj.top = parseInt(crossobj.top) + 26 + 'px';
}


function WeekNbr(n) 
{
	year = n.getFullYear();
	month = n.getMonth() + 1;
	
	if (startAt == 0) 
	{
		day = n.getDate() + 1;
	}
	else 
	{
		day=n.getDate();
	}

	a = Math.floor((14-month) / 12);
	y = year + 4800 - a;
	m = month + 12 * a - 3;
	b = Math.floor(y/4) - Math.floor(y/100) + Math.floor(y/400);
	J = day + Math.floor((153 * m + 2) / 5) + 365 * y + b - 32045;
	d4 = (((J + 31741 - (J % 7)) % 146097) % 36524) % 1461;
	L = Math.floor(d4 / 1460);
	d1 = ((d4 - L) % 365) + L;
	week = Math.floor(d1/7) + 1;

	return week;
}

function constructCalendar (ctlId) 
{
	var aNumDays = Array(31,0,31,30,31,30,31,31,30,31,30,31);

	var dateMessage;
	var	startDate =	new	Date (yearSelected,monthSelected,1);
	var endDate;

	if (monthSelected==1) //The last day of February? The day before March 1st!
	{
		endDate	= new Date (yearSelected,monthSelected+1,1);
		endDate	= new Date (endDate	- (24*60*60*1000));
		numDaysInMonth = endDate.getDate();
	}
	else
	{
		numDaysInMonth = aNumDays[monthSelected];
	}

	datePointer	= 0;
	dayPointer = startDate.getDay() - startAt;

	if (dayPointer<0)
	{
		dayPointer = 6;
	}

	sHTML =	"<table border=0 style='font-family:arial;font-size:10px;'><tr>";

	if (showWeekNumber)
	{
		sHTML += "<td width=27><b>" + weekString + "</b></td><td width=1 rowspan=7 bgcolor='" + weekDateDividerColor + "' style='padding:0px'><img src='" + imgDir + dividerGif + "' width=1></td>";
	}

	for	(i=0; i<7; i++)	
	{
		if ((startAt == 0 && i == 0) || (startAt == 1 && i == 6)) //Sunday
		{
			sHTML += "<td width='27' align='right'><font color='" + sundayColor + "'><B>"+ dayName[i]+"</B></font></td>";
		}
		else
		{
			sHTML += "<td width='27' align='right'><B>"+ dayName[i]+"</B></td>";
		}
	}

	sHTML +="</tr><tr>";

	if (showWeekNumber)
	{
		sHTML += "<td align=right>" + WeekNbr(startDate) + "&nbsp;</td>";
	}

	for	(var i=1; i<=dayPointer;i++)
	{
		sHTML += "<td>&nbsp;</td>";
	}

	for	(datePointer = 1; datePointer <= numDaysInMonth; datePointer++)
	{
		dayPointer++;
		sHTML += "<td align=right>";
		sStyle = styleAnchor;
		if ((datePointer == odateSelected) && (monthSelected==omonthSelected) && (yearSelected == oyearSelected))
		{ 
			sStyle += styleLightBorder;
		}
		
		sHint="";
		
		for (k = 0; k < HolidaysCounter; k++)
		{
			if ((parseInt(Holidays[k].d) == datePointer) && (parseInt(Holidays[k].m) == (monthSelected+1)))
			{
				if ((parseInt(Holidays[k].y) == 0)||((parseInt(Holidays[k].y) == yearSelected)&&(parseInt(Holidays[k].y)!=0)))
				{
					sStyle += "background-color:" + holidayColor + ";";
					sHint += sHint == "" ? Holidays[k].desc : "\n" + Holidays[k].desc;
				}
			}
		}

		var regexp= /\"/g;
		sHint=sHint.replace(regexp,"&quot;");

		
		var strDisable="href='javascript:dateSelected=" + datePointer + " ;closeCalendar(\"" + ctlId + "\");'";
		
		var disableThisDate=false;
		
		dateMessage="onmousemove='window.status=\"" + selectDateMessage + "\"' onmouseout='window.status=\"\"' ";
		
		if (document.allowPastSelection != null && !document.allowPastSelection && ((yearSelected < yearNow) || (yearSelected == yearNow && monthSelected < monthNow) || (yearSelected == yearNow && monthSelected == monthNow && datePointer < dateNow)))
		{
			strDisable=" disabled='disabled'";
			disableThisDate=true;
			dateMessage="";
		}
		



		if ((datePointer == dateNow) && (monthSelected == monthNow) && (yearSelected == yearNow))
		{ 
			sHTML += "<b><a " + dateMessage + " title=\"" + sHint + "\" style='"+sStyle+"'" + strDisable + "><font color=" + todayColor + ">&nbsp;" + datePointer + "</font>&nbsp;</a></b>";
		}
		else if	(dayPointer % 7 == (startAt * -1) +1) //Sunday
		{ 
			sHTML += "<a " + dateMessage + " title=\"" + sHint + "\" style='" + sStyle + "'" + strDisable + ">&nbsp;<font color=" + sundayColor + ">" + datePointer + "</font>&nbsp;</a>";
		}

		else
		{ 
			sHTML += "<a " + dateMessage + " title=\"" + sHint + "\" style='" + sStyle + "'" + strDisable + ">&nbsp;" + datePointer + "&nbsp;</a>";
		}
		
		sHTML += "";
		
		if ((dayPointer + startAt) % 7 == startAt) 
		{
			sHTML += "</tr><tr>";
			if (showWeekNumber && (datePointer < numDaysInMonth))
			{
				sHTML += "<td align=right>" + (WeekNbr(new Date(yearSelected,monthSelected,datePointer+1))) + "&nbsp;</td>";
			}
		}
	}

	document.getElementById("content").innerHTML = sHTML;
	document.getElementById("spanMonth").innerHTML = "&nbsp;" +	monthName[monthSelected] + "&nbsp;<IMG id='changeMonth' SRC='" + imgDir + drop1Gif + "' WIDTH='12' HEIGHT='10' BORDER=0>";
	document.getElementById("spanYear").innerHTML =	"&nbsp;" + yearSelected	+ "&nbsp;<IMG id='changeYear' SRC='" + imgDir + drop1Gif + "' WIDTH='12' HEIGHT='10' BORDER=0>";
}

function popUpCalendar(ctl,	ctl2, format) 
{
	var	leftpos = 0;
	var	toppos = 0;
	
	if (!ctl.loaded)
	{
		init(ctl.id);
	}
	
	if (bPageLoaded)
	{

		
		if (crossobj.visibility ==	(dom||ie) ? "hidden" : "hide")
		{
			ctlToPlaceValue	= ctl2;
			dateFormat = format;

			formatChar = " ";
			aFormat	= dateFormat.split(formatChar);
			
			if (aFormat.length<3)
			{
				formatChar = "/";
				aFormat	= dateFormat.split(formatChar);
				if (aFormat.length < 3)
				{
					formatChar=".";
					aFormat	= dateFormat.split(formatChar);
					if (aFormat.length < 3)
					{
						formatChar = "-";
						aFormat	= dateFormat.split(formatChar);
						if (aFormat.length < 3)
						{
						// invalid date	format
							formatChar="";
						}
					}
				}
			}

			tokensChanged =	0;
			if (formatChar	!= "")
			{
			// use user's date
				aData =	ctl2.value.split(formatChar);

				for	(i = 0; i < 3; i++)
				{
					if ((aFormat[i] == "d") || (aFormat[i] == "dd"))
					{
						dateSelected = parseInt(aData[i], 10);
						tokensChanged++;
					}
					else if	((aFormat[i] == "m") || (aFormat[i] == "mm"))
					{
						monthSelected =	parseInt(aData[i], 10) - 1;
						tokensChanged++;
					}
					else if	(aFormat[i] == "yyyy")
					{
						yearSelected = parseInt(aData[i], 10);
						tokensChanged++;
					}
					else if	(aFormat[i] == "MMM" || aFormat[i] == "MMM-")
					{
						for	(j=0; j<12;	j++)
						{
							if (aData[i] == monthName[j])
							{
								monthSelected = j;
								tokensChanged++;
							}
						}
					}
				}
			}

			if ((tokensChanged != 3) || isNaN(dateSelected) || isNaN(monthSelected) || isNaN(yearSelected))
			{
				dateSelected = dateNow;
				monthSelected =	monthNow;
				yearSelected = yearNow;
			} 
			
						
			if (document.allowPastSelection != null && !document.allowPastSelection) //hide or show the left arrow
			{
				spanLeftObj = (dom) ? document.getElementById("spanLeft") : ie ? document.all.spanLeft : document.spanLeft;

				if (monthSelected != monthNow || yearSelected != yearNow)
				{
					spanLeftObj.style.visibility = (dom||ie) ? "visible" : "show";
				}  
				else
				{
					spanLeftObj.style.visibility = (dom||ie) ? "hidden" : "hide";
				}
			}

			odateSelected = dateSelected;
			omonthSelected = monthSelected;
			oyearSelected = yearSelected;

			var aTag;
			aTag = ctl;

			do {
			    if (aTag != null) {
			        aTag = aTag.offsetParent;
			    }
			    if (aTag != null) {
			        leftpos += aTag.offsetLeft;
			    }
			    if (aTag != null) {
			        toppos += aTag.offsetTop;
			    }
			    if (aTag == null) break;		
			} while (aTag.tagName != "BODY")

			crossobj.left =	ctl.offsetLeft + leftpos + ctl.xPos + 'px';
			crossobj.top = ctl.offsetHeight + ctl.offsetTop + toppos - ctl.yPos + 'px';
			constructCalendar (ctl.id);
			crossobj.visibility = (dom||ie) ? "visible" : "show";

			hideElement('SELECT', document.getElementById("calendar"));
			hideElement('APPLET', document.getElementById("calendar"));

			bShow=true;
		}
		else
		{
			hideCalendar();
			if (ctlNow != ctl) 
			{
				popUpCalendar(ctl, ctl2, format);
			}
		}
		ctlNow = ctl;
		DetermineTimePickerEnabled(ctl.timePickerID, ctl.id);
	}

}

function DetermineTimePickerEnabled(strTimePickerID, ctlId)
{
		if (strTimePickerID == "")
	{
		return;
	}
	if (dom)
	{
		timePickerObj = document.getElementById(strTimePickerID + "_timePickerTxt");
		
		if (timePickerObj == null)
		{
			return;
		}
		
		if (dateSelected != null && document.getElementById(ctlId).value.length > 0)
		{
			timePickerObj.disabled = false;
			if (dateSelected == dateNow && monthSelected == monthNow && yearSelected == yearNow)
			{
				valiDateTimePicker(null); //don't let the user keep an earlier time selection on today's date
			}
			
		} 
		else
		{
			if (!startWithDate)
			{
				timePickerObj.disabled = "disabled"; //have to select date first
			}
		}
	}
}


document.onclick=function hidecal2 () 
{
	if (!bShow)
	{
		hideCalendar();
	}
	bShow=false;
}

function DPickerShowHideButtons(ctlId, show)
{
	var buttonsSpan = document.getElementById(ctlId + "_Buttons");
	
	if(buttonsSpan)
	{
		if(show)
		{
			buttonsSpan.style.display = 'block';
		}
		else
		{
			buttonsSpan.style.display = 'none';
		}
	}
	
	var arrow = document.getElementById(ctlId + "_ArrowImg");
	
	if(arrow)
	{
		if(show)
		{
			arrow.src = arrow.src.replace('arrow_small_right', 'arrow_small_down');
		}
		else
		{
			arrow.src = arrow.src.replace('arrow_small_down', 'arrow_small_right');
		}
	}
}

function DPickerAreButtonsShown(ctlId)
{
	var buttonsSpan = document.getElementById(ctlId + "_Buttons");
	
	if(buttonsSpan && buttonsSpan.style.display == 'block')
	{
		return true;
	}
	else
	{
		return false;
	}
}

function DPickerHideOldButtons()
{
	if(ctlToPlaceValue)
	{
		var ctlId = ctlToPlaceValue.id.replace('_DatePickerTxt', '');
		DPickerShowHideButtons(ctlId, false);
	}
}

function DPickerArrowClicked(ctlId, format)
{
	var isShown = DPickerAreButtonsShown(ctlId);

	hideCalendar(); // calls DPickerHideOldButtons(); 
	bShow=false;
	DPickerShowHideButtons(ctlId, !isShown);
	DPickerFlipTextboxAndLabel(ctlId, !isShown);
	
	if(!isShown)
	{
		var ctl = document.getElementById(ctlId + "_DatePickerTxt");
		popUpCalendar(ctl, ctl, format);
		DPickerSetFocus(ctlId + "_DatePickerTxt");
	}
}

function DPickerFlipTextboxAndLabel(ctlId, showTextbox)
{
	var textbox = document.getElementById(ctlId + "_TextboxDiv");
	var labelTable = document.getElementById(ctlId + "_LabelTable");
	
	if(textbox)
	{
		if(showTextbox)
		{
			textbox.style.display = 'block';
			
			if(labelTable)
			{
				labelTable.style.display = 'none';
			}
		}
		else
		{
			if(labelTable)
			{
				labelTable.style.display = 'block';
				textbox.style.display = 'none';
			}
			else
			{
				textbox.style.display = 'block';
			}
		}
	}
}

function DPickerSetFocus(ctlId)
{
	var ctl = document.getElementById(ctlId);
	
	if(ctl)
	{
		ctl.focus();
	}
}

function DPickerTextBoxClicked(ctlId, format)
{
	DPickerHideOldButtons(); 
	
	var ctl = document.getElementById(ctlId + "_DatePickerTxt");
	popUpCalendar(ctl, ctl, format);
	
	DPickerShowHideButtons(ctlId, true);
}

function DPickerHandleKeydown(ctlId, evt)
{
	var key;

	try //IE (has to be first!)
	{
        key = event.keyCode;
		if (key == 27)
		{
			event.returnValue = false;
		}
	}
	catch (e) // not IE
	{
        key = evt.keyCode;
	}
	
	if (key == 27) //escape
	{
		hideCalendar();
		bShow=false;
		DPickerShowHideButtons(ctlId, false);
		return false;
	}

	return true;
}
