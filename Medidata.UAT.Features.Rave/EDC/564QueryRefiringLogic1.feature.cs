// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.8.1.0
//      SpecFlow Generator Version:1.8.0.0
//      Runtime Version:4.0.30319.225
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Medidata.UAT.Features.Rave.EDC
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.8.1.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class QueryIssueEditChecksWithRequireResponseAndRequireManualCloseFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "564QueryRefiringLogic1.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Query Issue: Edit Checks with require response and require manual close", "Open, answer and close a query, change the data and verify that the query did re-" +
                    "fire and verify no log", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((TechTalk.SpecFlow.FeatureContext.Current != null) 
                        && (TechTalk.SpecFlow.FeatureContext.Current.FeatureInfo.Title != "Query Issue: Edit Checks with require response and require manual close")))
            {
                Medidata.UAT.Features.Rave.EDC.QueryIssueEditChecksWithRequireResponseAndRequireManualCloseFeature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        public virtual void FeatureBackground()
        {
#line 4
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "User",
                        "Study",
                        "Role",
                        "Site",
                        "Site Number"});
            table1.AddRow(new string[] {
                        "editcheck",
                        "Edit Check Study 1",
                        "cdm1",
                        "Edit Check Site 1",
                        "10001"});
#line 5
 testRunner.Given("Rave has user-study-site assignments from the table below:", ((string)(null)), table1);
#line 8
    testRunner.And("Role \"cdm1\" has \"Query\" Action");
#line 9
 testRunner.And("Study  \"Edit Check Study\" has Draft \"<Draft1>\"");
#line 10
 testRunner.And("CRF \"CRF Version<RANDOMNUMBER>\" is pushed in Site \"Edit Check Site\"");
#line 11
 testRunner.When("I login to Rave with user \"DefaultUser\"");
#line hidden
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("Verifies query firing between cross forms with require response and require manua" +
            "l close. 1")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Issue: Edit Checks with require response and require manual close")]
        public virtual void VerifiesQueryFiringBetweenCrossFormsWithRequireResponseAndRequireManualClose_1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Verifies query firing between cross forms with require response and require manua" +
                    "l close. 1", new string[] {
                        "Web",
                        "PB_1.1"});
#line 15
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 19
 testRunner.When("I select Study \"Edit Check Study 1\" and Site \"ZhanSite\"");
#line 20
    testRunner.And("I create a Subject \"sub<RND_NUM,3>\"");
#line 21
 testRunner.And("I select Folder \"Test A Single Edit\"");
#line 22
 testRunner.And("I select Form \"Informed Consent Date Form 1\"");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table2.AddRow(new string[] {
                        "Informed Consent Date 1",
                        "09 Jan 2000"});
            table2.AddRow(new string[] {
                        "Informed Consent Date 2",
                        "10 Jan 2000"});
            table2.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table2.AddRow(new string[] {
                        "Numeric Field 2",
                        "19"});
#line 23
 testRunner.And("I enter data in CRF", ((string)(null)), table2);
#line 29
 testRunner.And("I save CRF");
#line 30
 testRunner.And("I take screenshot");
#line 31
 testRunner.And("I select Form \"Assessment Date Log2\"");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table3.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table3.AddRow(new string[] {
                        "Assessment Date 2",
                        "11 Jan 2000"});
            table3.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table3.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 32
    testRunner.And("I enter data in CRF", ((string)(null)), table3);
#line 38
 testRunner.And("I save CRF");
#line 39
 testRunner.And("I verify Field \"Assessment Date 1\" displays Query with Requires Response");
#line 40
    testRunner.And("I verify Field \"Numeric Field 2\" displays Query with Requires Response");
#line 41
 testRunner.And("I take screenshot");
#line 42
 testRunner.And("I answer the Query on Field \"Assessment Date 1\" with \"<RND_TEXT,5>\"");
#line 43
 testRunner.And("I answer the Query on Field \"Numeric Field 2\" with \"<RND_TEXT,5>\"");
#line 44
 testRunner.And("I save CRF");
#line 45
 testRunner.And("I close the Query on Field \"Assessment Date 1, Numeric Field 2\"");
#line 46
 testRunner.And("I save CRF");
#line 47
 testRunner.And("I take screenshot");
#line 49
 testRunner.And("I open Log Line 1");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table4.AddRow(new string[] {
                        "Assessment Date 1",
                        "09 Jan 2000"});
            table4.AddRow(new string[] {
                        "Numeric Field 2",
                        "19"});
#line 50
 testRunner.And("I enter data in CRF", ((string)(null)), table4);
#line 54
 testRunner.And("I save CRF");
#line 55
    testRunner.And("I verify Field \"Assessment Date 1, Numeric Field 2\" has NO Query");
#line 56
 testRunner.And("I take screenshot");
#line 57
 testRunner.And("I open Log Line 1");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table5.AddRow(new string[] {
                        "Assessment Date 1",
                        "08 Jan 2000"});
            table5.AddRow(new string[] {
                        "Numeric Field 2",
                        "20"});
#line 58
 testRunner.And("I enter data in CRF", ((string)(null)), table5);
#line 62
 testRunner.And("I save CRF");
#line 63
 testRunner.And("I verify Field \"Assessment Date 1, Numeric Field 2\" has NO Query");
#line 64
 testRunner.And("I take screenshot");
#line 65
    testRunner.And("I run SQL Script \"Query Logging Script.sql\"");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub101",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Assessment Date 1",
                        "08 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table6.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub101",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "1",
                        "Numeric Field 2",
                        "20",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 66
 testRunner.And("I should see SQL result", ((string)(null)), table6);
#line 71
 testRunner.And("I select Form \"Assessment Date Log2\" in Folder \"Test A Single Edit\"");
#line 72
    testRunner.And("I add a new Log Line");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table7.AddRow(new string[] {
                        "Assessment Date 1",
                        "07 Jan 2000"});
            table7.AddRow(new string[] {
                        "Assessment Date 2",
                        "12 Jan 2000"});
            table7.AddRow(new string[] {
                        "Numeric Field 1",
                        "10"});
            table7.AddRow(new string[] {
                        "Numeric Field 2",
                        "18"});
#line 73
 testRunner.And("I enter data in CRF", ((string)(null)), table7);
#line 79
 testRunner.And("I save CRF");
#line 80
 testRunner.And("I open Log Line 2");
#line 81
 testRunner.And("I verify Field \"Assessment Date 1\" has NO Query");
#line 82
 testRunner.And("I verify Field \"Numeric Field 2\" displays Query with Requires Response");
#line 85
 testRunner.And("I verify Field \"Assessment Date 1\" displays Query with Requires Response");
#line 86
 testRunner.And("I verify Field \"Numeric Field 2\" displays Query with Requires Response");
#line 87
 testRunner.And("I take screenshot");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table8.AddRow(new string[] {
                        "Assessment Date 1",
                        "09 Jan 2000"});
            table8.AddRow(new string[] {
                        "Numeric Field 2",
                        "19"});
#line 88
 testRunner.And("I enter data in CRF", ((string)(null)), table8);
#line 93
 testRunner.And("I answer the Query on Field \"Assessment Date 1,Numeric Field 2\"");
#line 94
 testRunner.And("I save CRF");
#line 95
 testRunner.And("I close the Query on Field \"Assessment Date 1, Numeric Field 2\"");
#line 96
 testRunner.And("I save CRF");
#line 98
 testRunner.And("I take screenshot");
#line 99
 testRunner.And("I verify Field \"Assessment Date 1,Numeric Field 2\" has NO Query");
#line 100
 testRunner.And("I take screenshot");
#line 101
 testRunner.And("I open Log Line 2");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Field",
                        "Data"});
            table9.AddRow(new string[] {
                        "Assessment Date 1",
                        "07 Jan 2000"});
            table9.AddRow(new string[] {
                        "Numeric Field 2",
                        "18"});
#line 102
 testRunner.And("I enter data in CRF", ((string)(null)), table9);
#line 107
 testRunner.And("I save CRF");
#line 108
 testRunner.And("I verify Field \"Assessment Date 1,Numeric Field 2\" has NO Query");
#line 109
 testRunner.And("I take screenshot");
#line 111
    testRunner.And("I run SQL Script \"Query Logging Script.sql\"");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ProjectName",
                        "SiteNumber",
                        "SiteName",
                        "Environment",
                        "SubjectName",
                        "CheckActionInstanceName",
                        "CheckActionInstanceDataPageName",
                        "CheckActionRecordPosition",
                        "CheckActionFieldName",
                        "CheckActionFieldData",
                        "TriggerFieldInstanceName",
                        "TriggerFieldInstanceDatapageName",
                        "TriggerFieldRecordPosition",
                        "TriggerFieldName",
                        "TriggerFieldData",
                        "EditCheckName",
                        "MarkingGroupName",
                        "QueryMessage",
                        "EventTime"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub101",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Assessment Date 1",
                        "07 Jan 2000",
                        "*Greater Than Open Query Log Cross Form",
                        "Marking Group 1",
                        "Informed Consent Date 1 is greater. Please revise.",
                        "{DateTime}"});
            table10.AddRow(new string[] {
                        "Edit Check Study 1",
                        "10001",
                        "Edit Check Site 1",
                        "PROD",
                        "sub101",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "Test A Single Edit",
                        "Assessment Date Log2",
                        "2",
                        "Numeric Field 2",
                        "18",
                        "*Is Not Equal to Open Query Log Cross Form*",
                        "Site",
                        "Informed Consent numeric field 2 is not equal to assessment numeric field 2",
                        "{DateTime}"});
#line 112
 testRunner.And("I should NOT see SQL result", ((string)(null)), table10);
#line 116
 testRunner.And("I take screenshot");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("2")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "Query Issue: Edit Checks with require response and require manual close")]
        public virtual void _2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("2", new string[] {
                        "Web",
                        "PB_1.1"});
#line 120
this.ScenarioSetup(scenarioInfo);
#line 4
this.FeatureBackground();
#line 122
 testRunner.When("I select Study \"Edit Check Study 1\" and Site \"ZhanSite\"");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
