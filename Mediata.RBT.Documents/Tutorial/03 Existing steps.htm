<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
	<head>
		<title>03 Existing steps</title>
	</head>
	<link rel="stylesheet" href="site.css" type="text/css" />
	<body>
	
		<h1>
			03 Existing steps</h1>
		<p>
			Step definitions are .net methods with an attribute on it. The attribute gives 
			the match information.<br />
			<strong>In the later text, &#39;step&#39; can mean either the &#39;step in feature file&#39; or 
			the &#39;step definition method&#39; depending on the context.</strong></p>
		<p>
			There are common steps a well as steps 
            domain specific ones (only for Rave).<br />
			You can find them in
		    the 2 projects:</p>
		<ul>
			<li>Medidata.RBT.Common.Steps</li>
			<li>Medidata.RBT.Features.Rave</li>
		</ul>
		<p>
			Exampes of common steps:</p>
		<ul>
			<li>I click &quot;Commit&quot; button</li>
			<li>I navigate to url &quot;http://www.bing.com&quot;</li>
			<li>I switch to &quot;Targeted SDV Study Plan&quot; window<br />
				<br />
				Although the value inside quotes is a rave thing, the step it self is 
				indeed a common 
				step.</li>
		</ul>
		<p>
			Examples of Rave speficif steps:</p>
		<ul>
			<li>Then I verify that Tiers in subject override table are not in the following 
				order
				<br />
&nbsp;&nbsp;&nbsp; | Tier Name | Row |<br />
&nbsp;&nbsp;&nbsp; |&nbsp; All Forms | 1 |<br />
&nbsp;&nbsp;&nbsp; | No Forms | 2 |</li>
			<li>And I select Report &quot;Targeted SDV Configuration&quot;</li>
		</ul>
		<h2>
			3 ways to learn about existing steps:</h2>
		<ul>
			<li>Read existing feature files. </li>
			<li>Read step definition methods. </li>
			<li>Read the step definition report in Medidata.RBT.Documents<br />
				Run this project to update report , 
				then open the report in Templates folder.<br />
				<img src="03/steps report.jpg" /></li>
		</ul>
	
		<h2>
			Guidelines for choosing which step to use</h2>
		<ul>
			<li>Prefer using existing steps than creating a new step.<br />
				<br />
				For example if you want to verify the study dropdown exists, use the common 
				step:<br />
				<strong>I verify control &quot;Study&quot; exists</strong><br />
				Don&#39;t write your step:<strong>
				<br />
				I verify the study dropdown exists.</strong><br />
				<br />
				To programmerStep definition method can be very adaptive because in most cases it is calling 
                methods defined on interfaces. The methods have default implementation, but you 
			    can override them if you want to change the behavior a little bit.&nbsp; See <a href="05 Page object pattern.htm"> 05 
                Page object pattern</a> for more details</li>
			<li>If you have to create a new step, prefer writing a common step def than writing 
                a domain specific step</li>
			<li>Finally, if you have to write a new domain specific step, the literal should be very specifc to 
				describe your domain-specific problem. Don&#39;t let it looks like a common method.</li>
		</ul>
	
	</body>
</html>